/* Generated by Cython 0.14.1 on Tue Mar 05 15:51:23 2013 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#else

#include <stddef.h> /* For offsetof */
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif

#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif

#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif

#if PY_VERSION_HEX < 0x02040000
  #define METH_COEXIST 0
  #define PyDict_CheckExact(op) (Py_TYPE(op) == &PyDict_Type)
  #define PyDict_Contains(d,o)   PySequence_Contains(d,o)
#endif

#if PY_VERSION_HEX < 0x02050000
  typedef int Py_ssize_t;
  #define PY_SSIZE_T_MAX INT_MAX
  #define PY_SSIZE_T_MIN INT_MIN
  #define PY_FORMAT_SIZE_T ""
  #define PyInt_FromSsize_t(z) PyInt_FromLong(z)
  #define PyInt_AsSsize_t(o)   PyInt_AsLong(o)
  #define PyNumber_Index(o)    PyNumber_Int(o)
  #define PyIndex_Check(o)     PyNumber_Check(o)
  #define PyErr_WarnEx(category, message, stacklevel) PyErr_Warn(category, message)
#endif

#if PY_VERSION_HEX < 0x02060000
  #define Py_REFCNT(ob) (((PyObject*)(ob))->ob_refcnt)
  #define Py_TYPE(ob)   (((PyObject*)(ob))->ob_type)
  #define Py_SIZE(ob)   (((PyVarObject*)(ob))->ob_size)
  #define PyVarObject_HEAD_INIT(type, size) \
          PyObject_HEAD_INIT(type) size,
  #define PyType_Modified(t)

  typedef struct {
     void *buf;
     PyObject *obj;
     Py_ssize_t len;
     Py_ssize_t itemsize;
     int readonly;
     int ndim;
     char *format;
     Py_ssize_t *shape;
     Py_ssize_t *strides;
     Py_ssize_t *suboffsets;
     void *internal;
  } Py_buffer;

  #define PyBUF_SIMPLE 0
  #define PyBUF_WRITABLE 0x0001
  #define PyBUF_FORMAT 0x0004
  #define PyBUF_ND 0x0008
  #define PyBUF_STRIDES (0x0010 | PyBUF_ND)
  #define PyBUF_C_CONTIGUOUS (0x0020 | PyBUF_STRIDES)
  #define PyBUF_F_CONTIGUOUS (0x0040 | PyBUF_STRIDES)
  #define PyBUF_ANY_CONTIGUOUS (0x0080 | PyBUF_STRIDES)
  #define PyBUF_INDIRECT (0x0100 | PyBUF_STRIDES)

#endif

#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
#endif

#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif

#if (PY_VERSION_HEX < 0x02060000) || (PY_MAJOR_VERSION >= 3)
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif

#if PY_VERSION_HEX < 0x02060000
  #define PyBytesObject                PyStringObject
  #define PyBytes_Type                 PyString_Type
  #define PyBytes_Check                PyString_Check
  #define PyBytes_CheckExact           PyString_CheckExact
  #define PyBytes_FromString           PyString_FromString
  #define PyBytes_FromStringAndSize    PyString_FromStringAndSize
  #define PyBytes_FromFormat           PyString_FromFormat
  #define PyBytes_DecodeEscape         PyString_DecodeEscape
  #define PyBytes_AsString             PyString_AsString
  #define PyBytes_AsStringAndSize      PyString_AsStringAndSize
  #define PyBytes_Size                 PyString_Size
  #define PyBytes_AS_STRING            PyString_AS_STRING
  #define PyBytes_GET_SIZE             PyString_GET_SIZE
  #define PyBytes_Repr                 PyString_Repr
  #define PyBytes_Concat               PyString_Concat
  #define PyBytes_ConcatAndDel         PyString_ConcatAndDel
#endif

#if PY_VERSION_HEX < 0x02060000
  #define PySet_Check(obj)             PyObject_TypeCheck(obj, &PySet_Type)
  #define PyFrozenSet_Check(obj)       PyObject_TypeCheck(obj, &PyFrozenSet_Type)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif

#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)

#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#if (PY_MAJOR_VERSION < 3) || (PY_VERSION_HEX >= 0x03010300)
  #define __Pyx_PySequence_GetSlice(obj, a, b) PySequence_GetSlice(obj, a, b)
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) PySequence_SetSlice(obj, a, b, value)
  #define __Pyx_PySequence_DelSlice(obj, a, b) PySequence_DelSlice(obj, a, b)
#else
  #define __Pyx_PySequence_GetSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), (PyObject*)0) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_GetSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object is unsliceable", (obj)->ob_type->tp_name), (PyObject*)0)))
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_SetSlice(obj, a, b, value)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice assignment", (obj)->ob_type->tp_name), -1)))
  #define __Pyx_PySequence_DelSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_DelSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice deletion", (obj)->ob_type->tp_name), -1)))
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#endif

#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),((char *)(n)))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),((char *)(n)),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),((char *)(n)))
#else
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),(n))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),(n),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),(n))
#endif

#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_NAMESTR(n) ((char *)(n))
  #define __Pyx_DOCSTR(n)  ((char *)(n))
#else
  #define __Pyx_NAMESTR(n) (n)
  #define __Pyx_DOCSTR(n)  (n)
#endif

#ifdef __cplusplus
#define __PYX_EXTERN_C extern "C"
#else
#define __PYX_EXTERN_C extern
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE_API__pyspades__world
#include "vxl_c.cpp"
#include "common_c.h"
#include "math.h"
#include "world_c.cpp"

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif


/* inline attribute */
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif

/* unused attribute */
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || defined(__INTEL_COMPILER)
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif

typedef struct {PyObject **p; char *s; const long n; const char* encoding; const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry; /*proto*/


/* Type Conversion Predeclarations */

#define __Pyx_PyBytes_FromUString(s) PyBytes_FromString((char*)s)
#define __Pyx_PyBytes_AsUString(s)   ((unsigned char*) PyBytes_AsString(s))

#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);

static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject*);

#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))


#ifdef __GNUC__
/* Test for GCC > 2.95 */
#if __GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95))
#define likely(x)   __builtin_expect(!!(x), 1)
#define unlikely(x) __builtin_expect(!!(x), 0)
#else /* __GNUC__ > 2 ... */
#define likely(x)   (x)
#define unlikely(x) (x)
#endif /* __GNUC__ > 2 ... */
#else /* __GNUC__ */
#define likely(x)   (x)
#define unlikely(x) (x)
#endif /* __GNUC__ */
    
static PyObject *__pyx_m;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "world.pyx",
  "common.pxd",
  "vxl.pxd",
};

/* Type declarations */

/* "pyspades\vxl.pxd":37
 *     cpdef get_color(self, int x, int y, int z)
 *     cpdef tuple get_random_point(self, int x1, int y1, int x2, int y2)
 *     cpdef int get_z(self, int x, int y, int start = ?)             # <<<<<<<<<<<<<<
 *     cpdef int get_height(self, int x, int y)
 *     cpdef bint has_neighbors(self, int x, int y, int z)
 */

struct __pyx_opt_args_8pyspades_3vxl_7VXLData_get_z {
  int __pyx_n;
  int start;
};

/* "pyspades\vxl.pxd":42
 *     cpdef bint is_surface(self, int x, int y, int z)
 *     cpdef list get_neighbors(self, int x, int y, int z)
 *     cpdef bint check_node(self, int x, int y, int z, bint destroy = ?)             # <<<<<<<<<<<<<<
 *     cpdef bint build_point(self, int x, int y, int z, tuple color)
 *     cpdef bint set_column_fast(self, int x, int y, int start_z,
 */

struct __pyx_opt_args_8pyspades_3vxl_7VXLData_check_node {
  int __pyx_n;
  int destroy;
};

/* "pyspades\world.pyx":165
 *             x, y, z)
 * 
 *     cpdef cast_ray(self, length = 32.0):             # <<<<<<<<<<<<<<
 *         cdef Vertex3 position = self.position
 *         cdef Vertex3 direction = self.orientation.copy().normal()
 */

struct __pyx_opt_args_8pyspades_5world_9Character_cast_ray {
  int __pyx_n;
  PyObject *length;
};

/* "pyspades\world.pyx":76
 *     return c_cast_ray(map.map, x1, y1, z1, x2, y2, z2, length, x, y, z)
 * 
 * cdef class Object             # <<<<<<<<<<<<<<
 * cdef class World
 * cdef class Grenade
 */

struct __pyx_obj_8pyspades_5world_Object {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pyspades_5world_Object *__pyx_vtab;
  PyObject *name;
  struct __pyx_obj_8pyspades_5world_World *world;
};

/* "pyspades\world.pyx":78
 * cdef class Object
 * cdef class World
 * cdef class Grenade             # <<<<<<<<<<<<<<
 * cdef class Character
 * 
 */

struct __pyx_obj_8pyspades_5world_Grenade {
  struct __pyx_obj_8pyspades_5world_Object __pyx_base;
  struct __pyx_obj_8pyspades_6common_Vertex3 *position;
  struct __pyx_obj_8pyspades_6common_Vertex3 *velocity;
  float fuse;
  PyObject *callback;
  PyObject *team;
  struct GrenadeType *grenade;
};

/* "pyspades\vxl.pxd":31
 *     void update_shadows(MapData * map)
 * 
 * cdef class VXLData:             # <<<<<<<<<<<<<<
 *     cdef MapData * map
 * 
 */

struct __pyx_obj_8pyspades_3vxl_VXLData {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pyspades_3vxl_VXLData *__pyx_vtab;
  struct MapData *map;
};

/* "pyspades\common.pxd":47
 * 
 * cdef class Quaternion
 * cdef class Vertex3:             # <<<<<<<<<<<<<<
 *     cdef Vector * value
 *     cdef bint is_ref
 */

struct __pyx_obj_8pyspades_6common_Vertex3 {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pyspades_6common_Vertex3 *__pyx_vtab;
  struct Vector *value;
  int is_ref;
};

/* "pyspades\world.pyx":79
 * cdef class World
 * cdef class Grenade
 * cdef class Character             # <<<<<<<<<<<<<<
 * 
 * cdef class Object:
 */

struct __pyx_obj_8pyspades_5world_Character {
  struct __pyx_obj_8pyspades_5world_Object __pyx_base;
  struct PlayerType *player;
  struct __pyx_obj_8pyspades_6common_Vertex3 *position;
  struct __pyx_obj_8pyspades_6common_Vertex3 *orientation;
  struct __pyx_obj_8pyspades_6common_Vertex3 *velocity;
  PyObject *fall_callback;
};

/* "pyspades\common.pxd":46
 *     return 0
 * 
 * cdef class Quaternion             # <<<<<<<<<<<<<<
 * cdef class Vertex3:
 *     cdef Vector * value
 */

struct __pyx_obj_8pyspades_6common_Quaternion {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pyspades_6common_Quaternion *__pyx_vtab;
  double w;
  double x;
  double y;
  double z;
};

/* "pyspades\world.pyx":77
 * 
 * cdef class Object
 * cdef class World             # <<<<<<<<<<<<<<
 * cdef class Grenade
 * cdef class Character
 */

struct __pyx_obj_8pyspades_5world_World {
  PyObject_HEAD
  struct __pyx_vtabstruct_8pyspades_5world_World *__pyx_vtab;
  struct __pyx_obj_8pyspades_3vxl_VXLData *map;
  PyObject *objects;
  float time;
};


/* "pyspades\world.pyx":360
 *         destroy_grenade(self.grenade)
 * 
 * cdef class World(object):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         VXLData map
 */

struct __pyx_vtabstruct_8pyspades_5world_World {
  PyObject *(*delete_object)(struct __pyx_obj_8pyspades_5world_World *, struct __pyx_obj_8pyspades_5world_Object *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_8pyspades_5world_World *__pyx_vtabptr_8pyspades_5world_World;


/* "pyspades\common.pxd":46
 *     return 0
 * 
 * cdef class Quaternion             # <<<<<<<<<<<<<<
 * cdef class Vertex3:
 *     cdef Vector * value
 */

struct __pyx_vtabstruct_8pyspades_6common_Quaternion {
  struct __pyx_obj_8pyspades_6common_Quaternion *(*set_angle_axis)(struct __pyx_obj_8pyspades_6common_Quaternion *, double, struct __pyx_obj_8pyspades_6common_Vertex3 *, int __pyx_skip_dispatch);
  struct __pyx_obj_8pyspades_6common_Quaternion *(*slerp)(struct __pyx_obj_8pyspades_6common_Quaternion *, struct __pyx_obj_8pyspades_6common_Quaternion *, double, int __pyx_skip_dispatch);
  struct __pyx_obj_8pyspades_6common_Quaternion *(*nlerp)(struct __pyx_obj_8pyspades_6common_Quaternion *, struct __pyx_obj_8pyspades_6common_Quaternion *, double, int __pyx_skip_dispatch);
  struct __pyx_obj_8pyspades_6common_Vertex3 *(*transform_vector)(struct __pyx_obj_8pyspades_6common_Quaternion *, struct __pyx_obj_8pyspades_6common_Vertex3 *, int __pyx_skip_dispatch);
  struct __pyx_obj_8pyspades_6common_Vertex3 *(*inverse_transform_vector)(struct __pyx_obj_8pyspades_6common_Quaternion *, struct __pyx_obj_8pyspades_6common_Vertex3 *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_8pyspades_6common_Quaternion *__pyx_vtabptr_8pyspades_6common_Quaternion;


/* "pyspades\world.pyx":81
 * cdef class Character
 * 
 * cdef class Object:             # <<<<<<<<<<<<<<
 *     cdef public:
 *         object name
 */

struct __pyx_vtabstruct_8pyspades_5world_Object {
  int (*update)(struct __pyx_obj_8pyspades_5world_Object *, double);
};
static struct __pyx_vtabstruct_8pyspades_5world_Object *__pyx_vtabptr_8pyspades_5world_Object;


/* "pyspades\world.pyx":101
 *         self.world.delete_object(self)
 * 
 * cdef class Character(Object):             # <<<<<<<<<<<<<<
 *     cdef:
 *         PlayerType * player
 */

struct __pyx_vtabstruct_8pyspades_5world_Character {
  struct __pyx_vtabstruct_8pyspades_5world_Object __pyx_base;
  int (*can_see)(struct __pyx_obj_8pyspades_5world_Character *, float, float, float, int __pyx_skip_dispatch);
  PyObject *(*cast_ray)(struct __pyx_obj_8pyspades_5world_Character *, int __pyx_skip_dispatch, struct __pyx_opt_args_8pyspades_5world_9Character_cast_ray *__pyx_optional_args);
};
static struct __pyx_vtabstruct_8pyspades_5world_Character *__pyx_vtabptr_8pyspades_5world_Character;


/* "pyspades\vxl.pxd":31
 *     void update_shadows(MapData * map)
 * 
 * cdef class VXLData:             # <<<<<<<<<<<<<<
 *     cdef MapData * map
 * 
 */

struct __pyx_vtabstruct_8pyspades_3vxl_VXLData {
  PyObject *(*get_solid)(struct __pyx_obj_8pyspades_3vxl_VXLData *, int, int, int, int __pyx_skip_dispatch);
  PyObject *(*get_color)(struct __pyx_obj_8pyspades_3vxl_VXLData *, int, int, int, int __pyx_skip_dispatch);
  PyObject *(*get_random_point)(struct __pyx_obj_8pyspades_3vxl_VXLData *, int, int, int, int, int __pyx_skip_dispatch);
  int (*get_z)(struct __pyx_obj_8pyspades_3vxl_VXLData *, int, int, int __pyx_skip_dispatch, struct __pyx_opt_args_8pyspades_3vxl_7VXLData_get_z *__pyx_optional_args);
  int (*get_height)(struct __pyx_obj_8pyspades_3vxl_VXLData *, int, int, int __pyx_skip_dispatch);
  int (*has_neighbors)(struct __pyx_obj_8pyspades_3vxl_VXLData *, int, int, int, int __pyx_skip_dispatch);
  int (*is_surface)(struct __pyx_obj_8pyspades_3vxl_VXLData *, int, int, int, int __pyx_skip_dispatch);
  PyObject *(*get_neighbors)(struct __pyx_obj_8pyspades_3vxl_VXLData *, int, int, int, int __pyx_skip_dispatch);
  int (*check_node)(struct __pyx_obj_8pyspades_3vxl_VXLData *, int, int, int, int __pyx_skip_dispatch, struct __pyx_opt_args_8pyspades_3vxl_7VXLData_check_node *__pyx_optional_args);
  int (*build_point)(struct __pyx_obj_8pyspades_3vxl_VXLData *, int, int, int, PyObject *, int __pyx_skip_dispatch);
  int (*set_column_fast)(struct __pyx_obj_8pyspades_3vxl_VXLData *, int, int, int, int, int, int, int __pyx_skip_dispatch);
  PyObject *(*update_shadows)(struct __pyx_obj_8pyspades_3vxl_VXLData *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_8pyspades_3vxl_VXLData *__pyx_vtabptr_8pyspades_3vxl_VXLData;


/* "pyspades\common.pxd":47
 * 
 * cdef class Quaternion
 * cdef class Vertex3:             # <<<<<<<<<<<<<<
 *     cdef Vector * value
 *     cdef bint is_ref
 */

struct __pyx_vtabstruct_8pyspades_6common_Vertex3 {
  struct __pyx_obj_8pyspades_6common_Quaternion *(*get_rotation_to)(struct __pyx_obj_8pyspades_6common_Vertex3 *, struct __pyx_obj_8pyspades_6common_Vertex3 *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_8pyspades_6common_Vertex3 *__pyx_vtabptr_8pyspades_6common_Vertex3;


/* "pyspades\world.pyx":291
 *             self.player.secondary_fire = value
 * 
 * cdef class Grenade(Object):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         Vertex3 position, velocity
 */

struct __pyx_vtabstruct_8pyspades_5world_Grenade {
  struct __pyx_vtabstruct_8pyspades_5world_Object __pyx_base;
  int (*hit_test)(struct __pyx_obj_8pyspades_5world_Grenade *, struct __pyx_obj_8pyspades_6common_Vertex3 *);
  PyObject *(*get_next_collision)(struct __pyx_obj_8pyspades_5world_Grenade *, double, int __pyx_skip_dispatch);
  double (*get_damage)(struct __pyx_obj_8pyspades_5world_Grenade *, struct __pyx_obj_8pyspades_6common_Vertex3 *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_8pyspades_5world_Grenade *__pyx_vtabptr_8pyspades_5world_Grenade;

#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif

#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct * __Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
  end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
  }
  #define __Pyx_RefNannySetupContext(name)           void *__pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
  #define __Pyx_RefNannyFinishContext()           __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r) __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r) __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r) __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XDECREF(r) do { if((r) != NULL) {__Pyx_DECREF(r);} } while(0)
#else
  #define __Pyx_RefNannySetupContext(name)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
#endif /* CYTHON_REFNANNY */
#define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);} } while(0)
#define __Pyx_XGOTREF(r) do { if((r) != NULL) {__Pyx_GOTREF(r);} } while(0)

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name); /*proto*/

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name, PyObject* kw_name); /*proto*/

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],     PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,     const char* function_name); /*proto*/

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found); /*proto*/

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type); /*proto*/

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(PyObject *kwdict,
    const char* function_name, int kw_allowed); /*proto*/

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact); /*proto*/

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb); /*proto*/
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb); /*proto*/

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb); /*proto*/

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list); /*proto*/

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject *);

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject *);

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject *);

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject *);

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject *);

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject *);

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject *);

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject *);

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject *);

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject *);

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject *);

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject *);

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject *);

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject *);

static void __Pyx_WriteUnraisable(const char *name); /*proto*/

static CYTHON_INLINE int __Pyx_StrEq(const char *, const char *); /*proto*/

static int __Pyx_SetVtable(PyObject *dict, void *vtable); /*proto*/

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, long size, int strict);  /*proto*/

static PyObject *__Pyx_ImportModule(const char *name); /*proto*/

static void* __Pyx_GetVtable(PyObject *dict); /*proto*/

static void __Pyx_AddTraceback(const char *funcname); /*proto*/

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/
/* Module declarations from pyspades.vxl */

static PyTypeObject *__pyx_ptype_8pyspades_3vxl_VXLData = 0;
/* Module declarations from pyspades.common */

static PyTypeObject *__pyx_ptype_8pyspades_6common_Quaternion = 0;
static PyTypeObject *__pyx_ptype_8pyspades_6common_Vertex3 = 0;
static CYTHON_INLINE PyObject *__pyx_f_8pyspades_6common_allocate_memory(int, char **); /*proto*/
static CYTHON_INLINE int __pyx_f_8pyspades_6common_check_default_int(int, int); /*proto*/
static CYTHON_INLINE struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_f_8pyspades_6common_create_proxy_vector(struct Vector *); /*proto*/
static CYTHON_INLINE struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_f_8pyspades_6common_create_vertex3(float, float, float); /*proto*/
/* Module declarations from libc.math */

/* Module declarations from pyspades.world */

static PyTypeObject *__pyx_ptype_8pyspades_5world_Object = 0;
static PyTypeObject *__pyx_ptype_8pyspades_5world_World = 0;
static PyTypeObject *__pyx_ptype_8pyspades_5world_Grenade = 0;
static PyTypeObject *__pyx_ptype_8pyspades_5world_Character = 0;
static CYTHON_INLINE int __pyx_f_8pyspades_5world_can_see(struct __pyx_obj_8pyspades_3vxl_VXLData *, float, float, float, float, float, float); /*proto*/
static CYTHON_INLINE int __pyx_f_8pyspades_5world_cast_ray(struct __pyx_obj_8pyspades_3vxl_VXLData *, float, float, float, float, float, float, float, long *, long *, long *); /*proto*/
static PyObject *__pyx_f_8pyspades_5world_cube_line(PyObject *, PyObject *, PyObject *, PyObject *, PyObject *, PyObject *, int __pyx_skip_dispatch); /*proto*/
#define __Pyx_MODULE_NAME "pyspades.world"
static int __pyx_module_is_main_pyspades__world = 0;

/* Implementation of pyspades.world */
static PyObject *__pyx_builtin_xrange;
static char __pyx_k_3[] = "pyspades.exceptions";
static char __pyx_k_4[] = "check_default() failed: was %s, should be %s";
static char __pyx_k_5[] = "pyspades.constants";
static char __pyx_k_6[] = "*";
static char __pyx_k__e[] = "e";
static char __pyx_k__f[] = "f";
static char __pyx_k__p[] = "p";
static char __pyx_k__v[] = "v";
static char __pyx_k__x[] = "x";
static char __pyx_k__y[] = "y";
static char __pyx_k__z[] = "z";
static char __pyx_k__mb[] = "mb";
static char __pyx_k__mf[] = "mf";
static char __pyx_k__ml[] = "ml";
static char __pyx_k__mr[] = "mr";
static char __pyx_k__up[] = "up";
static char __pyx_k__x1[] = "x1";
static char __pyx_k__x2[] = "x2";
static char __pyx_k__y1[] = "y1";
static char __pyx_k__y2[] = "y2";
static char __pyx_k__z1[] = "z1";
static char __pyx_k__z2[] = "z2";
static char __pyx_k__get[] = "get";
static char __pyx_k__map[] = "map";
static char __pyx_k__set[] = "set";
static char __pyx_k__ARMS[] = "ARMS";
static char __pyx_k__HEAD[] = "HEAD";
static char __pyx_k__LEGS[] = "LEGS";
static char __pyx_k__copy[] = "copy";
static char __pyx_k__down[] = "down";
static char __pyx_k__fuse[] = "fuse";
static char __pyx_k__jump[] = "jump";
static char __pyx_k__left[] = "left";
static char __pyx_k__math[] = "math";
static char __pyx_k__name[] = "name";
static char __pyx_k__part[] = "part";
static char __pyx_k__team[] = "team";
static char __pyx_k__time[] = "time";
static char __pyx_k__wade[] = "wade";
static char __pyx_k__MELEE[] = "MELEE";
static char __pyx_k__TORSO[] = "TORSO";
static char __pyx_k__alive[] = "alive";
static char __pyx_k__klass[] = "klass";
static char __pyx_k__other[] = "other";
static char __pyx_k__range[] = "range";
static char __pyx_k__reset[] = "reset";
static char __pyx_k__right[] = "right";
static char __pyx_k__sneak[] = "sneak";
static char __pyx_k__value[] = "value";
static char __pyx_k__world[] = "world";
static char __pyx_k__append[] = "append";
static char __pyx_k__crouch[] = "crouch";
static char __pyx_k__delete[] = "delete";
static char __pyx_k__is_ref[] = "is_ref";
static char __pyx_k__length[] = "length";
static char __pyx_k__normal[] = "normal";
static char __pyx_k__object[] = "object";
static char __pyx_k__player[] = "player";
static char __pyx_k__remove[] = "remove";
static char __pyx_k__sprint[] = "sprint";
static char __pyx_k__update[] = "update";
static char __pyx_k__weapon[] = "weapon";
static char __pyx_k__xrange[] = "xrange";
static char __pyx_k__can_see[] = "can_see";
static char __pyx_k__grenade[] = "grenade";
static char __pyx_k__is_zero[] = "is_zero";
static char __pyx_k__objects[] = "objects";
static char __pyx_k____main__[] = "__main__";
static char __pyx_k____test__[] = "__test__";
static char __pyx_k__airborne[] = "airborne";
static char __pyx_k__callback[] = "callback";
static char __pyx_k__cast_ray[] = "cast_ray";
static char __pyx_k__hit_test[] = "hit_test";
static char __pyx_k__position[] = "position";
static char __pyx_k__set_dead[] = "set_dead";
static char __pyx_k__velocity[] = "velocity";
static char __pyx_k__character[] = "character";
static char __pyx_k__tolerance[] = "tolerance";
static char __pyx_k__get_damage[] = "get_damage";
static char __pyx_k__initialize[] = "initialize";
static char __pyx_k__set_crouch[] = "set_crouch";
static char __pyx_k__set_vector[] = "set_vector";
static char __pyx_k__InvalidData[] = "InvalidData";
static char __pyx_k__orientation[] = "orientation";
static char __pyx_k__primary_fire[] = "primary_fire";
static char __pyx_k__set_position[] = "set_position";
static char __pyx_k__delete_object[] = "delete_object";
static char __pyx_k__fall_callback[] = "fall_callback";
static char __pyx_k__secondary_fire[] = "secondary_fire";
static char __pyx_k__get_next_collision[] = "get_next_collision";
static PyObject *__pyx_n_s_3;
static PyObject *__pyx_kp_s_4;
static PyObject *__pyx_n_s_5;
static PyObject *__pyx_n_s_6;
static PyObject *__pyx_n_s__ARMS;
static PyObject *__pyx_n_s__HEAD;
static PyObject *__pyx_n_s__InvalidData;
static PyObject *__pyx_n_s__LEGS;
static PyObject *__pyx_n_s__MELEE;
static PyObject *__pyx_n_s__TORSO;
static PyObject *__pyx_n_s____main__;
static PyObject *__pyx_n_s____test__;
static PyObject *__pyx_n_s__airborne;
static PyObject *__pyx_n_s__alive;
static PyObject *__pyx_n_s__append;
static PyObject *__pyx_n_s__callback;
static PyObject *__pyx_n_s__can_see;
static PyObject *__pyx_n_s__cast_ray;
static PyObject *__pyx_n_s__character;
static PyObject *__pyx_n_s__copy;
static PyObject *__pyx_n_s__crouch;
static PyObject *__pyx_n_s__delete;
static PyObject *__pyx_n_s__delete_object;
static PyObject *__pyx_n_s__down;
static PyObject *__pyx_n_s__e;
static PyObject *__pyx_n_s__f;
static PyObject *__pyx_n_s__fall_callback;
static PyObject *__pyx_n_s__fuse;
static PyObject *__pyx_n_s__get;
static PyObject *__pyx_n_s__get_damage;
static PyObject *__pyx_n_s__get_next_collision;
static PyObject *__pyx_n_s__grenade;
static PyObject *__pyx_n_s__hit_test;
static PyObject *__pyx_n_s__initialize;
static PyObject *__pyx_n_s__is_ref;
static PyObject *__pyx_n_s__is_zero;
static PyObject *__pyx_n_s__jump;
static PyObject *__pyx_n_s__klass;
static PyObject *__pyx_n_s__left;
static PyObject *__pyx_n_s__length;
static PyObject *__pyx_n_s__map;
static PyObject *__pyx_n_s__math;
static PyObject *__pyx_n_s__mb;
static PyObject *__pyx_n_s__mf;
static PyObject *__pyx_n_s__ml;
static PyObject *__pyx_n_s__mr;
static PyObject *__pyx_n_s__name;
static PyObject *__pyx_n_s__normal;
static PyObject *__pyx_n_s__object;
static PyObject *__pyx_n_s__objects;
static PyObject *__pyx_n_s__orientation;
static PyObject *__pyx_n_s__other;
static PyObject *__pyx_n_s__p;
static PyObject *__pyx_n_s__part;
static PyObject *__pyx_n_s__player;
static PyObject *__pyx_n_s__position;
static PyObject *__pyx_n_s__primary_fire;
static PyObject *__pyx_n_s__range;
static PyObject *__pyx_n_s__remove;
static PyObject *__pyx_n_s__reset;
static PyObject *__pyx_n_s__right;
static PyObject *__pyx_n_s__secondary_fire;
static PyObject *__pyx_n_s__set;
static PyObject *__pyx_n_s__set_crouch;
static PyObject *__pyx_n_s__set_dead;
static PyObject *__pyx_n_s__set_position;
static PyObject *__pyx_n_s__set_vector;
static PyObject *__pyx_n_s__sneak;
static PyObject *__pyx_n_s__sprint;
static PyObject *__pyx_n_s__team;
static PyObject *__pyx_n_s__time;
static PyObject *__pyx_n_s__tolerance;
static PyObject *__pyx_n_s__up;
static PyObject *__pyx_n_s__update;
static PyObject *__pyx_n_s__v;
static PyObject *__pyx_n_s__value;
static PyObject *__pyx_n_s__velocity;
static PyObject *__pyx_n_s__wade;
static PyObject *__pyx_n_s__weapon;
static PyObject *__pyx_n_s__world;
static PyObject *__pyx_n_s__x;
static PyObject *__pyx_n_s__x1;
static PyObject *__pyx_n_s__x2;
static PyObject *__pyx_n_s__xrange;
static PyObject *__pyx_n_s__y;
static PyObject *__pyx_n_s__y1;
static PyObject *__pyx_n_s__y2;
static PyObject *__pyx_n_s__z;
static PyObject *__pyx_n_s__z1;
static PyObject *__pyx_n_s__z2;
static PyObject *__pyx_k_1;
static PyObject *__pyx_k_2;

/* "pyspades\world.pyx":68
 * from libc.math cimport sqrt
 * 
 * cdef inline bint can_see(VXLData map, float x1, float y1, float z1,             # <<<<<<<<<<<<<<
 *     float x2, float y2, float z2):
 *     return c_can_see(map.map, x1, y1, z1, x2, y2, z2)
 */

static CYTHON_INLINE int __pyx_f_8pyspades_5world_can_see(struct __pyx_obj_8pyspades_3vxl_VXLData *__pyx_v_map, float __pyx_v_x1, float __pyx_v_y1, float __pyx_v_z1, float __pyx_v_x2, float __pyx_v_y2, float __pyx_v_z2) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("can_see");

  /* "pyspades\world.pyx":70
 * cdef inline bint can_see(VXLData map, float x1, float y1, float z1,
 *     float x2, float y2, float z2):
 *     return c_can_see(map.map, x1, y1, z1, x2, y2, z2)             # <<<<<<<<<<<<<<
 * 
 * cdef inline bint cast_ray(VXLData map, float x1, float y1, float z1,
 */
  __pyx_r = can_see(__pyx_v_map->map, __pyx_v_x1, __pyx_v_y1, __pyx_v_z1, __pyx_v_x2, __pyx_v_y2, __pyx_v_z2);
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":72
 *     return c_can_see(map.map, x1, y1, z1, x2, y2, z2)
 * 
 * cdef inline bint cast_ray(VXLData map, float x1, float y1, float z1,             # <<<<<<<<<<<<<<
 *     float x2, float y2, float z2, float length, long* x, long* y, long* z):
 *     return c_cast_ray(map.map, x1, y1, z1, x2, y2, z2, length, x, y, z)
 */

static CYTHON_INLINE int __pyx_f_8pyspades_5world_cast_ray(struct __pyx_obj_8pyspades_3vxl_VXLData *__pyx_v_map, float __pyx_v_x1, float __pyx_v_y1, float __pyx_v_z1, float __pyx_v_x2, float __pyx_v_y2, float __pyx_v_z2, float __pyx_v_length, long *__pyx_v_x, long *__pyx_v_y, long *__pyx_v_z) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("cast_ray");

  /* "pyspades\world.pyx":74
 * cdef inline bint cast_ray(VXLData map, float x1, float y1, float z1,
 *     float x2, float y2, float z2, float length, long* x, long* y, long* z):
 *     return c_cast_ray(map.map, x1, y1, z1, x2, y2, z2, length, x, y, z)             # <<<<<<<<<<<<<<
 * 
 * cdef class Object
 */
  __pyx_r = cast_ray(__pyx_v_map->map, __pyx_v_x1, __pyx_v_y1, __pyx_v_z1, __pyx_v_x2, __pyx_v_y2, __pyx_v_z2, __pyx_v_length, __pyx_v_x, __pyx_v_y, __pyx_v_z);
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":86
 *         World world
 * 
 *     def __init__(self, world, *arg, **kw):             # <<<<<<<<<<<<<<
 *         self.world = world
 *         self.initialize(*arg, **kw)
 */

static int __pyx_pf_8pyspades_5world_6Object___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8pyspades_5world_6Object___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_world = 0;
  PyObject *__pyx_v_arg = 0;
  PyObject *__pyx_v_kw = 0;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__world,0};
  __Pyx_RefNannySetupContext("__init__");
  __pyx_v_kw = PyDict_New(); if (unlikely(!__pyx_v_kw)) return -1;
  __Pyx_GOTREF(__pyx_v_kw);
  if (PyTuple_GET_SIZE(__pyx_args) > 1) {
    __pyx_v_arg = PyTuple_GetSlice(__pyx_args, 1, PyTuple_GET_SIZE(__pyx_args)); __Pyx_GOTREF(__pyx_v_arg);

    if (unlikely(!__pyx_v_arg)) {
      __Pyx_DECREF(__pyx_v_kw);
      return -1;
    }
  } else {
    __pyx_v_arg = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      default:
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__world);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
    }
    if (unlikely(kw_args > 0)) {
      const Py_ssize_t used_pos_args = (PyTuple_GET_SIZE(__pyx_args) < 1) ? PyTuple_GET_SIZE(__pyx_args) : 1;
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kw, values, used_pos_args, "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_world = values[0];
  } else if (PyTuple_GET_SIZE(__pyx_args) < 1) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_world = PyTuple_GET_ITEM(__pyx_args, 0);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_arg);
  __Pyx_DECREF(__pyx_v_kw);
  __Pyx_AddTraceback("pyspades.world.Object.__init__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "pyspades\world.pyx":87
 * 
 *     def __init__(self, world, *arg, **kw):
 *         self.world = world             # <<<<<<<<<<<<<<
 *         self.initialize(*arg, **kw)
 *         if self.name is None:
 */
  if (!(likely(((__pyx_v_world) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_world, __pyx_ptype_8pyspades_5world_World))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_world);
  __Pyx_GIVEREF(__pyx_v_world);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->world);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->world));
  ((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->world = ((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_world);

  /* "pyspades\world.pyx":88
 *     def __init__(self, world, *arg, **kw):
 *         self.world = world
 *         self.initialize(*arg, **kw)             # <<<<<<<<<<<<<<
 *         if self.name is None:
 *             self.name = 'object'
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__initialize); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PySequence_Tuple(((PyObject *)__pyx_v_arg)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __pyx_t_3 = PyEval_CallObjectWithKeywords(__pyx_t_1, ((PyObject *)__pyx_t_2), ((PyObject *)__pyx_v_kw)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 88; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pyspades\world.pyx":89
 *         self.world = world
 *         self.initialize(*arg, **kw)
 *         if self.name is None:             # <<<<<<<<<<<<<<
 *             self.name = 'object'
 * 
 */
  __pyx_t_4 = (((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->name == Py_None);
  if (__pyx_t_4) {

    /* "pyspades\world.pyx":90
 *         self.initialize(*arg, **kw)
 *         if self.name is None:
 *             self.name = 'object'             # <<<<<<<<<<<<<<
 * 
 *     def initialize(self, *arg, **kw):
 */
    __Pyx_INCREF(((PyObject *)__pyx_n_s__object));
    __Pyx_GIVEREF(((PyObject *)__pyx_n_s__object));
    __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->name);
    __Pyx_DECREF(((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->name);
    ((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->name = ((PyObject *)__pyx_n_s__object);
    goto __pyx_L6;
  }
  __pyx_L6:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pyspades.world.Object.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_arg);
  __Pyx_DECREF(__pyx_v_kw);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":92
 *             self.name = 'object'
 * 
 *     def initialize(self, *arg, **kw):             # <<<<<<<<<<<<<<
 *         pass
 * 
 */

static PyObject *__pyx_pf_8pyspades_5world_6Object_1initialize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_6Object_1initialize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_arg = 0;
  PyObject *__pyx_v_kw = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("initialize");
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "initialize", 1))) return NULL;
  __pyx_v_kw = (__pyx_kwds) ? PyDict_Copy(__pyx_kwds) : PyDict_New();
  if (unlikely(!__pyx_v_kw)) return NULL;
  __Pyx_GOTREF(__pyx_v_kw);
  __Pyx_INCREF(__pyx_args);
  __pyx_v_arg = __pyx_args;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_DECREF(__pyx_v_arg);
  __Pyx_DECREF(__pyx_v_kw);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":95
 *         pass
 * 
 *     cdef int update(self, double dt) except -1:             # <<<<<<<<<<<<<<
 *         return 0
 * 
 */

static  int __pyx_f_8pyspades_5world_6Object_update(struct __pyx_obj_8pyspades_5world_Object *__pyx_v_self, double __pyx_v_dt) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("update");

  /* "pyspades\world.pyx":96
 * 
 *     cdef int update(self, double dt) except -1:
 *         return 0             # <<<<<<<<<<<<<<
 * 
 *     def delete(self):
 */
  __pyx_r = 0;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":98
 *         return 0
 * 
 *     def delete(self):             # <<<<<<<<<<<<<<
 *         self.world.delete_object(self)
 * 
 */

static PyObject *__pyx_pf_8pyspades_5world_6Object_2delete(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_6Object_2delete(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("delete");

  /* "pyspades\world.pyx":99
 * 
 *     def delete(self):
 *         self.world.delete_object(self)             # <<<<<<<<<<<<<<
 * 
 * cdef class Character(Object):
 */
  __pyx_t_1 = __pyx_v_self;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pyspades_5world_World *)((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->world->__pyx_vtab)->delete_object(((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->world, ((struct __pyx_obj_8pyspades_5world_Object *)__pyx_t_1), 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pyspades.world.Object.delete");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":83
 * cdef class Object:
 *     cdef public:
 *         object name             # <<<<<<<<<<<<<<
 *         World world
 * 
 */

static PyObject *__pyx_pf_8pyspades_5world_6Object_4name___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_6Object_4name___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->name);
  __pyx_r = ((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->name;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_6Object_4name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_6Object_4name_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->name);
  __Pyx_DECREF(((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->name);
  ((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->name = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_6Object_4name_2__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_8pyspades_5world_6Object_4name_2__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->name);
  __Pyx_DECREF(((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->name);
  ((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->name = Py_None;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":84
 *     cdef public:
 *         object name
 *         World world             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, world, *arg, **kw):
 */

static PyObject *__pyx_pf_8pyspades_5world_6Object_5world___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_6Object_5world___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->world));
  __pyx_r = ((PyObject *)((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->world);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_6Object_5world_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_6Object_5world_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_8pyspades_5world_World))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->world);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->world));
  ((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->world = ((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.Object.world.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_6Object_5world_2__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_8pyspades_5world_6Object_5world_2__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->world);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->world));
  ((struct __pyx_obj_8pyspades_5world_Object *)__pyx_v_self)->world = ((struct __pyx_obj_8pyspades_5world_World *)Py_None);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":108
 *         object fall_callback
 * 
 *     def initialize(self, Vertex3 position, Vertex3 orientation,             # <<<<<<<<<<<<<<
 *                    fall_callback = None):
 *         self.name = 'character'
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_initialize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_initialize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_v_position = 0;
  struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_v_orientation = 0;
  PyObject *__pyx_v_fall_callback = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__position,&__pyx_n_s__orientation,&__pyx_n_s__fall_callback,0};
  __Pyx_RefNannySetupContext("initialize");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};

    /* "pyspades\world.pyx":109
 * 
 *     def initialize(self, Vertex3 position, Vertex3 orientation,
 *                    fall_callback = None):             # <<<<<<<<<<<<<<
 *         self.name = 'character'
 *         self.player = create_player()
 */
    values[2] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__position);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__orientation);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("initialize", 0, 2, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__fall_callback);
        if (value) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "initialize") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_position = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)values[0]);
    __pyx_v_orientation = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)values[1]);
    __pyx_v_fall_callback = values[2];
  } else {
    __pyx_v_fall_callback = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3:
      __pyx_v_fall_callback = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2:
      __pyx_v_orientation = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)PyTuple_GET_ITEM(__pyx_args, 1));
      __pyx_v_position = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)PyTuple_GET_ITEM(__pyx_args, 0));
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("initialize", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pyspades.world.Character.initialize");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_position), __pyx_ptype_8pyspades_6common_Vertex3, 1, "position", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_orientation), __pyx_ptype_8pyspades_6common_Vertex3, 1, "orientation", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 108; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pyspades\world.pyx":110
 *     def initialize(self, Vertex3 position, Vertex3 orientation,
 *                    fall_callback = None):
 *         self.name = 'character'             # <<<<<<<<<<<<<<
 *         self.player = create_player()
 *         self.fall_callback = fall_callback
 */
  __Pyx_INCREF(((PyObject *)__pyx_n_s__character));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__character));
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->__pyx_base.name);
  __Pyx_DECREF(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->__pyx_base.name);
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->__pyx_base.name = ((PyObject *)__pyx_n_s__character);

  /* "pyspades\world.pyx":111
 *                    fall_callback = None):
 *         self.name = 'character'
 *         self.player = create_player()             # <<<<<<<<<<<<<<
 *         self.fall_callback = fall_callback
 *         self.position = create_proxy_vector(&self.player.p)
 */
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player = create_player();

  /* "pyspades\world.pyx":112
 *         self.name = 'character'
 *         self.player = create_player()
 *         self.fall_callback = fall_callback             # <<<<<<<<<<<<<<
 *         self.position = create_proxy_vector(&self.player.p)
 *         self.orientation = create_proxy_vector(&self.player.f)
 */
  __Pyx_INCREF(__pyx_v_fall_callback);
  __Pyx_GIVEREF(__pyx_v_fall_callback);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->fall_callback);
  __Pyx_DECREF(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->fall_callback);
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->fall_callback = __pyx_v_fall_callback;

  /* "pyspades\world.pyx":113
 *         self.player = create_player()
 *         self.fall_callback = fall_callback
 *         self.position = create_proxy_vector(&self.player.p)             # <<<<<<<<<<<<<<
 *         self.orientation = create_proxy_vector(&self.player.f)
 *         self.velocity = create_proxy_vector(&self.player.v)
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_8pyspades_6common_create_proxy_vector((&((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->p))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->position);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->position));
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->position = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pyspades\world.pyx":114
 *         self.fall_callback = fall_callback
 *         self.position = create_proxy_vector(&self.player.p)
 *         self.orientation = create_proxy_vector(&self.player.f)             # <<<<<<<<<<<<<<
 *         self.velocity = create_proxy_vector(&self.player.v)
 *         if position is not None:
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_8pyspades_6common_create_proxy_vector((&((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->f))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->orientation);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->orientation));
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->orientation = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pyspades\world.pyx":115
 *         self.position = create_proxy_vector(&self.player.p)
 *         self.orientation = create_proxy_vector(&self.player.f)
 *         self.velocity = create_proxy_vector(&self.player.v)             # <<<<<<<<<<<<<<
 *         if position is not None:
 *             self.set_position(*position.get())
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_8pyspades_6common_create_proxy_vector((&((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->v))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->velocity);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->velocity));
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->velocity = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pyspades\world.pyx":116
 *         self.orientation = create_proxy_vector(&self.player.f)
 *         self.velocity = create_proxy_vector(&self.player.v)
 *         if position is not None:             # <<<<<<<<<<<<<<
 *             self.set_position(*position.get())
 *         if orientation is not None:
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_position) != Py_None);
  if (__pyx_t_2) {

    /* "pyspades\world.pyx":117
 *         self.velocity = create_proxy_vector(&self.player.v)
 *         if position is not None:
 *             self.set_position(*position.get())             # <<<<<<<<<<<<<<
 *         if orientation is not None:
 *             self.orientation.set_vector(orientation)
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__set_position); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PyObject_GetAttr(((PyObject *)__pyx_v_position), __pyx_n_s__get); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PySequence_Tuple(__pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "pyspades\world.pyx":118
 *         if position is not None:
 *             self.set_position(*position.get())
 *         if orientation is not None:             # <<<<<<<<<<<<<<
 *             self.orientation.set_vector(orientation)
 * 
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_orientation) != Py_None);
  if (__pyx_t_2) {

    /* "pyspades\world.pyx":119
 *             self.set_position(*position.get())
 *         if orientation is not None:
 *             self.orientation.set_vector(orientation)             # <<<<<<<<<<<<<<
 * 
 *     def set_crouch(self, bint value):
 */
    __pyx_t_4 = PyObject_GetAttr(((PyObject *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->orientation), __pyx_n_s__set_vector); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    __Pyx_INCREF(((PyObject *)__pyx_v_orientation));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_orientation));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_orientation));
    __pyx_t_1 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 119; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L7;
  }
  __pyx_L7:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pyspades.world.Character.initialize");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":121
 *             self.orientation.set_vector(orientation)
 * 
 *     def set_crouch(self, bint value):             # <<<<<<<<<<<<<<
 *         if value == self.player.crouch:
 *             return
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_1set_crouch(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_1set_crouch(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("set_crouch");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 121; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pyspades.world.Character.set_crouch");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "pyspades\world.pyx":122
 * 
 *     def set_crouch(self, bint value):
 *         if value == self.player.crouch:             # <<<<<<<<<<<<<<
 *             return
 *         if value:
 */
  __pyx_t_1 = (__pyx_v_value == ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->crouch);
  if (__pyx_t_1) {

    /* "pyspades\world.pyx":123
 *     def set_crouch(self, bint value):
 *         if value == self.player.crouch:
 *             return             # <<<<<<<<<<<<<<
 *         if value:
 *             self.player.p.z += 0.9
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "pyspades\world.pyx":124
 *         if value == self.player.crouch:
 *             return
 *         if value:             # <<<<<<<<<<<<<<
 *             self.player.p.z += 0.9
 *         else:
 */
  if (__pyx_v_value) {

    /* "pyspades\world.pyx":125
 *             return
 *         if value:
 *             self.player.p.z += 0.9             # <<<<<<<<<<<<<<
 *         else:
 *             self.player.p.z -= 0.9
 */
    ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->p.z = (((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->p.z + 0.9);
    goto __pyx_L6;
  }
  /*else*/ {

    /* "pyspades\world.pyx":127
 *             self.player.p.z += 0.9
 *         else:
 *             self.player.p.z -= 0.9             # <<<<<<<<<<<<<<
 *         self.player.crouch = value
 * 
 */
    ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->p.z = (((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->p.z - 0.9);
  }
  __pyx_L6:;

  /* "pyspades\world.pyx":128
 *         else:
 *             self.player.p.z -= 0.9
 *         self.player.crouch = value             # <<<<<<<<<<<<<<
 * 
 *     def set_animation(self, jump, crouch, sneak, sprint):
 */
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->crouch = __pyx_v_value;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":130
 *         self.player.crouch = value
 * 
 *     def set_animation(self, jump, crouch, sneak, sprint):             # <<<<<<<<<<<<<<
 *         self.player.jump = jump
 *         self.set_crouch(crouch)
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_2set_animation(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_2set_animation(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_jump = 0;
  PyObject *__pyx_v_crouch = 0;
  PyObject *__pyx_v_sneak = 0;
  PyObject *__pyx_v_sprint = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__jump,&__pyx_n_s__crouch,&__pyx_n_s__sneak,&__pyx_n_s__sprint,0};
  __Pyx_RefNannySetupContext("set_animation");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[4] = {0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__jump);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__crouch);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("set_animation", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sneak);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("set_animation", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__sprint);
      if (likely(values[3])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("set_animation", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "set_animation") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_jump = values[0];
    __pyx_v_crouch = values[1];
    __pyx_v_sneak = values[2];
    __pyx_v_sprint = values[3];
  } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_jump = PyTuple_GET_ITEM(__pyx_args, 0);
    __pyx_v_crouch = PyTuple_GET_ITEM(__pyx_args, 1);
    __pyx_v_sneak = PyTuple_GET_ITEM(__pyx_args, 2);
    __pyx_v_sprint = PyTuple_GET_ITEM(__pyx_args, 3);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_animation", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pyspades.world.Character.set_animation");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "pyspades\world.pyx":131
 * 
 *     def set_animation(self, jump, crouch, sneak, sprint):
 *         self.player.jump = jump             # <<<<<<<<<<<<<<
 *         self.set_crouch(crouch)
 *         self.player.sneak = sneak
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_jump); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->jump = __pyx_t_1;

  /* "pyspades\world.pyx":132
 *     def set_animation(self, jump, crouch, sneak, sprint):
 *         self.player.jump = jump
 *         self.set_crouch(crouch)             # <<<<<<<<<<<<<<
 *         self.player.sneak = sneak
 *         self.player.sprint = sprint
 */
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__set_crouch); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  __Pyx_INCREF(__pyx_v_crouch);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_crouch);
  __Pyx_GIVEREF(__pyx_v_crouch);
  __pyx_t_4 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pyspades\world.pyx":133
 *         self.player.jump = jump
 *         self.set_crouch(crouch)
 *         self.player.sneak = sneak             # <<<<<<<<<<<<<<
 *         self.player.sprint = sprint
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_sneak); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->sneak = __pyx_t_1;

  /* "pyspades\world.pyx":134
 *         self.set_crouch(crouch)
 *         self.player.sneak = sneak
 *         self.player.sprint = sprint             # <<<<<<<<<<<<<<
 * 
 *     def set_weapon(self, is_primary):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_sprint); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->sprint = __pyx_t_1;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pyspades.world.Character.set_animation");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":136
 *         self.player.sprint = sprint
 * 
 *     def set_weapon(self, is_primary):             # <<<<<<<<<<<<<<
 *         self.player.weapon = is_primary
 * 
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_3set_weapon(PyObject *__pyx_v_self, PyObject *__pyx_v_is_primary); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_3set_weapon(PyObject *__pyx_v_self, PyObject *__pyx_v_is_primary) {
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("set_weapon");

  /* "pyspades\world.pyx":137
 * 
 *     def set_weapon(self, is_primary):
 *         self.player.weapon = is_primary             # <<<<<<<<<<<<<<
 * 
 *     def set_walk(self, up, down, left, right):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_is_primary); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->weapon = __pyx_t_1;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.Character.set_weapon");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":139
 *         self.player.weapon = is_primary
 * 
 *     def set_walk(self, up, down, left, right):             # <<<<<<<<<<<<<<
 *         self.player.mf = up
 *         self.player.mb = down
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_4set_walk(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_4set_walk(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_up = 0;
  PyObject *__pyx_v_down = 0;
  PyObject *__pyx_v_left = 0;
  PyObject *__pyx_v_right = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__up,&__pyx_n_s__down,&__pyx_n_s__left,&__pyx_n_s__right,0};
  __Pyx_RefNannySetupContext("set_walk");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[4] = {0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__up);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__down);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("set_walk", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__left);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("set_walk", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__right);
      if (likely(values[3])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("set_walk", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "set_walk") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_up = values[0];
    __pyx_v_down = values[1];
    __pyx_v_left = values[2];
    __pyx_v_right = values[3];
  } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_up = PyTuple_GET_ITEM(__pyx_args, 0);
    __pyx_v_down = PyTuple_GET_ITEM(__pyx_args, 1);
    __pyx_v_left = PyTuple_GET_ITEM(__pyx_args, 2);
    __pyx_v_right = PyTuple_GET_ITEM(__pyx_args, 3);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_walk", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pyspades.world.Character.set_walk");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "pyspades\world.pyx":140
 * 
 *     def set_walk(self, up, down, left, right):
 *         self.player.mf = up             # <<<<<<<<<<<<<<
 *         self.player.mb = down
 *         self.player.ml = left
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_up); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->mf = __pyx_t_1;

  /* "pyspades\world.pyx":141
 *     def set_walk(self, up, down, left, right):
 *         self.player.mf = up
 *         self.player.mb = down             # <<<<<<<<<<<<<<
 *         self.player.ml = left
 *         self.player.mr = right
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_down); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->mb = __pyx_t_1;

  /* "pyspades\world.pyx":142
 *         self.player.mf = up
 *         self.player.mb = down
 *         self.player.ml = left             # <<<<<<<<<<<<<<
 *         self.player.mr = right
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_left); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->ml = __pyx_t_1;

  /* "pyspades\world.pyx":143
 *         self.player.mb = down
 *         self.player.ml = left
 *         self.player.mr = right             # <<<<<<<<<<<<<<
 * 
 *     def set_position(self, x, y, z, reset = False):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_right); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->mr = __pyx_t_1;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.Character.set_walk");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":145
 *         self.player.mr = right
 * 
 *     def set_position(self, x, y, z, reset = False):             # <<<<<<<<<<<<<<
 *         self.position.set(x, y, z)
 *         self.player.p.x = self.player.e.x = x
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_5set_position(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_5set_position(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_v_z = 0;
  PyObject *__pyx_v_reset = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  float __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x,&__pyx_n_s__y,&__pyx_n_s__z,&__pyx_n_s__reset,0};
  __Pyx_RefNannySetupContext("set_position");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[4] = {0,0,0,0};
    values[3] = __pyx_k_1;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("set_position", 0, 3, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__z);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("set_position", 0, 3, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__reset);
        if (value) { values[3] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "set_position") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
    __pyx_v_z = values[2];
    __pyx_v_reset = values[3];
  } else {
    __pyx_v_reset = __pyx_k_1;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4:
      __pyx_v_reset = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3:
      __pyx_v_z = PyTuple_GET_ITEM(__pyx_args, 2);
      __pyx_v_y = PyTuple_GET_ITEM(__pyx_args, 1);
      __pyx_v_x = PyTuple_GET_ITEM(__pyx_args, 0);
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_position", 0, 3, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pyspades.world.Character.set_position");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "pyspades\world.pyx":146
 * 
 *     def set_position(self, x, y, z, reset = False):
 *         self.position.set(x, y, z)             # <<<<<<<<<<<<<<
 *         self.player.p.x = self.player.e.x = x
 *         self.player.p.y = self.player.e.y = y
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->position), __pyx_n_s__set); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(__pyx_v_x);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_x);
  __Pyx_GIVEREF(__pyx_v_x);
  __Pyx_INCREF(__pyx_v_y);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_y);
  __Pyx_GIVEREF(__pyx_v_y);
  __Pyx_INCREF(__pyx_v_z);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_v_z);
  __Pyx_GIVEREF(__pyx_v_z);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pyspades\world.pyx":147
 *     def set_position(self, x, y, z, reset = False):
 *         self.position.set(x, y, z)
 *         self.player.p.x = self.player.e.x = x             # <<<<<<<<<<<<<<
 *         self.player.p.y = self.player.e.y = y
 *         self.player.p.z = self.player.e.z = z
 */
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->p.x = __pyx_t_4;
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->e.x = __pyx_t_4;

  /* "pyspades\world.pyx":148
 *         self.position.set(x, y, z)
 *         self.player.p.x = self.player.e.x = x
 *         self.player.p.y = self.player.e.y = y             # <<<<<<<<<<<<<<
 *         self.player.p.z = self.player.e.z = z
 *         if reset:
 */
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->p.y = __pyx_t_4;
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_y); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->e.y = __pyx_t_4;

  /* "pyspades\world.pyx":149
 *         self.player.p.x = self.player.e.x = x
 *         self.player.p.y = self.player.e.y = y
 *         self.player.p.z = self.player.e.z = z             # <<<<<<<<<<<<<<
 *         if reset:
 *             self.velocity.set(0.0, 0.0, 0.0)
 */
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_z); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->p.z = __pyx_t_4;
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_z); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->e.z = __pyx_t_4;

  /* "pyspades\world.pyx":150
 *         self.player.p.y = self.player.e.y = y
 *         self.player.p.z = self.player.e.z = z
 *         if reset:             # <<<<<<<<<<<<<<
 *             self.velocity.set(0.0, 0.0, 0.0)
 *             self.primary_fire = self.secondary_fire = False
 */
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_v_reset); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_5) {

    /* "pyspades\world.pyx":151
 *         self.player.p.z = self.player.e.z = z
 *         if reset:
 *             self.velocity.set(0.0, 0.0, 0.0)             # <<<<<<<<<<<<<<
 *             self.primary_fire = self.secondary_fire = False
 *             self.jump = self.crouch = False
 */
    __pyx_t_3 = PyObject_GetAttr(((PyObject *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->velocity), __pyx_n_s__set); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = PyTuple_New(3); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_7));
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    __pyx_t_2 = 0;
    __pyx_t_1 = 0;
    __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "pyspades\world.pyx":152
 *         if reset:
 *             self.velocity.set(0.0, 0.0, 0.0)
 *             self.primary_fire = self.secondary_fire = False             # <<<<<<<<<<<<<<
 *             self.jump = self.crouch = False
 *             self.up = self.down = self.left = self.right = False
 */
    __pyx_t_6 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    if (PyObject_SetAttr(__pyx_v_self, __pyx_n_s__primary_fire, __pyx_t_6) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    if (PyObject_SetAttr(__pyx_v_self, __pyx_n_s__secondary_fire, __pyx_t_6) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "pyspades\world.pyx":153
 *             self.velocity.set(0.0, 0.0, 0.0)
 *             self.primary_fire = self.secondary_fire = False
 *             self.jump = self.crouch = False             # <<<<<<<<<<<<<<
 *             self.up = self.down = self.left = self.right = False
 * 
 */
    __pyx_t_6 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    if (PyObject_SetAttr(__pyx_v_self, __pyx_n_s__jump, __pyx_t_6) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    if (PyObject_SetAttr(__pyx_v_self, __pyx_n_s__crouch, __pyx_t_6) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 153; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "pyspades\world.pyx":154
 *             self.primary_fire = self.secondary_fire = False
 *             self.jump = self.crouch = False
 *             self.up = self.down = self.left = self.right = False             # <<<<<<<<<<<<<<
 * 
 *     def set_orientation(self, x, y, z):
 */
    __pyx_t_6 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    if (PyObject_SetAttr(__pyx_v_self, __pyx_n_s__up, __pyx_t_6) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    if (PyObject_SetAttr(__pyx_v_self, __pyx_n_s__down, __pyx_t_6) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    if (PyObject_SetAttr(__pyx_v_self, __pyx_n_s__left, __pyx_t_6) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    if (PyObject_SetAttr(__pyx_v_self, __pyx_n_s__right, __pyx_t_6) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pyspades.world.Character.set_position");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":156
 *             self.up = self.down = self.left = self.right = False
 * 
 *     def set_orientation(self, x, y, z):             # <<<<<<<<<<<<<<
 *         cdef Vertex3 v = Vertex3(x, y, z)
 *         reorient_player(self.player, v.value)
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_6set_orientation(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_6set_orientation(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x = 0;
  PyObject *__pyx_v_y = 0;
  PyObject *__pyx_v_z = 0;
  struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_v_v = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x,&__pyx_n_s__y,&__pyx_n_s__z,0};
  __Pyx_RefNannySetupContext("set_orientation");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("set_orientation", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__z);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("set_orientation", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "set_orientation") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = values[0];
    __pyx_v_y = values[1];
    __pyx_v_z = values[2];
  } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_x = PyTuple_GET_ITEM(__pyx_args, 0);
    __pyx_v_y = PyTuple_GET_ITEM(__pyx_args, 1);
    __pyx_v_z = PyTuple_GET_ITEM(__pyx_args, 2);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_orientation", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pyspades.world.Character.set_orientation");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "pyspades\world.pyx":157
 * 
 *     def set_orientation(self, x, y, z):
 *         cdef Vertex3 v = Vertex3(x, y, z)             # <<<<<<<<<<<<<<
 *         reorient_player(self.player, v.value)
 * 
 */
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_INCREF(__pyx_v_x);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_x);
  __Pyx_GIVEREF(__pyx_v_x);
  __Pyx_INCREF(__pyx_v_y);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_y);
  __Pyx_GIVEREF(__pyx_v_y);
  __Pyx_INCREF(__pyx_v_z);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_z);
  __Pyx_GIVEREF(__pyx_v_z);
  __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_8pyspades_6common_Vertex3)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_v_v = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pyspades\world.pyx":158
 *     def set_orientation(self, x, y, z):
 *         cdef Vertex3 v = Vertex3(x, y, z)
 *         reorient_player(self.player, v.value)             # <<<<<<<<<<<<<<
 * 
 *     cpdef int can_see(self, float x, float y, float z):
 */
  reorient_player(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player, __pyx_v_v->value);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pyspades.world.Character.set_orientation");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":160
 *         reorient_player(self.player, v.value)
 * 
 *     cpdef int can_see(self, float x, float y, float z):             # <<<<<<<<<<<<<<
 *         cdef Vertex3 position = self.position
 *         return can_see(self.world.map, position.x, position.y, position.z,
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_7can_see(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static  int __pyx_f_8pyspades_5world_9Character_can_see(struct __pyx_obj_8pyspades_5world_Character *__pyx_v_self, float __pyx_v_x, float __pyx_v_y, float __pyx_v_z, int __pyx_skip_dispatch) {
  struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_v_position = 0;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  float __pyx_t_7;
  float __pyx_t_8;
  float __pyx_t_9;
  float __pyx_t_10;
  float __pyx_t_11;
  __Pyx_RefNannySetupContext("can_see");
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__can_see); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (void *)&__pyx_pf_8pyspades_5world_9Character_7can_see)) {
      __pyx_t_2 = PyFloat_FromDouble(__pyx_v_x); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_y); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyFloat_FromDouble(__pyx_v_z); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_5));
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      __pyx_t_2 = 0;
      __pyx_t_3 = 0;
      __pyx_t_4 = 0;
      __pyx_t_4 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyInt_AsInt(__pyx_t_4); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_6;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pyspades\world.pyx":161
 * 
 *     cpdef int can_see(self, float x, float y, float z):
 *         cdef Vertex3 position = self.position             # <<<<<<<<<<<<<<
 *         return can_see(self.world.map, position.x, position.y, position.z,
 *             x, y, z)
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_self->position));
  __pyx_v_position = __pyx_v_self->position;

  /* "pyspades\world.pyx":162
 *     cpdef int can_see(self, float x, float y, float z):
 *         cdef Vertex3 position = self.position
 *         return can_see(self.world.map, position.x, position.y, position.z,             # <<<<<<<<<<<<<<
 *             x, y, z)
 * 
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->__pyx_base.world->map);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_4 = PyObject_GetAttr(((PyObject *)__pyx_v_position), __pyx_n_s__x); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_7 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyObject_GetAttr(((PyObject *)__pyx_v_position), __pyx_n_s__y); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_8 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyObject_GetAttr(((PyObject *)__pyx_v_position), __pyx_n_s__z); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_9 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "pyspades\world.pyx":163
 *         cdef Vertex3 position = self.position
 *         return can_see(self.world.map, position.x, position.y, position.z,
 *             x, y, z)             # <<<<<<<<<<<<<<
 * 
 *     cpdef cast_ray(self, length = 32.0):
 */
  __pyx_t_10 = __pyx_v_x;
  __pyx_t_11 = __pyx_v_y;
  __pyx_r = __pyx_f_8pyspades_5world_can_see(((struct __pyx_obj_8pyspades_3vxl_VXLData *)__pyx_t_1), __pyx_t_7, __pyx_t_8, __pyx_t_9, __pyx_t_10, __pyx_t_11, __pyx_v_z);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_WriteUnraisable("pyspades.world.Character.can_see");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_position);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":160
 *         reorient_player(self.player, v.value)
 * 
 *     cpdef int can_see(self, float x, float y, float z):             # <<<<<<<<<<<<<<
 *         cdef Vertex3 position = self.position
 *         return can_see(self.world.map, position.x, position.y, position.z,
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_7can_see(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_7can_see(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_x;
  float __pyx_v_y;
  float __pyx_v_z;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x,&__pyx_n_s__y,&__pyx_n_s__z,0};
  __Pyx_RefNannySetupContext("can_see");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("can_see", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__z);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("can_see", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "can_see") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_z = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_z == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_x = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_x == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_y == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_z = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_z == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("can_see", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pyspades.world.Character.can_see");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_vtabstruct_8pyspades_5world_Character *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->__pyx_base.__pyx_vtab)->can_see(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_z, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pyspades.world.Character.can_see");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":165
 *             x, y, z)
 * 
 *     cpdef cast_ray(self, length = 32.0):             # <<<<<<<<<<<<<<
 *         cdef Vertex3 position = self.position
 *         cdef Vertex3 direction = self.orientation.copy().normal()
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_8cast_ray(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static  PyObject *__pyx_f_8pyspades_5world_9Character_cast_ray(struct __pyx_obj_8pyspades_5world_Character *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_8pyspades_5world_9Character_cast_ray *__pyx_optional_args) {
  PyObject *__pyx_v_length = __pyx_k_2;
  struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_v_position = 0;
  struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_v_direction = 0;
  long __pyx_v_x;
  long __pyx_v_y;
  long __pyx_v_z;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  float __pyx_t_4;
  float __pyx_t_5;
  float __pyx_t_6;
  float __pyx_t_7;
  float __pyx_t_8;
  float __pyx_t_9;
  float __pyx_t_10;
  long *__pyx_t_11;
  long *__pyx_t_12;
  int __pyx_t_13;
  PyObject *__pyx_t_14 = NULL;
  __Pyx_RefNannySetupContext("cast_ray");
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_length = __pyx_optional_args->length;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__cast_ray); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (void *)&__pyx_pf_8pyspades_5world_9Character_8cast_ray)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_2));
      __Pyx_INCREF(__pyx_v_length);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_length);
      __Pyx_GIVEREF(__pyx_v_length);
      __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_3;
      __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pyspades\world.pyx":166
 * 
 *     cpdef cast_ray(self, length = 32.0):
 *         cdef Vertex3 position = self.position             # <<<<<<<<<<<<<<
 *         cdef Vertex3 direction = self.orientation.copy().normal()
 *         cdef long x, y, z
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_self->position));
  __pyx_v_position = __pyx_v_self->position;

  /* "pyspades\world.pyx":167
 *     cpdef cast_ray(self, length = 32.0):
 *         cdef Vertex3 position = self.position
 *         cdef Vertex3 direction = self.orientation.copy().normal()             # <<<<<<<<<<<<<<
 *         cdef long x, y, z
 *         if cast_ray(self.world.map, position.x, position.y, position.z,
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self->orientation), __pyx_n_s__copy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetAttr(__pyx_t_3, __pyx_n_s__normal); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_8pyspades_6common_Vertex3))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_direction = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "pyspades\world.pyx":169
 *         cdef Vertex3 direction = self.orientation.copy().normal()
 *         cdef long x, y, z
 *         if cast_ray(self.world.map, position.x, position.y, position.z,             # <<<<<<<<<<<<<<
 *             direction.x, direction.y, direction.z, length, &x, &y, &z):
 *             return x, y, z
 */
  __pyx_t_3 = ((PyObject *)__pyx_v_self->__pyx_base.world->map);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_position), __pyx_n_s__x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_position), __pyx_n_s__y); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_5 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_position), __pyx_n_s__z); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_6 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pyspades\world.pyx":170
 *         cdef long x, y, z
 *         if cast_ray(self.world.map, position.x, position.y, position.z,
 *             direction.x, direction.y, direction.z, length, &x, &y, &z):             # <<<<<<<<<<<<<<
 *             return x, y, z
 *         return None
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_direction), __pyx_n_s__x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_7 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_direction), __pyx_n_s__y); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_8 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_direction), __pyx_n_s__z); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_9 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_v_length); if (unlikely((__pyx_t_10 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_11 = (&__pyx_v_x);
  __pyx_t_12 = (&__pyx_v_y);
  __pyx_t_13 = __pyx_f_8pyspades_5world_cast_ray(((struct __pyx_obj_8pyspades_3vxl_VXLData *)__pyx_t_3), __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7, __pyx_t_8, __pyx_t_9, __pyx_t_10, __pyx_t_11, __pyx_t_12, (&__pyx_v_z));
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_13) {

    /* "pyspades\world.pyx":171
 *         if cast_ray(self.world.map, position.x, position.y, position.z,
 *             direction.x, direction.y, direction.z, length, &x, &y, &z):
 *             return x, y, z             # <<<<<<<<<<<<<<
 *         return None
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = PyInt_FromLong(__pyx_v_x); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyInt_FromLong(__pyx_v_y); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyInt_FromLong(__pyx_v_z); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_14 = PyTuple_New(3); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_14));
    PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_14, 1, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_14, 2, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_3 = 0;
    __pyx_t_1 = 0;
    __pyx_t_2 = 0;
    __pyx_r = ((PyObject *)__pyx_t_14);
    __pyx_t_14 = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "pyspades\world.pyx":172
 *             direction.x, direction.y, direction.z, length, &x, &y, &z):
 *             return x, y, z
 *         return None             # <<<<<<<<<<<<<<
 * 
 *     def validate_hit(self, Character other, part, float tolerance):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_None);
  __pyx_r = Py_None;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_AddTraceback("pyspades.world.Character.cast_ray");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_position);
  __Pyx_XDECREF((PyObject *)__pyx_v_direction);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":165
 *             x, y, z)
 * 
 *     cpdef cast_ray(self, length = 32.0):             # <<<<<<<<<<<<<<
 *         cdef Vertex3 position = self.position
 *         cdef Vertex3 direction = self.orientation.copy().normal()
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_8cast_ray(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_8cast_ray(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_length = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  struct __pyx_opt_args_8pyspades_5world_9Character_cast_ray __pyx_t_3;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__length,0};
  __Pyx_RefNannySetupContext("cast_ray");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    values[0] = __pyx_k_2;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__length);
        if (value) { values[0] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "cast_ray") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_length = values[0];
  } else {
    __pyx_v_length = __pyx_k_2;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: __pyx_v_length = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("cast_ray", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pyspades.world.Character.cast_ray");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_length;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_3.__pyx_n = 1;
  __pyx_t_3.length = __pyx_t_1;
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pyspades_5world_Character *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->__pyx_base.__pyx_vtab)->cast_ray(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self), 1, &__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pyspades.world.Character.cast_ray");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":174
 *         return None
 * 
 *     def validate_hit(self, Character other, part, float tolerance):             # <<<<<<<<<<<<<<
 *         cdef Vertex3 position1 = self.position
 *         cdef Vertex3 orientation = self.orientation
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_9validate_hit(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_9validate_hit(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_8pyspades_5world_Character *__pyx_v_other = 0;
  PyObject *__pyx_v_part = 0;
  float __pyx_v_tolerance;
  struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_v_position1 = 0;
  struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_v_orientation = 0;
  struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_v_position2 = 0;
  float __pyx_v_x;
  float __pyx_v_y;
  float __pyx_v_z;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  float __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  float __pyx_t_8;
  float __pyx_t_9;
  float __pyx_t_10;
  float __pyx_t_11;
  float __pyx_t_12;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__other,&__pyx_n_s__part,&__pyx_n_s__tolerance,0};
  __Pyx_RefNannySetupContext("validate_hit");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__other);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__part);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("validate_hit", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__tolerance);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("validate_hit", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "validate_hit") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_other = ((struct __pyx_obj_8pyspades_5world_Character *)values[0]);
    __pyx_v_part = values[1];
    __pyx_v_tolerance = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_tolerance == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_other = ((struct __pyx_obj_8pyspades_5world_Character *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_part = PyTuple_GET_ITEM(__pyx_args, 1);
    __pyx_v_tolerance = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_tolerance == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("validate_hit", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pyspades.world.Character.validate_hit");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_8pyspades_5world_Character, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pyspades\world.pyx":175
 * 
 *     def validate_hit(self, Character other, part, float tolerance):
 *         cdef Vertex3 position1 = self.position             # <<<<<<<<<<<<<<
 *         cdef Vertex3 orientation = self.orientation
 *         cdef Vertex3 position2 = other.position
 */
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->position));
  __pyx_v_position1 = ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->position;

  /* "pyspades\world.pyx":176
 *     def validate_hit(self, Character other, part, float tolerance):
 *         cdef Vertex3 position1 = self.position
 *         cdef Vertex3 orientation = self.orientation             # <<<<<<<<<<<<<<
 *         cdef Vertex3 position2 = other.position
 *         cdef float x, y, z
 */
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->orientation));
  __pyx_v_orientation = ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->orientation;

  /* "pyspades\world.pyx":177
 *         cdef Vertex3 position1 = self.position
 *         cdef Vertex3 orientation = self.orientation
 *         cdef Vertex3 position2 = other.position             # <<<<<<<<<<<<<<
 *         cdef float x, y, z
 *         x = position2.x
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_other->position));
  __pyx_v_position2 = __pyx_v_other->position;

  /* "pyspades\world.pyx":179
 *         cdef Vertex3 position2 = other.position
 *         cdef float x, y, z
 *         x = position2.x             # <<<<<<<<<<<<<<
 *         y = position2.y
 *         z = position2.z
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_position2), __pyx_n_s__x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_x = __pyx_t_2;

  /* "pyspades\world.pyx":180
 *         cdef float x, y, z
 *         x = position2.x
 *         y = position2.y             # <<<<<<<<<<<<<<
 *         z = position2.z
 *         if part in (TORSO, ARMS):
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_position2), __pyx_n_s__y); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_y = __pyx_t_2;

  /* "pyspades\world.pyx":181
 *         x = position2.x
 *         y = position2.y
 *         z = position2.z             # <<<<<<<<<<<<<<
 *         if part in (TORSO, ARMS):
 *             z += 0.9
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_position2), __pyx_n_s__z); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_z = __pyx_t_2;

  /* "pyspades\world.pyx":182
 *         y = position2.y
 *         z = position2.z
 *         if part in (TORSO, ARMS):             # <<<<<<<<<<<<<<
 *             z += 0.9
 *         elif part == HEAD:
 */
  __Pyx_INCREF(__pyx_v_part);
  __pyx_t_1 = __pyx_v_part;
  __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__TORSO); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyObject_RichCompare(__pyx_t_1, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (!__pyx_t_5) {
    __pyx_t_4 = __Pyx_GetName(__pyx_m, __pyx_n_s__ARMS); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_4, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_7 = __pyx_t_6;
  } else {
    __pyx_t_7 = __pyx_t_5;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_5 = __pyx_t_7;
  if (__pyx_t_5) {

    /* "pyspades\world.pyx":183
 *         z = position2.z
 *         if part in (TORSO, ARMS):
 *             z += 0.9             # <<<<<<<<<<<<<<
 *         elif part == HEAD:
 *             pass
 */
    __pyx_v_z = (__pyx_v_z + 0.9);
    goto __pyx_L6;
  }

  /* "pyspades\world.pyx":184
 *         if part in (TORSO, ARMS):
 *             z += 0.9
 *         elif part == HEAD:             # <<<<<<<<<<<<<<
 *             pass
 *         elif part == LEGS:
 */
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__HEAD); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_RichCompare(__pyx_v_part, __pyx_t_1, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_5) {
    goto __pyx_L6;
  }

  /* "pyspades\world.pyx":186
 *         elif part == HEAD:
 *             pass
 *         elif part == LEGS:             # <<<<<<<<<<<<<<
 *             z += 1.8
 *         elif part == MELEE:
 */
  __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__LEGS); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_part, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_5) {

    /* "pyspades\world.pyx":187
 *             pass
 *         elif part == LEGS:
 *             z += 1.8             # <<<<<<<<<<<<<<
 *         elif part == MELEE:
 *             z += 0.9
 */
    __pyx_v_z = (__pyx_v_z + 1.8);
    goto __pyx_L6;
  }

  /* "pyspades\world.pyx":188
 *         elif part == LEGS:
 *             z += 1.8
 *         elif part == MELEE:             # <<<<<<<<<<<<<<
 *             z += 0.9
 *         else:
 */
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__MELEE); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_RichCompare(__pyx_v_part, __pyx_t_1, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_5) {

    /* "pyspades\world.pyx":189
 *             z += 1.8
 *         elif part == MELEE:
 *             z += 0.9             # <<<<<<<<<<<<<<
 *         else:
 *             return False
 */
    __pyx_v_z = (__pyx_v_z + 0.9);
    goto __pyx_L6;
  }
  /*else*/ {

    /* "pyspades\world.pyx":191
 *             z += 0.9
 *         else:
 *             return False             # <<<<<<<<<<<<<<
 *         if not c_validate_hit(position1.x, position1.y, position1.z,
 *                               orientation.x, orientation.y, orientation.z,
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }
  __pyx_L6:;

  /* "pyspades\world.pyx":192
 *         else:
 *             return False
 *         if not c_validate_hit(position1.x, position1.y, position1.z,             # <<<<<<<<<<<<<<
 *                               orientation.x, orientation.y, orientation.z,
 *                               x, y, z, tolerance):
 */
  __pyx_t_3 = PyObject_GetAttr(((PyObject *)__pyx_v_position1), __pyx_n_s__x); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_2 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_GetAttr(((PyObject *)__pyx_v_position1), __pyx_n_s__y); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_8 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_GetAttr(((PyObject *)__pyx_v_position1), __pyx_n_s__z); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_9 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pyspades\world.pyx":193
 *             return False
 *         if not c_validate_hit(position1.x, position1.y, position1.z,
 *                               orientation.x, orientation.y, orientation.z,             # <<<<<<<<<<<<<<
 *                               x, y, z, tolerance):
 *             return False
 */
  __pyx_t_3 = PyObject_GetAttr(((PyObject *)__pyx_v_orientation), __pyx_n_s__x); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_10 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_GetAttr(((PyObject *)__pyx_v_orientation), __pyx_n_s__y); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_11 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_GetAttr(((PyObject *)__pyx_v_orientation), __pyx_n_s__z); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_12 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pyspades\world.pyx":194
 *         if not c_validate_hit(position1.x, position1.y, position1.z,
 *                               orientation.x, orientation.y, orientation.z,
 *                               x, y, z, tolerance):             # <<<<<<<<<<<<<<
 *             return False
 *         return True
 */
  __pyx_t_5 = (!validate_hit(__pyx_t_2, __pyx_t_8, __pyx_t_9, __pyx_t_10, __pyx_t_11, __pyx_t_12, __pyx_v_x, __pyx_v_y, __pyx_v_z, __pyx_v_tolerance));
  if (__pyx_t_5) {

    /* "pyspades\world.pyx":195
 *                               orientation.x, orientation.y, orientation.z,
 *                               x, y, z, tolerance):
 *             return False             # <<<<<<<<<<<<<<
 *         return True
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
    goto __pyx_L7;
  }
  __pyx_L7:;

  /* "pyspades\world.pyx":196
 *                               x, y, z, tolerance):
 *             return False
 *         return True             # <<<<<<<<<<<<<<
 * 
 *     def set_dead(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyBool_FromLong(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pyspades.world.Character.validate_hit");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_position1);
  __Pyx_XDECREF((PyObject *)__pyx_v_orientation);
  __Pyx_XDECREF((PyObject *)__pyx_v_position2);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":198
 *         return True
 * 
 *     def set_dead(self, value):             # <<<<<<<<<<<<<<
 *         self.player.alive = not value
 *         self.player.mf = False
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_10set_dead(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_10set_dead(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("set_dead");

  /* "pyspades\world.pyx":199
 * 
 *     def set_dead(self, value):
 *         self.player.alive = not value             # <<<<<<<<<<<<<<
 *         self.player.mf = False
 *         self.player.mb = False
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_value); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->alive = (!__pyx_t_1);

  /* "pyspades\world.pyx":200
 *     def set_dead(self, value):
 *         self.player.alive = not value
 *         self.player.mf = False             # <<<<<<<<<<<<<<
 *         self.player.mb = False
 *         self.player.ml = False
 */
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->mf = 0;

  /* "pyspades\world.pyx":201
 *         self.player.alive = not value
 *         self.player.mf = False
 *         self.player.mb = False             # <<<<<<<<<<<<<<
 *         self.player.ml = False
 *         self.player.mr = False
 */
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->mb = 0;

  /* "pyspades\world.pyx":202
 *         self.player.mf = False
 *         self.player.mb = False
 *         self.player.ml = False             # <<<<<<<<<<<<<<
 *         self.player.mr = False
 *         self.player.crouch = False
 */
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->ml = 0;

  /* "pyspades\world.pyx":203
 *         self.player.mb = False
 *         self.player.ml = False
 *         self.player.mr = False             # <<<<<<<<<<<<<<
 *         self.player.crouch = False
 *         self.player.sneak = False
 */
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->mr = 0;

  /* "pyspades\world.pyx":204
 *         self.player.ml = False
 *         self.player.mr = False
 *         self.player.crouch = False             # <<<<<<<<<<<<<<
 *         self.player.sneak = False
 *         self.player.primary_fire = False
 */
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->crouch = 0;

  /* "pyspades\world.pyx":205
 *         self.player.mr = False
 *         self.player.crouch = False
 *         self.player.sneak = False             # <<<<<<<<<<<<<<
 *         self.player.primary_fire = False
 *         self.player.secondary_fire = False
 */
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->sneak = 0;

  /* "pyspades\world.pyx":206
 *         self.player.crouch = False
 *         self.player.sneak = False
 *         self.player.primary_fire = False             # <<<<<<<<<<<<<<
 *         self.player.secondary_fire = False
 *         self.player.sprint = False
 */
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->primary_fire = 0;

  /* "pyspades\world.pyx":207
 *         self.player.sneak = False
 *         self.player.primary_fire = False
 *         self.player.secondary_fire = False             # <<<<<<<<<<<<<<
 *         self.player.sprint = False
 * 
 */
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->secondary_fire = 0;

  /* "pyspades\world.pyx":208
 *         self.player.primary_fire = False
 *         self.player.secondary_fire = False
 *         self.player.sprint = False             # <<<<<<<<<<<<<<
 * 
 *     cdef int update(self, double dt) except -1:
 */
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->sprint = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.Character.set_dead");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":210
 *         self.player.sprint = False
 * 
 *     cdef int update(self, double dt) except -1:             # <<<<<<<<<<<<<<
 *         cdef long ret = move_player(self.player)
 *         if ret > 0:
 */

static  int __pyx_f_8pyspades_5world_9Character_update(struct __pyx_obj_8pyspades_5world_Character *__pyx_v_self, double __pyx_v_dt) {
  long __pyx_v_ret;
  int __pyx_r;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("update");

  /* "pyspades\world.pyx":211
 * 
 *     cdef int update(self, double dt) except -1:
 *         cdef long ret = move_player(self.player)             # <<<<<<<<<<<<<<
 *         if ret > 0:
 *             self.fall_callback(ret)
 */
  __pyx_v_ret = move_player(__pyx_v_self->player);

  /* "pyspades\world.pyx":212
 *     cdef int update(self, double dt) except -1:
 *         cdef long ret = move_player(self.player)
 *         if ret > 0:             # <<<<<<<<<<<<<<
 *             self.fall_callback(ret)
 *         return 0
 */
  __pyx_t_1 = (__pyx_v_ret > 0);
  if (__pyx_t_1) {

    /* "pyspades\world.pyx":213
 *         cdef long ret = move_player(self.player)
 *         if ret > 0:
 *             self.fall_callback(ret)             # <<<<<<<<<<<<<<
 *         return 0
 * 
 */
    __pyx_t_2 = PyInt_FromLong(__pyx_v_ret); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_3));
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_v_self->fall_callback, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "pyspades\world.pyx":214
 *         if ret > 0:
 *             self.fall_callback(ret)
 *         return 0             # <<<<<<<<<<<<<<
 * 
 *     # properties
 */
  __pyx_r = 0;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pyspades.world.Character.update");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":218
 *     # properties
 *     property up:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.player.mf
 *         def __set__(self, value):
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_2up___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_2up___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "pyspades\world.pyx":219
 *     property up:
 *         def __get__(self):
 *             return self.player.mf             # <<<<<<<<<<<<<<
 *         def __set__(self, value):
 *             self.player.mf = value
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->mf); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pyspades.world.Character.up.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":220
 *         def __get__(self):
 *             return self.player.mf
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.player.mf = value
 * 
 */

static int __pyx_pf_8pyspades_5world_9Character_2up_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_9Character_2up_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "pyspades\world.pyx":221
 *             return self.player.mf
 *         def __set__(self, value):
 *             self.player.mf = value             # <<<<<<<<<<<<<<
 * 
 *     property down:
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->mf = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.Character.up.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":224
 * 
 *     property down:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.player.mb
 *         def __set__(self, value):
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_4down___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_4down___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "pyspades\world.pyx":225
 *     property down:
 *         def __get__(self):
 *             return self.player.mb             # <<<<<<<<<<<<<<
 *         def __set__(self, value):
 *             self.player.mb = value
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->mb); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pyspades.world.Character.down.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":226
 *         def __get__(self):
 *             return self.player.mb
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.player.mb = value
 * 
 */

static int __pyx_pf_8pyspades_5world_9Character_4down_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_9Character_4down_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "pyspades\world.pyx":227
 *             return self.player.mb
 *         def __set__(self, value):
 *             self.player.mb = value             # <<<<<<<<<<<<<<
 * 
 *     property left:
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->mb = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.Character.down.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":230
 * 
 *     property left:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.player.ml
 *         def __set__(self, value):
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_4left___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_4left___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "pyspades\world.pyx":231
 *     property left:
 *         def __get__(self):
 *             return self.player.ml             # <<<<<<<<<<<<<<
 *         def __set__(self, value):
 *             self.player.ml = value
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->ml); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pyspades.world.Character.left.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":232
 *         def __get__(self):
 *             return self.player.ml
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.player.ml = value
 * 
 */

static int __pyx_pf_8pyspades_5world_9Character_4left_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_9Character_4left_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "pyspades\world.pyx":233
 *             return self.player.ml
 *         def __set__(self, value):
 *             self.player.ml = value             # <<<<<<<<<<<<<<
 * 
 *     property right:
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->ml = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.Character.left.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":236
 * 
 *     property right:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.player.mr
 *         def __set__(self, value):
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_5right___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_5right___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "pyspades\world.pyx":237
 *     property right:
 *         def __get__(self):
 *             return self.player.mr             # <<<<<<<<<<<<<<
 *         def __set__(self, value):
 *             self.player.mr = value
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->mr); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pyspades.world.Character.right.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":238
 *         def __get__(self):
 *             return self.player.mr
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.player.mr = value
 * 
 */

static int __pyx_pf_8pyspades_5world_9Character_5right_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_9Character_5right_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "pyspades\world.pyx":239
 *             return self.player.mr
 *         def __set__(self, value):
 *             self.player.mr = value             # <<<<<<<<<<<<<<
 * 
 *     property dead:
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->mr = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.Character.right.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":242
 * 
 *     property dead:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return not self.player.alive
 *         def __set__(self, bint value):
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_4dead___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_4dead___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "pyspades\world.pyx":243
 *     property dead:
 *         def __get__(self):
 *             return not self.player.alive             # <<<<<<<<<<<<<<
 *         def __set__(self, bint value):
 *             self.set_dead(value)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong((!((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->alive)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pyspades.world.Character.dead.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":244
 *         def __get__(self):
 *             return not self.player.alive
 *         def __set__(self, bint value):             # <<<<<<<<<<<<<<
 *             self.set_dead(value)
 * 
 */

static int __pyx_pf_8pyspades_5world_9Character_4dead_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pf_8pyspades_5world_9Character_4dead_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  int __pyx_v_value;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__set__");
  assert(__pyx_arg_value); {
    __pyx_v_value = __Pyx_PyObject_IsTrue(__pyx_arg_value); if (unlikely((__pyx_v_value == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 244; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pyspades.world.Character.dead.__set__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "pyspades\world.pyx":245
 *             return not self.player.alive
 *         def __set__(self, bint value):
 *             self.set_dead(value)             # <<<<<<<<<<<<<<
 * 
 *     property jump:
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__set_dead); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_value); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 245; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pyspades.world.Character.dead.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":248
 * 
 *     property jump:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.player.jump
 *         def __set__(self, value):
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_4jump___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_4jump___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "pyspades\world.pyx":249
 *     property jump:
 *         def __get__(self):
 *             return self.player.jump             # <<<<<<<<<<<<<<
 *         def __set__(self, value):
 *             self.player.jump = value
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->jump); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 249; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pyspades.world.Character.jump.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":250
 *         def __get__(self):
 *             return self.player.jump
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.player.jump = value
 * 
 */

static int __pyx_pf_8pyspades_5world_9Character_4jump_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_9Character_4jump_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "pyspades\world.pyx":251
 *             return self.player.jump
 *         def __set__(self, value):
 *             self.player.jump = value             # <<<<<<<<<<<<<<
 * 
 *     property airborne:
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 251; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->jump = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.Character.jump.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":254
 * 
 *     property airborne:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.player.airborne
 * 
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_8airborne___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_8airborne___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "pyspades\world.pyx":255
 *     property airborne:
 *         def __get__(self):
 *             return self.player.airborne             # <<<<<<<<<<<<<<
 * 
 *     property crouch:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->airborne); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 255; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pyspades.world.Character.airborne.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":258
 * 
 *     property crouch:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.player.crouch
 *         def __set__(self, value):
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_6crouch___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_6crouch___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "pyspades\world.pyx":259
 *     property crouch:
 *         def __get__(self):
 *             return self.player.crouch             # <<<<<<<<<<<<<<
 *         def __set__(self, value):
 *             self.player.crouch = value
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->crouch); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pyspades.world.Character.crouch.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":260
 *         def __get__(self):
 *             return self.player.crouch
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.player.crouch = value
 * 
 */

static int __pyx_pf_8pyspades_5world_9Character_6crouch_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_9Character_6crouch_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "pyspades\world.pyx":261
 *             return self.player.crouch
 *         def __set__(self, value):
 *             self.player.crouch = value             # <<<<<<<<<<<<<<
 * 
 *     property sneak:
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 261; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->crouch = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.Character.crouch.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":264
 * 
 *     property sneak:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.player.sneak
 *         def __set__(self, value):
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_5sneak___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_5sneak___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "pyspades\world.pyx":265
 *     property sneak:
 *         def __get__(self):
 *             return self.player.sneak             # <<<<<<<<<<<<<<
 *         def __set__(self, value):
 *             self.player.sneak = value
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->sneak); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 265; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pyspades.world.Character.sneak.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":266
 *         def __get__(self):
 *             return self.player.sneak
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.player.sneak = value
 * 
 */

static int __pyx_pf_8pyspades_5world_9Character_5sneak_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_9Character_5sneak_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "pyspades\world.pyx":267
 *             return self.player.sneak
 *         def __set__(self, value):
 *             self.player.sneak = value             # <<<<<<<<<<<<<<
 * 
 *     property wade:
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->sneak = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.Character.sneak.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":270
 * 
 *     property wade:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.player.wade
 * 
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_4wade___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_4wade___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "pyspades\world.pyx":271
 *     property wade:
 *         def __get__(self):
 *             return self.player.wade             # <<<<<<<<<<<<<<
 * 
 *     property sprint:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->wade); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 271; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pyspades.world.Character.wade.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":274
 * 
 *     property sprint:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.player.sprint
 *         def __set__(self, value):
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_6sprint___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_6sprint___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "pyspades\world.pyx":275
 *     property sprint:
 *         def __get__(self):
 *             return self.player.sprint             # <<<<<<<<<<<<<<
 *         def __set__(self, value):
 *             self.player.sprint = value
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->sprint); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pyspades.world.Character.sprint.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":276
 *         def __get__(self):
 *             return self.player.sprint
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.player.sprint = value
 * 
 */

static int __pyx_pf_8pyspades_5world_9Character_6sprint_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_9Character_6sprint_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "pyspades\world.pyx":277
 *             return self.player.sprint
 *         def __set__(self, value):
 *             self.player.sprint = value             # <<<<<<<<<<<<<<
 * 
 *     property primary_fire:
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->sprint = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.Character.sprint.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":280
 * 
 *     property primary_fire:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.player.primary_fire
 *         def __set__(self, value):
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_12primary_fire___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_12primary_fire___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "pyspades\world.pyx":281
 *     property primary_fire:
 *         def __get__(self):
 *             return self.player.primary_fire             # <<<<<<<<<<<<<<
 *         def __set__(self, value):
 *             self.player.primary_fire = value
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->primary_fire); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pyspades.world.Character.primary_fire.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":282
 *         def __get__(self):
 *             return self.player.primary_fire
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.player.primary_fire = value
 * 
 */

static int __pyx_pf_8pyspades_5world_9Character_12primary_fire_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_9Character_12primary_fire_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "pyspades\world.pyx":283
 *             return self.player.primary_fire
 *         def __set__(self, value):
 *             self.player.primary_fire = value             # <<<<<<<<<<<<<<
 * 
 *     property secondary_fire:
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->primary_fire = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.Character.primary_fire.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":286
 * 
 *     property secondary_fire:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.player.secondary_fire
 *         def __set__(self, value):
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_14secondary_fire___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_14secondary_fire___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");

  /* "pyspades\world.pyx":287
 *     property secondary_fire:
 *         def __get__(self):
 *             return self.player.secondary_fire             # <<<<<<<<<<<<<<
 *         def __set__(self, value):
 *             self.player.secondary_fire = value
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->secondary_fire); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pyspades.world.Character.secondary_fire.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":288
 *         def __get__(self):
 *             return self.player.secondary_fire
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.player.secondary_fire = value
 * 
 */

static int __pyx_pf_8pyspades_5world_9Character_14secondary_fire_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_9Character_14secondary_fire_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");

  /* "pyspades\world.pyx":289
 *             return self.player.secondary_fire
 *         def __set__(self, value):
 *             self.player.secondary_fire = value             # <<<<<<<<<<<<<<
 * 
 * cdef class Grenade(Object):
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->player->secondary_fire = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.Character.secondary_fire.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":105
 *         PlayerType * player
 *     cdef public:
 *         Vertex3 position, orientation, velocity             # <<<<<<<<<<<<<<
 *         object fall_callback
 * 
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_8position___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_8position___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->position));
  __pyx_r = ((PyObject *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->position);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_9Character_8position_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_9Character_8position_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_8pyspades_6common_Vertex3))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->position);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->position));
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->position = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.Character.position.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_9Character_8position_2__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_8pyspades_5world_9Character_8position_2__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->position);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->position));
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->position = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)Py_None);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pyspades_5world_9Character_11orientation___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_11orientation___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->orientation));
  __pyx_r = ((PyObject *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->orientation);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_9Character_11orientation_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_9Character_11orientation_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_8pyspades_6common_Vertex3))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->orientation);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->orientation));
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->orientation = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.Character.orientation.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_9Character_11orientation_2__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_8pyspades_5world_9Character_11orientation_2__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->orientation);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->orientation));
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->orientation = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)Py_None);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pyspades_5world_9Character_8velocity___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_8velocity___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->velocity));
  __pyx_r = ((PyObject *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->velocity);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_9Character_8velocity_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_9Character_8velocity_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_8pyspades_6common_Vertex3))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->velocity);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->velocity));
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->velocity = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.Character.velocity.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_9Character_8velocity_2__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_8pyspades_5world_9Character_8velocity_2__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->velocity);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->velocity));
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->velocity = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)Py_None);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":106
 *     cdef public:
 *         Vertex3 position, orientation, velocity
 *         object fall_callback             # <<<<<<<<<<<<<<
 * 
 *     def initialize(self, Vertex3 position, Vertex3 orientation,
 */

static PyObject *__pyx_pf_8pyspades_5world_9Character_13fall_callback___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_9Character_13fall_callback___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->fall_callback);
  __pyx_r = ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->fall_callback;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_9Character_13fall_callback_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_9Character_13fall_callback_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->fall_callback);
  __Pyx_DECREF(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->fall_callback);
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->fall_callback = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_9Character_13fall_callback_2__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_8pyspades_5world_9Character_13fall_callback_2__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->fall_callback);
  __Pyx_DECREF(((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->fall_callback);
  ((struct __pyx_obj_8pyspades_5world_Character *)__pyx_v_self)->fall_callback = Py_None;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":299
 *     cdef GrenadeType * grenade
 * 
 *     def initialize(self, double fuse, Vertex3 position, Vertex3 orientation,             # <<<<<<<<<<<<<<
 *                    Vertex3 velocity, callback = None):
 *         self.name = 'grenade'
 */

static PyObject *__pyx_pf_8pyspades_5world_7Grenade_initialize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_7Grenade_initialize(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_fuse;
  struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_v_position = 0;
  struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_v_orientation = 0;
  struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_v_velocity = 0;
  PyObject *__pyx_v_callback = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__fuse,&__pyx_n_s__position,&__pyx_n_s__orientation,&__pyx_n_s__velocity,&__pyx_n_s__callback,0};
  __Pyx_RefNannySetupContext("initialize");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[5] = {0,0,0,0,0};

    /* "pyspades\world.pyx":300
 * 
 *     def initialize(self, double fuse, Vertex3 position, Vertex3 orientation,
 *                    Vertex3 velocity, callback = None):             # <<<<<<<<<<<<<<
 *         self.name = 'grenade'
 *         self.grenade = create_grenade(position.value, velocity.value)
 */
    values[4] = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__fuse);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__position);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("initialize", 0, 4, 5, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__orientation);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("initialize", 0, 4, 5, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__velocity);
      if (likely(values[3])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("initialize", 0, 4, 5, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  4:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__callback);
        if (value) { values[4] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "initialize") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_fuse = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_fuse == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_position = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)values[1]);
    __pyx_v_orientation = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)values[2]);
    __pyx_v_velocity = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)values[3]);
    __pyx_v_callback = values[4];
  } else {
    __pyx_v_callback = ((PyObject *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5:
      __pyx_v_callback = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4:
      __pyx_v_velocity = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)PyTuple_GET_ITEM(__pyx_args, 3));
      __pyx_v_orientation = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)PyTuple_GET_ITEM(__pyx_args, 2));
      __pyx_v_position = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)PyTuple_GET_ITEM(__pyx_args, 1));
      __pyx_v_fuse = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_fuse == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("initialize", 0, 4, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pyspades.world.Grenade.initialize");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_position), __pyx_ptype_8pyspades_6common_Vertex3, 1, "position", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_orientation), __pyx_ptype_8pyspades_6common_Vertex3, 1, "orientation", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_velocity), __pyx_ptype_8pyspades_6common_Vertex3, 1, "velocity", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pyspades\world.pyx":301
 *     def initialize(self, double fuse, Vertex3 position, Vertex3 orientation,
 *                    Vertex3 velocity, callback = None):
 *         self.name = 'grenade'             # <<<<<<<<<<<<<<
 *         self.grenade = create_grenade(position.value, velocity.value)
 *         self.position = create_proxy_vector(&self.grenade.p)
 */
  __Pyx_INCREF(((PyObject *)__pyx_n_s__grenade));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__grenade));
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->__pyx_base.name);
  __Pyx_DECREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->__pyx_base.name);
  ((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->__pyx_base.name = ((PyObject *)__pyx_n_s__grenade);

  /* "pyspades\world.pyx":302
 *                    Vertex3 velocity, callback = None):
 *         self.name = 'grenade'
 *         self.grenade = create_grenade(position.value, velocity.value)             # <<<<<<<<<<<<<<
 *         self.position = create_proxy_vector(&self.grenade.p)
 *         self.velocity = create_proxy_vector(&self.grenade.v)
 */
  ((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->grenade = create_grenade(__pyx_v_position->value, __pyx_v_velocity->value);

  /* "pyspades\world.pyx":303
 *         self.name = 'grenade'
 *         self.grenade = create_grenade(position.value, velocity.value)
 *         self.position = create_proxy_vector(&self.grenade.p)             # <<<<<<<<<<<<<<
 *         self.velocity = create_proxy_vector(&self.grenade.v)
 *         if orientation is not None:
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_8pyspades_6common_create_proxy_vector((&((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->grenade->p))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 303; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->position);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->position));
  ((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->position = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pyspades\world.pyx":304
 *         self.grenade = create_grenade(position.value, velocity.value)
 *         self.position = create_proxy_vector(&self.grenade.p)
 *         self.velocity = create_proxy_vector(&self.grenade.v)             # <<<<<<<<<<<<<<
 *         if orientation is not None:
 *             self.velocity += orientation
 */
  __pyx_t_1 = ((PyObject *)__pyx_f_8pyspades_6common_create_proxy_vector((&((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->grenade->v))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->velocity);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->velocity));
  ((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->velocity = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pyspades\world.pyx":305
 *         self.position = create_proxy_vector(&self.grenade.p)
 *         self.velocity = create_proxy_vector(&self.grenade.v)
 *         if orientation is not None:             # <<<<<<<<<<<<<<
 *             self.velocity += orientation
 *         self.fuse = fuse
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_orientation) != Py_None);
  if (__pyx_t_2) {

    /* "pyspades\world.pyx":306
 *         self.velocity = create_proxy_vector(&self.grenade.v)
 *         if orientation is not None:
 *             self.velocity += orientation             # <<<<<<<<<<<<<<
 *         self.fuse = fuse
 *         self.callback = callback
 */
    __pyx_t_1 = PyNumber_InPlaceAdd(((PyObject *)((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->velocity), ((PyObject *)__pyx_v_orientation)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_8pyspades_6common_Vertex3))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GIVEREF(__pyx_t_1);
    __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->velocity);
    __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->velocity));
    ((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->velocity = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)__pyx_t_1);
    __pyx_t_1 = 0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "pyspades\world.pyx":307
 *         if orientation is not None:
 *             self.velocity += orientation
 *         self.fuse = fuse             # <<<<<<<<<<<<<<
 *         self.callback = callback
 * 
 */
  ((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->fuse = __pyx_v_fuse;

  /* "pyspades\world.pyx":308
 *             self.velocity += orientation
 *         self.fuse = fuse
 *         self.callback = callback             # <<<<<<<<<<<<<<
 * 
 *     cdef int hit_test(self, Vertex3 position):
 */
  __Pyx_INCREF(__pyx_v_callback);
  __Pyx_GIVEREF(__pyx_v_callback);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->callback);
  __Pyx_DECREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->callback);
  ((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->callback = __pyx_v_callback;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pyspades.world.Grenade.initialize");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":310
 *         self.callback = callback
 * 
 *     cdef int hit_test(self, Vertex3 position):             # <<<<<<<<<<<<<<
 *         cdef Vector * nade = self.position.value
 *         return can_see(self.world.map, position.x, position.y, position.z,
 */

static  int __pyx_f_8pyspades_5world_7Grenade_hit_test(struct __pyx_obj_8pyspades_5world_Grenade *__pyx_v_self, struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_v_position) {
  struct Vector *__pyx_v_nade;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  float __pyx_t_3;
  float __pyx_t_4;
  float __pyx_t_5;
  float __pyx_t_6;
  float __pyx_t_7;
  __Pyx_RefNannySetupContext("hit_test");

  /* "pyspades\world.pyx":311
 * 
 *     cdef int hit_test(self, Vertex3 position):
 *         cdef Vector * nade = self.position.value             # <<<<<<<<<<<<<<
 *         return can_see(self.world.map, position.x, position.y, position.z,
 *                        nade.x, nade.y, nade.z)
 */
  __pyx_v_nade = __pyx_v_self->position->value;

  /* "pyspades\world.pyx":312
 *     cdef int hit_test(self, Vertex3 position):
 *         cdef Vector * nade = self.position.value
 *         return can_see(self.world.map, position.x, position.y, position.z,             # <<<<<<<<<<<<<<
 *                        nade.x, nade.y, nade.z)
 * 
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->__pyx_base.world->map);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_position), __pyx_n_s__x); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_3 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_position), __pyx_n_s__y); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_4 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_position), __pyx_n_s__z); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pyspades\world.pyx":313
 *         cdef Vector * nade = self.position.value
 *         return can_see(self.world.map, position.x, position.y, position.z,
 *                        nade.x, nade.y, nade.z)             # <<<<<<<<<<<<<<
 * 
 *     cpdef get_next_collision(self, double dt):
 */
  __pyx_t_6 = __pyx_v_nade->x;
  __pyx_t_7 = __pyx_v_nade->y;
  __pyx_r = __pyx_f_8pyspades_5world_can_see(((struct __pyx_obj_8pyspades_3vxl_VXLData *)__pyx_t_1), __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7, __pyx_v_nade->z);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_WriteUnraisable("pyspades.world.Grenade.hit_test");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":315
 *                        nade.x, nade.y, nade.z)
 * 
 *     cpdef get_next_collision(self, double dt):             # <<<<<<<<<<<<<<
 *         if self.velocity.is_zero():
 *             return None
 */

static PyObject *__pyx_pf_8pyspades_5world_7Grenade_1get_next_collision(PyObject *__pyx_v_self, PyObject *__pyx_arg_dt); /*proto*/
static  PyObject *__pyx_f_8pyspades_5world_7Grenade_get_next_collision(struct __pyx_obj_8pyspades_5world_Grenade *__pyx_v_self, double __pyx_v_dt, int __pyx_skip_dispatch) {
  double __pyx_v_eta;
  double __pyx_v_x;
  double __pyx_v_y;
  double __pyx_v_z;
  struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_v_old_position = 0;
  struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_v_old_velocity = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  double __pyx_t_5;
  double __pyx_t_6;
  double __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("get_next_collision");
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__get_next_collision); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (void *)&__pyx_pf_8pyspades_5world_7Grenade_1get_next_collision)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyFloat_FromDouble(__pyx_v_dt); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_3));
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pyspades\world.pyx":316
 * 
 *     cpdef get_next_collision(self, double dt):
 *         if self.velocity.is_zero():             # <<<<<<<<<<<<<<
 *             return None
 *         cdef double eta = 0.0
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self->velocity), __pyx_n_s__is_zero); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_4) {

    /* "pyspades\world.pyx":317
 *     cpdef get_next_collision(self, double dt):
 *         if self.velocity.is_zero():
 *             return None             # <<<<<<<<<<<<<<
 *         cdef double eta = 0.0
 *         cdef double x, y, z
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "pyspades\world.pyx":318
 *         if self.velocity.is_zero():
 *             return None
 *         cdef double eta = 0.0             # <<<<<<<<<<<<<<
 *         cdef double x, y, z
 *         cdef Vertex3 old_position = self.position.copy()
 */
  __pyx_v_eta = 0.0;

  /* "pyspades\world.pyx":320
 *         cdef double eta = 0.0
 *         cdef double x, y, z
 *         cdef Vertex3 old_position = self.position.copy()             # <<<<<<<<<<<<<<
 *         cdef Vertex3 old_velocity = self.velocity.copy()
 *         while move_grenade(self.grenade) == 0:
 */
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_self->position), __pyx_n_s__copy); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_8pyspades_6common_Vertex3))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_old_position = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "pyspades\world.pyx":321
 *         cdef double x, y, z
 *         cdef Vertex3 old_position = self.position.copy()
 *         cdef Vertex3 old_velocity = self.velocity.copy()             # <<<<<<<<<<<<<<
 *         while move_grenade(self.grenade) == 0:
 *             eta += dt
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self->velocity), __pyx_n_s__copy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_8pyspades_6common_Vertex3))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_old_velocity = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pyspades\world.pyx":322
 *         cdef Vertex3 old_position = self.position.copy()
 *         cdef Vertex3 old_velocity = self.velocity.copy()
 *         while move_grenade(self.grenade) == 0:             # <<<<<<<<<<<<<<
 *             eta += dt
 *             if eta > 5.0:
 */
  while (1) {
    __pyx_t_4 = (move_grenade(__pyx_v_self->grenade) == 0);
    if (!__pyx_t_4) break;

    /* "pyspades\world.pyx":323
 *         cdef Vertex3 old_velocity = self.velocity.copy()
 *         while move_grenade(self.grenade) == 0:
 *             eta += dt             # <<<<<<<<<<<<<<
 *             if eta > 5.0:
 *                 break
 */
    __pyx_v_eta = (__pyx_v_eta + __pyx_v_dt);

    /* "pyspades\world.pyx":324
 *         while move_grenade(self.grenade) == 0:
 *             eta += dt
 *             if eta > 5.0:             # <<<<<<<<<<<<<<
 *                 break
 *         x, y, z = self.position.x, self.position.y, self.position.z
 */
    __pyx_t_4 = (__pyx_v_eta > 5.0);
    if (__pyx_t_4) {

      /* "pyspades\world.pyx":325
 *             eta += dt
 *             if eta > 5.0:
 *                 break             # <<<<<<<<<<<<<<
 *         x, y, z = self.position.x, self.position.y, self.position.z
 *         self.position.set_vector(old_position)
 */
      goto __pyx_L5_break;
      goto __pyx_L6;
    }
    __pyx_L6:;
  }
  __pyx_L5_break:;

  /* "pyspades\world.pyx":326
 *             if eta > 5.0:
 *                 break
 *         x, y, z = self.position.x, self.position.y, self.position.z             # <<<<<<<<<<<<<<
 *         self.position.set_vector(old_position)
 *         self.velocity.set_vector(old_velocity)
 */
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_self->position), __pyx_n_s__x); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_self->position), __pyx_n_s__y); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_self->position), __pyx_n_s__z); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_x = __pyx_t_5;
  __pyx_v_y = __pyx_t_6;
  __pyx_v_z = __pyx_t_7;

  /* "pyspades\world.pyx":327
 *                 break
 *         x, y, z = self.position.x, self.position.y, self.position.z
 *         self.position.set_vector(old_position)             # <<<<<<<<<<<<<<
 *         self.velocity.set_vector(old_velocity)
 *         return eta, x, y, z
 */
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_self->position), __pyx_n_s__set_vector); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_INCREF(((PyObject *)__pyx_v_old_position));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_old_position));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_old_position));
  __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "pyspades\world.pyx":328
 *         x, y, z = self.position.x, self.position.y, self.position.z
 *         self.position.set_vector(old_position)
 *         self.velocity.set_vector(old_velocity)             # <<<<<<<<<<<<<<
 *         return eta, x, y, z
 * 
 */
  __pyx_t_3 = PyObject_GetAttr(((PyObject *)__pyx_v_self->velocity), __pyx_n_s__set_vector); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_INCREF(((PyObject *)__pyx_v_old_velocity));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_old_velocity));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_old_velocity));
  __pyx_t_2 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pyspades\world.pyx":329
 *         self.position.set_vector(old_position)
 *         self.velocity.set_vector(old_velocity)
 *         return eta, x, y, z             # <<<<<<<<<<<<<<
 * 
 *     cpdef double get_damage(self, Vertex3 player_position):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_eta); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_y); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = PyFloat_FromDouble(__pyx_v_z); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = PyTuple_New(4); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_9));
  PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_9, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_9, 3, __pyx_t_8);
  __Pyx_GIVEREF(__pyx_t_8);
  __pyx_t_2 = 0;
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_8 = 0;
  __pyx_r = ((PyObject *)__pyx_t_9);
  __pyx_t_9 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("pyspades.world.Grenade.get_next_collision");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_old_position);
  __Pyx_XDECREF((PyObject *)__pyx_v_old_velocity);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":315
 *                        nade.x, nade.y, nade.z)
 * 
 *     cpdef get_next_collision(self, double dt):             # <<<<<<<<<<<<<<
 *         if self.velocity.is_zero():
 *             return None
 */

static PyObject *__pyx_pf_8pyspades_5world_7Grenade_1get_next_collision(PyObject *__pyx_v_self, PyObject *__pyx_arg_dt); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_7Grenade_1get_next_collision(PyObject *__pyx_v_self, PyObject *__pyx_arg_dt) {
  double __pyx_v_dt;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_next_collision");
  assert(__pyx_arg_dt); {
    __pyx_v_dt = __pyx_PyFloat_AsDouble(__pyx_arg_dt); if (unlikely((__pyx_v_dt == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pyspades.world.Grenade.get_next_collision");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_8pyspades_5world_Grenade *)((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->__pyx_base.__pyx_vtab)->get_next_collision(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self), __pyx_v_dt, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pyspades.world.Grenade.get_next_collision");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":331
 *         return eta, x, y, z
 * 
 *     cpdef double get_damage(self, Vertex3 player_position):             # <<<<<<<<<<<<<<
 *         cdef Vector * position = self.position.value
 *         cdef double diff_x, diff_y, diff_z
 */

static PyObject *__pyx_pf_8pyspades_5world_7Grenade_2get_damage(PyObject *__pyx_v_self, PyObject *__pyx_v_player_position); /*proto*/
static  double __pyx_f_8pyspades_5world_7Grenade_get_damage(struct __pyx_obj_8pyspades_5world_Grenade *__pyx_v_self, struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_v_player_position, int __pyx_skip_dispatch) {
  struct Vector *__pyx_v_position;
  double __pyx_v_diff_x;
  double __pyx_v_diff_y;
  double __pyx_v_diff_z;
  double __pyx_v_value;
  double __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  double __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  __Pyx_RefNannySetupContext("get_damage");
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__get_damage); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (void *)&__pyx_pf_8pyspades_5world_7Grenade_2get_damage)) {
      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_2));
      __Pyx_INCREF(((PyObject *)__pyx_v_player_position));
      PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_player_position));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_player_position));
      __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
      __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_4;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pyspades\world.pyx":332
 * 
 *     cpdef double get_damage(self, Vertex3 player_position):
 *         cdef Vector * position = self.position.value             # <<<<<<<<<<<<<<
 *         cdef double diff_x, diff_y, diff_z
 *         diff_x = player_position.x - position.x
 */
  __pyx_v_position = __pyx_v_self->position->value;

  /* "pyspades\world.pyx":334
 *         cdef Vector * position = self.position.value
 *         cdef double diff_x, diff_y, diff_z
 *         diff_x = player_position.x - position.x             # <<<<<<<<<<<<<<
 *         diff_y = player_position.y - position.y
 *         diff_z = player_position.z - position.z
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_player_position), __pyx_n_s__x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_position->x); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyNumber_Subtract(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_diff_x = __pyx_t_4;

  /* "pyspades\world.pyx":335
 *         cdef double diff_x, diff_y, diff_z
 *         diff_x = player_position.x - position.x
 *         diff_y = player_position.y - position.y             # <<<<<<<<<<<<<<
 *         diff_z = player_position.z - position.z
 *         cdef double value
 */
  __pyx_t_2 = PyObject_GetAttr(((PyObject *)__pyx_v_player_position), __pyx_n_s__y); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_position->y); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyNumber_Subtract(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_diff_y = __pyx_t_4;

  /* "pyspades\world.pyx":336
 *         diff_x = player_position.x - position.x
 *         diff_y = player_position.y - position.y
 *         diff_z = player_position.z - position.z             # <<<<<<<<<<<<<<
 *         cdef double value
 *         if (fabs(diff_x) < 16 and
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_player_position), __pyx_n_s__z); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 336; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_position->z); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 336; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyNumber_Subtract(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 336; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 336; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_diff_z = __pyx_t_4;

  /* "pyspades\world.pyx":338
 *         diff_z = player_position.z - position.z
 *         cdef double value
 *         if (fabs(diff_x) < 16 and             # <<<<<<<<<<<<<<
 *             fabs(diff_y) < 16 and
 *             fabs(diff_z) < 16 and
 */
  __pyx_t_5 = (fabs(__pyx_v_diff_x) < 16.0);
  if (__pyx_t_5) {

    /* "pyspades\world.pyx":339
 *         cdef double value
 *         if (fabs(diff_x) < 16 and
 *             fabs(diff_y) < 16 and             # <<<<<<<<<<<<<<
 *             fabs(diff_z) < 16 and
 *             self.hit_test(player_position)):
 */
    __pyx_t_6 = (fabs(__pyx_v_diff_y) < 16.0);
    if (__pyx_t_6) {

      /* "pyspades\world.pyx":340
 *         if (fabs(diff_x) < 16 and
 *             fabs(diff_y) < 16 and
 *             fabs(diff_z) < 16 and             # <<<<<<<<<<<<<<
 *             self.hit_test(player_position)):
 *             value = diff_x**2 + diff_y**2 + diff_z**2
 */
      __pyx_t_7 = (fabs(__pyx_v_diff_z) < 16.0);
      if (__pyx_t_7) {

        /* "pyspades\world.pyx":341
 *             fabs(diff_y) < 16 and
 *             fabs(diff_z) < 16 and
 *             self.hit_test(player_position)):             # <<<<<<<<<<<<<<
 *             value = diff_x**2 + diff_y**2 + diff_z**2
 *             if value == 0.0:
 */
        __pyx_t_2 = ((PyObject *)__pyx_v_player_position);
        __Pyx_INCREF(__pyx_t_2);
        __pyx_t_8 = ((struct __pyx_vtabstruct_8pyspades_5world_Grenade *)__pyx_v_self->__pyx_base.__pyx_vtab)->hit_test(__pyx_v_self, ((struct __pyx_obj_8pyspades_6common_Vertex3 *)__pyx_t_2));
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      } else {
        __pyx_t_8 = __pyx_t_7;
      }
      __pyx_t_7 = __pyx_t_8;
    } else {
      __pyx_t_7 = __pyx_t_6;
    }
    __pyx_t_6 = __pyx_t_7;
  } else {
    __pyx_t_6 = __pyx_t_5;
  }
  if (__pyx_t_6) {

    /* "pyspades\world.pyx":342
 *             fabs(diff_z) < 16 and
 *             self.hit_test(player_position)):
 *             value = diff_x**2 + diff_y**2 + diff_z**2             # <<<<<<<<<<<<<<
 *             if value == 0.0:
 *                 return 100.0
 */
    __pyx_v_value = ((pow(__pyx_v_diff_x, 2.0) + pow(__pyx_v_diff_y, 2.0)) + pow(__pyx_v_diff_z, 2.0));

    /* "pyspades\world.pyx":343
 *             self.hit_test(player_position)):
 *             value = diff_x**2 + diff_y**2 + diff_z**2
 *             if value == 0.0:             # <<<<<<<<<<<<<<
 *                 return 100.0
 *             return 4096.0 / value
 */
    __pyx_t_6 = (__pyx_v_value == 0.0);
    if (__pyx_t_6) {

      /* "pyspades\world.pyx":344
 *             value = diff_x**2 + diff_y**2 + diff_z**2
 *             if value == 0.0:
 *                 return 100.0             # <<<<<<<<<<<<<<
 *             return 4096.0 / value
 *         return 0
 */
      __pyx_r = 100.0;
      goto __pyx_L0;
      goto __pyx_L4;
    }
    __pyx_L4:;

    /* "pyspades\world.pyx":345
 *             if value == 0.0:
 *                 return 100.0
 *             return 4096.0 / value             # <<<<<<<<<<<<<<
 *         return 0
 * 
 */
    if (unlikely(__pyx_v_value == 0)) {
      PyErr_Format(PyExc_ZeroDivisionError, "float division");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_r = (4096.0 / __pyx_v_value);
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "pyspades\world.pyx":346
 *                 return 100.0
 *             return 4096.0 / value
 *         return 0             # <<<<<<<<<<<<<<
 * 
 *     cdef int update(self, double dt) except -1:
 */
  __pyx_r = 0.0;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_WriteUnraisable("pyspades.world.Grenade.get_damage");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":331
 *         return eta, x, y, z
 * 
 *     cpdef double get_damage(self, Vertex3 player_position):             # <<<<<<<<<<<<<<
 *         cdef Vector * position = self.position.value
 *         cdef double diff_x, diff_y, diff_z
 */

static PyObject *__pyx_pf_8pyspades_5world_7Grenade_2get_damage(PyObject *__pyx_v_self, PyObject *__pyx_v_player_position); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_7Grenade_2get_damage(PyObject *__pyx_v_self, PyObject *__pyx_v_player_position) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("get_damage");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_player_position), __pyx_ptype_8pyspades_6common_Vertex3, 1, "player_position", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_player_position;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(((struct __pyx_vtabstruct_8pyspades_5world_Grenade *)((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->__pyx_base.__pyx_vtab)->get_damage(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self), ((struct __pyx_obj_8pyspades_6common_Vertex3 *)__pyx_t_1), 1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pyspades.world.Grenade.get_damage");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":348
 *         return 0
 * 
 *     cdef int update(self, double dt) except -1:             # <<<<<<<<<<<<<<
 *         self.fuse -= dt
 *         if self.fuse <= 0:
 */

static  int __pyx_f_8pyspades_5world_7Grenade_update(struct __pyx_obj_8pyspades_5world_Grenade *__pyx_v_self, double __pyx_v_dt) {
  int __pyx_r;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("update");

  /* "pyspades\world.pyx":349
 * 
 *     cdef int update(self, double dt) except -1:
 *         self.fuse -= dt             # <<<<<<<<<<<<<<
 *         if self.fuse <= 0:
 *             if self.callback is not None:
 */
  __pyx_v_self->fuse = (__pyx_v_self->fuse - __pyx_v_dt);

  /* "pyspades\world.pyx":350
 *     cdef int update(self, double dt) except -1:
 *         self.fuse -= dt
 *         if self.fuse <= 0:             # <<<<<<<<<<<<<<
 *             if self.callback is not None:
 *                 self.callback(self)
 */
  __pyx_t_1 = (__pyx_v_self->fuse <= 0.0);
  if (__pyx_t_1) {

    /* "pyspades\world.pyx":351
 *         self.fuse -= dt
 *         if self.fuse <= 0:
 *             if self.callback is not None:             # <<<<<<<<<<<<<<
 *                 self.callback(self)
 *             self.delete()
 */
    __pyx_t_1 = (__pyx_v_self->callback != Py_None);
    if (__pyx_t_1) {

      /* "pyspades\world.pyx":352
 *         if self.fuse <= 0:
 *             if self.callback is not None:
 *                 self.callback(self)             # <<<<<<<<<<<<<<
 *             self.delete()
 *             return 0
 */
      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_2));
      __Pyx_INCREF(((PyObject *)__pyx_v_self));
      PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
      __pyx_t_3 = PyObject_Call(__pyx_v_self->callback, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L4;
    }
    __pyx_L4:;

    /* "pyspades\world.pyx":353
 *             if self.callback is not None:
 *                 self.callback(self)
 *             self.delete()             # <<<<<<<<<<<<<<
 *             return 0
 *         move_grenade(self.grenade)
 */
    __pyx_t_3 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__delete); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 353; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 353; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "pyspades\world.pyx":354
 *                 self.callback(self)
 *             self.delete()
 *             return 0             # <<<<<<<<<<<<<<
 *         move_grenade(self.grenade)
 * 
 */
    __pyx_r = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "pyspades\world.pyx":355
 *             self.delete()
 *             return 0
 *         move_grenade(self.grenade)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  move_grenade(__pyx_v_self->grenade);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pyspades.world.Grenade.update");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":357
 *         move_grenade(self.grenade)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         destroy_grenade(self.grenade)
 * 
 */

static void __pyx_pf_8pyspades_5world_7Grenade_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_8pyspades_5world_7Grenade_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "pyspades\world.pyx":358
 * 
 *     def __dealloc__(self):
 *         destroy_grenade(self.grenade)             # <<<<<<<<<<<<<<
 * 
 * cdef class World(object):
 */
  destroy_grenade(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->grenade);

  __Pyx_RefNannyFinishContext();
}

/* "pyspades\world.pyx":293
 * cdef class Grenade(Object):
 *     cdef public:
 *         Vertex3 position, velocity             # <<<<<<<<<<<<<<
 *         float fuse
 *         object callback
 */

static PyObject *__pyx_pf_8pyspades_5world_7Grenade_8position___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_7Grenade_8position___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->position));
  __pyx_r = ((PyObject *)((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->position);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_7Grenade_8position_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_7Grenade_8position_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_8pyspades_6common_Vertex3))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->position);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->position));
  ((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->position = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.Grenade.position.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_7Grenade_8position_2__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_8pyspades_5world_7Grenade_8position_2__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->position);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->position));
  ((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->position = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)Py_None);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_8pyspades_5world_7Grenade_8velocity___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_7Grenade_8velocity___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->velocity));
  __pyx_r = ((PyObject *)((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->velocity);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_7Grenade_8velocity_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_7Grenade_8velocity_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_8pyspades_6common_Vertex3))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->velocity);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->velocity));
  ((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->velocity = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.Grenade.velocity.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_7Grenade_8velocity_2__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_8pyspades_5world_7Grenade_8velocity_2__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->velocity);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->velocity));
  ((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->velocity = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)Py_None);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":294
 *     cdef public:
 *         Vertex3 position, velocity
 *         float fuse             # <<<<<<<<<<<<<<
 *         object callback
 *         object team
 */

static PyObject *__pyx_pf_8pyspades_5world_7Grenade_4fuse___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_7Grenade_4fuse___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->fuse); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pyspades.world.Grenade.fuse.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_7Grenade_4fuse_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_7Grenade_4fuse_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  float __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->fuse = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.Grenade.fuse.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":295
 *         Vertex3 position, velocity
 *         float fuse
 *         object callback             # <<<<<<<<<<<<<<
 *         object team
 *     cdef GrenadeType * grenade
 */

static PyObject *__pyx_pf_8pyspades_5world_7Grenade_8callback___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_7Grenade_8callback___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->callback);
  __pyx_r = ((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->callback;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_7Grenade_8callback_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_7Grenade_8callback_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->callback);
  __Pyx_DECREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->callback);
  ((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->callback = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_7Grenade_8callback_2__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_8pyspades_5world_7Grenade_8callback_2__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->callback);
  __Pyx_DECREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->callback);
  ((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->callback = Py_None;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":296
 *         float fuse
 *         object callback
 *         object team             # <<<<<<<<<<<<<<
 *     cdef GrenadeType * grenade
 * 
 */

static PyObject *__pyx_pf_8pyspades_5world_7Grenade_4team___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_7Grenade_4team___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->team);
  __pyx_r = ((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->team;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_7Grenade_4team_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_7Grenade_4team_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->team);
  __Pyx_DECREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->team);
  ((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->team = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_7Grenade_4team_2__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_8pyspades_5world_7Grenade_4team_2__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->team);
  __Pyx_DECREF(((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->team);
  ((struct __pyx_obj_8pyspades_5world_Grenade *)__pyx_v_self)->team = Py_None;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":366
 *         float time
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.objects = []
 *         self.time = 0
 */

static int __pyx_pf_8pyspades_5world_5World___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_8pyspades_5world_5World___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;

  /* "pyspades\world.pyx":367
 * 
 *     def __init__(self):
 *         self.objects = []             # <<<<<<<<<<<<<<
 *         self.time = 0
 * 
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 367; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_1));
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->objects);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->objects));
  ((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->objects = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "pyspades\world.pyx":368
 *     def __init__(self):
 *         self.objects = []
 *         self.time = 0             # <<<<<<<<<<<<<<
 * 
 *     def update(self, double dt):
 */
  ((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->time = 0.0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pyspades.world.World.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":370
 *         self.time = 0
 * 
 *     def update(self, double dt):             # <<<<<<<<<<<<<<
 *         if self.map is None:
 *             return
 */

static PyObject *__pyx_pf_8pyspades_5world_5World_1update(PyObject *__pyx_v_self, PyObject *__pyx_arg_dt); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_5World_1update(PyObject *__pyx_v_self, PyObject *__pyx_arg_dt) {
  double __pyx_v_dt;
  struct __pyx_obj_8pyspades_5world_Object *__pyx_v_instance;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("update");
  assert(__pyx_arg_dt); {
    __pyx_v_dt = __pyx_PyFloat_AsDouble(__pyx_arg_dt); if (unlikely((__pyx_v_dt == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("pyspades.world.World.update");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_instance = ((struct __pyx_obj_8pyspades_5world_Object *)Py_None); __Pyx_INCREF(Py_None);

  /* "pyspades\world.pyx":371
 * 
 *     def update(self, double dt):
 *         if self.map is None:             # <<<<<<<<<<<<<<
 *             return
 *         self.time += dt
 */
  __pyx_t_1 = (((PyObject *)((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->map) == Py_None);
  if (__pyx_t_1) {

    /* "pyspades\world.pyx":372
 *     def update(self, double dt):
 *         if self.map is None:
 *             return             # <<<<<<<<<<<<<<
 *         self.time += dt
 *         set_globals(self.map.map, self.time, dt)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "pyspades\world.pyx":373
 *         if self.map is None:
 *             return
 *         self.time += dt             # <<<<<<<<<<<<<<
 *         set_globals(self.map.map, self.time, dt)
 *         cdef Object instance
 */
  ((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->time = (((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->time + __pyx_v_dt);

  /* "pyspades\world.pyx":374
 *             return
 *         self.time += dt
 *         set_globals(self.map.map, self.time, dt)             # <<<<<<<<<<<<<<
 *         cdef Object instance
 *         for instance in self.objects[:]:
 */
  set_globals(((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->map->map, ((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->time, __pyx_v_dt);

  /* "pyspades\world.pyx":376
 *         set_globals(self.map.map, self.time, dt)
 *         cdef Object instance
 *         for instance in self.objects[:]:             # <<<<<<<<<<<<<<
 *             instance.update(dt)
 * 
 */
  __pyx_t_3 = __Pyx_PySequence_GetSlice(((PyObject *)((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->objects), 0, PY_SSIZE_T_MAX); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  if (unlikely(__pyx_t_3 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_2 = 0; __pyx_t_4 = ((PyObject *)__pyx_t_3); __Pyx_INCREF(__pyx_t_4);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_4)) break;
    __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++;
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_8pyspades_5world_Object))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_v_instance));
    __pyx_v_instance = ((struct __pyx_obj_8pyspades_5world_Object *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "pyspades\world.pyx":377
 *         cdef Object instance
 *         for instance in self.objects[:]:
 *             instance.update(dt)             # <<<<<<<<<<<<<<
 * 
 *     cpdef delete_object(self, Object item):
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_8pyspades_5world_Object *)__pyx_v_instance->__pyx_vtab)->update(__pyx_v_instance, __pyx_v_dt); if (unlikely(__pyx_t_5 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pyspades.world.World.update");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_instance);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":379
 *             instance.update(dt)
 * 
 *     cpdef delete_object(self, Object item):             # <<<<<<<<<<<<<<
 *         self.objects.remove(item)
 * 
 */

static PyObject *__pyx_pf_8pyspades_5world_5World_2delete_object(PyObject *__pyx_v_self, PyObject *__pyx_v_item); /*proto*/
static  PyObject *__pyx_f_8pyspades_5world_5World_delete_object(struct __pyx_obj_8pyspades_5world_World *__pyx_v_self, struct __pyx_obj_8pyspades_5world_Object *__pyx_v_item, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("delete_object");
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__delete_object); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (void *)&__pyx_pf_8pyspades_5world_5World_2delete_object)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_2));
      __Pyx_INCREF(((PyObject *)__pyx_v_item));
      PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_item));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_item));
      __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_3;
      __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "pyspades\world.pyx":380
 * 
 *     cpdef delete_object(self, Object item):
 *         self.objects.remove(item)             # <<<<<<<<<<<<<<
 * 
 *     def create_object(self, klass, *arg, **kw):
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self->objects), __pyx_n_s__remove); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  __Pyx_INCREF(((PyObject *)__pyx_v_item));
  PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_item));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_item));
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pyspades.world.World.delete_object");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":379
 *             instance.update(dt)
 * 
 *     cpdef delete_object(self, Object item):             # <<<<<<<<<<<<<<
 *         self.objects.remove(item)
 * 
 */

static PyObject *__pyx_pf_8pyspades_5world_5World_2delete_object(PyObject *__pyx_v_self, PyObject *__pyx_v_item); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_5World_2delete_object(PyObject *__pyx_v_self, PyObject *__pyx_v_item) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("delete_object");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_item), __pyx_ptype_8pyspades_5world_Object, 1, "item", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_item;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = ((struct __pyx_vtabstruct_8pyspades_5world_World *)((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->__pyx_vtab)->delete_object(((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self), ((struct __pyx_obj_8pyspades_5world_Object *)__pyx_t_1), 1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pyspades.world.World.delete_object");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":382
 *         self.objects.remove(item)
 * 
 *     def create_object(self, klass, *arg, **kw):             # <<<<<<<<<<<<<<
 *         new_object = klass(self, *arg, **kw)
 *         self.objects.append(new_object)
 */

static PyObject *__pyx_pf_8pyspades_5world_5World_3create_object(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_5World_3create_object(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_klass = 0;
  PyObject *__pyx_v_arg = 0;
  PyObject *__pyx_v_kw = 0;
  PyObject *__pyx_v_new_object;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__klass,0};
  __Pyx_RefNannySetupContext("create_object");
  __pyx_v_kw = PyDict_New(); if (unlikely(!__pyx_v_kw)) return NULL;
  __Pyx_GOTREF(__pyx_v_kw);
  if (PyTuple_GET_SIZE(__pyx_args) > 1) {
    __pyx_v_arg = PyTuple_GetSlice(__pyx_args, 1, PyTuple_GET_SIZE(__pyx_args)); __Pyx_GOTREF(__pyx_v_arg);

    if (unlikely(!__pyx_v_arg)) {
      __Pyx_DECREF(__pyx_v_kw);
      return NULL;
    }
  } else {
    __pyx_v_arg = __pyx_empty_tuple; __Pyx_INCREF(__pyx_empty_tuple);
  }
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      default:
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__klass);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
    }
    if (unlikely(kw_args > 0)) {
      const Py_ssize_t used_pos_args = (PyTuple_GET_SIZE(__pyx_args) < 1) ? PyTuple_GET_SIZE(__pyx_args) : 1;
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kw, values, used_pos_args, "create_object") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 382; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_klass = values[0];
  } else if (PyTuple_GET_SIZE(__pyx_args) < 1) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_klass = PyTuple_GET_ITEM(__pyx_args, 0);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("create_object", 0, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 382; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_arg);
  __Pyx_DECREF(__pyx_v_kw);
  __Pyx_AddTraceback("pyspades.world.World.create_object");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_new_object = Py_None; __Pyx_INCREF(Py_None);

  /* "pyspades\world.pyx":383
 * 
 *     def create_object(self, klass, *arg, **kw):
 *         new_object = klass(self, *arg, **kw)             # <<<<<<<<<<<<<<
 *         self.objects.append(new_object)
 *         return new_object
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_INCREF(__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_self);
  __Pyx_GIVEREF(__pyx_v_self);
  __pyx_t_2 = PySequence_Tuple(((PyObject *)__pyx_v_arg)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __pyx_t_3 = PyNumber_Add(((PyObject *)__pyx_t_1), ((PyObject *)__pyx_t_2)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_2 = PyEval_CallObjectWithKeywords(__pyx_v_klass, ((PyObject *)__pyx_t_3), ((PyObject *)__pyx_v_kw)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_v_new_object);
  __pyx_v_new_object = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pyspades\world.pyx":384
 *     def create_object(self, klass, *arg, **kw):
 *         new_object = klass(self, *arg, **kw)
 *         self.objects.append(new_object)             # <<<<<<<<<<<<<<
 *         return new_object
 * 
 */
  if (unlikely(((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->objects == Py_None)) {
    PyErr_SetString(PyExc_AttributeError, "'NoneType' object has no attribute 'append'"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 384; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_4 = PyList_Append(((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->objects, __pyx_v_new_object); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 384; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "pyspades\world.pyx":385
 *         new_object = klass(self, *arg, **kw)
 *         self.objects.append(new_object)
 *         return new_object             # <<<<<<<<<<<<<<
 * 
 * # utility functions
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_new_object);
  __pyx_r = __pyx_v_new_object;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("pyspades.world.World.create_object");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_arg);
  __Pyx_DECREF(__pyx_v_kw);
  __Pyx_DECREF(__pyx_v_new_object);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":362
 * cdef class World(object):
 *     cdef public:
 *         VXLData map             # <<<<<<<<<<<<<<
 *         list objects
 *         float time
 */

static PyObject *__pyx_pf_8pyspades_5world_5World_3map___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_5World_3map___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->map));
  __pyx_r = ((PyObject *)((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->map);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_5World_3map_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_5World_3map_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_8pyspades_3vxl_VXLData))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 362; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->map);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->map));
  ((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->map = ((struct __pyx_obj_8pyspades_3vxl_VXLData *)__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.World.map.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_5World_3map_2__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_8pyspades_5world_5World_3map_2__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->map);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->map));
  ((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->map = ((struct __pyx_obj_8pyspades_3vxl_VXLData *)Py_None);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":363
 *     cdef public:
 *         VXLData map
 *         list objects             # <<<<<<<<<<<<<<
 *         float time
 * 
 */

static PyObject *__pyx_pf_8pyspades_5world_5World_7objects___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_5World_7objects___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->objects));
  __pyx_r = ((PyObject *)((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->objects);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_5World_7objects_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_5World_7objects_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected list, got %.200s", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 363; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->objects);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->objects));
  ((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->objects = ((PyObject*)__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.World.objects.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_5World_7objects_2__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_8pyspades_5world_5World_7objects_2__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->objects);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->objects));
  ((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->objects = ((PyObject*)Py_None);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":364
 *         VXLData map
 *         list objects
 *         float time             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self):
 */

static PyObject *__pyx_pf_8pyspades_5world_5World_4time___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_5World_4time___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->time); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("pyspades.world.World.time.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_8pyspades_5world_5World_4time_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_8pyspades_5world_5World_4time_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  float __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_8pyspades_5world_World *)__pyx_v_self)->time = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("pyspades.world.World.time.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":389
 * # utility functions
 * 
 * cpdef cube_line(x1, y1, z1, x2, y2, z2):             # <<<<<<<<<<<<<<
 *     cdef LongVector array[CUBE_ARRAY_LENGTH]
 *     cdef size_t size = cube_line_c(x1, y1, z1, x2, y2, z2, array)
 */

static PyObject *__pyx_pf_8pyspades_5world_cube_line(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static  PyObject *__pyx_f_8pyspades_5world_cube_line(PyObject *__pyx_v_x1, PyObject *__pyx_v_y1, PyObject *__pyx_v_z1, PyObject *__pyx_v_x2, PyObject *__pyx_v_y2, PyObject *__pyx_v_z2, int __pyx_skip_dispatch) {
  struct LongVector __pyx_v_array[CUBE_ARRAY_LENGTH];
  size_t __pyx_v_size;
  size_t __pyx_v_i;
  PyObject *__pyx_v_points = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  size_t __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_RefNannySetupContext("cube_line");

  /* "pyspades\world.pyx":391
 * cpdef cube_line(x1, y1, z1, x2, y2, z2):
 *     cdef LongVector array[CUBE_ARRAY_LENGTH]
 *     cdef size_t size = cube_line_c(x1, y1, z1, x2, y2, z2, array)             # <<<<<<<<<<<<<<
 *     cdef size_t i
 *     cdef list points = []
 */
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_x1); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyInt_AsInt(__pyx_v_y1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_v_z1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __Pyx_PyInt_AsInt(__pyx_v_x2); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_5 = __Pyx_PyInt_AsInt(__pyx_v_y2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_6 = __Pyx_PyInt_AsInt(__pyx_v_z2); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_size = cube_line(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_v_array);

  /* "pyspades\world.pyx":393
 *     cdef size_t size = cube_line_c(x1, y1, z1, x2, y2, z2, array)
 *     cdef size_t i
 *     cdef list points = []             # <<<<<<<<<<<<<<
 *     for i in xrange(size):
 *         points.append((array[i].x, array[i].y, array[i].z))
 */
  __pyx_t_7 = PyList_New(0); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_7));
  __pyx_v_points = __pyx_t_7;
  __pyx_t_7 = 0;

  /* "pyspades\world.pyx":394
 *     cdef size_t i
 *     cdef list points = []
 *     for i in xrange(size):             # <<<<<<<<<<<<<<
 *         points.append((array[i].x, array[i].y, array[i].z))
 *     return points
 */
  __pyx_t_8 = __pyx_v_size;
  for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_8; __pyx_t_9+=1) {
    __pyx_v_i = __pyx_t_9;

    /* "pyspades\world.pyx":395
 *     cdef list points = []
 *     for i in xrange(size):
 *         points.append((array[i].x, array[i].y, array[i].z))             # <<<<<<<<<<<<<<
 *     return points
 */
    if (unlikely(__pyx_v_points == Py_None)) {
      PyErr_SetString(PyExc_AttributeError, "'NoneType' object has no attribute 'append'"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 395; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
    }
    __pyx_t_7 = PyInt_FromLong((__pyx_v_array[__pyx_v_i]).x); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_10 = PyInt_FromLong((__pyx_v_array[__pyx_v_i]).y); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_11 = PyInt_FromLong((__pyx_v_array[__pyx_v_i]).z); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_12 = PyTuple_New(3); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_12));
    PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_t_10);
    __Pyx_GIVEREF(__pyx_t_10);
    PyTuple_SET_ITEM(__pyx_t_12, 2, __pyx_t_11);
    __Pyx_GIVEREF(__pyx_t_11);
    __pyx_t_7 = 0;
    __pyx_t_10 = 0;
    __pyx_t_11 = 0;
    __pyx_t_6 = PyList_Append(__pyx_v_points, ((PyObject *)__pyx_t_12)); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_t_12)); __pyx_t_12 = 0;
  }

  /* "pyspades\world.pyx":396
 *     for i in xrange(size):
 *         points.append((array[i].x, array[i].y, array[i].z))
 *     return points             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_points));
  __pyx_r = ((PyObject *)__pyx_v_points);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("pyspades.world.cube_line");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_points);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\world.pyx":389
 * # utility functions
 * 
 * cpdef cube_line(x1, y1, z1, x2, y2, z2):             # <<<<<<<<<<<<<<
 *     cdef LongVector array[CUBE_ARRAY_LENGTH]
 *     cdef size_t size = cube_line_c(x1, y1, z1, x2, y2, z2, array)
 */

static PyObject *__pyx_pf_8pyspades_5world_cube_line(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_8pyspades_5world_cube_line(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_x1 = 0;
  PyObject *__pyx_v_y1 = 0;
  PyObject *__pyx_v_z1 = 0;
  PyObject *__pyx_v_x2 = 0;
  PyObject *__pyx_v_y2 = 0;
  PyObject *__pyx_v_z2 = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x1,&__pyx_n_s__y1,&__pyx_n_s__z1,&__pyx_n_s__x2,&__pyx_n_s__y2,&__pyx_n_s__z2,0};
  __Pyx_RefNannySetupContext("cube_line");
  __pyx_self = __pyx_self;
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[6] = {0,0,0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x1);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y1);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("cube_line", 1, 6, 6, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 389; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__z1);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("cube_line", 1, 6, 6, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 389; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x2);
      if (likely(values[3])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("cube_line", 1, 6, 6, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 389; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  4:
      values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y2);
      if (likely(values[4])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("cube_line", 1, 6, 6, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 389; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  5:
      values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__z2);
      if (likely(values[5])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("cube_line", 1, 6, 6, 5); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 389; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "cube_line") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 389; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x1 = values[0];
    __pyx_v_y1 = values[1];
    __pyx_v_z1 = values[2];
    __pyx_v_x2 = values[3];
    __pyx_v_y2 = values[4];
    __pyx_v_z2 = values[5];
  } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_x1 = PyTuple_GET_ITEM(__pyx_args, 0);
    __pyx_v_y1 = PyTuple_GET_ITEM(__pyx_args, 1);
    __pyx_v_z1 = PyTuple_GET_ITEM(__pyx_args, 2);
    __pyx_v_x2 = PyTuple_GET_ITEM(__pyx_args, 3);
    __pyx_v_y2 = PyTuple_GET_ITEM(__pyx_args, 4);
    __pyx_v_z2 = PyTuple_GET_ITEM(__pyx_args, 5);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("cube_line", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 389; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("pyspades.world.cube_line");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_v_x1;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_t_2 = __pyx_v_y1;
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_3 = __pyx_v_z1;
  __Pyx_INCREF(__pyx_t_3);
  __pyx_t_4 = __pyx_v_x2;
  __Pyx_INCREF(__pyx_t_4);
  __pyx_t_5 = __pyx_v_y2;
  __Pyx_INCREF(__pyx_t_5);
  __pyx_t_6 = __pyx_v_z2;
  __Pyx_INCREF(__pyx_t_6);
  __pyx_t_7 = __pyx_f_8pyspades_5world_cube_line(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6, 0); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 389; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_r = __pyx_t_7;
  __pyx_t_7 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("pyspades.world.cube_line");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\common.pxd":22
 *     char* PyString_AS_STRING(object)
 * 
 * cdef inline object allocate_memory(int size, char ** i):             # <<<<<<<<<<<<<<
 *     if size < 0:
 *         size = 0
 */

static CYTHON_INLINE PyObject *__pyx_f_8pyspades_6common_allocate_memory(int __pyx_v_size, char **__pyx_v_i) {
  PyObject *__pyx_v_ob = 0;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("allocate_memory");

  /* "pyspades\common.pxd":23
 * 
 * cdef inline object allocate_memory(int size, char ** i):
 *     if size < 0:             # <<<<<<<<<<<<<<
 *         size = 0
 *     cdef object ob = PyString_FromStringAndSize(NULL, size)
 */
  __pyx_t_1 = (__pyx_v_size < 0);
  if (__pyx_t_1) {

    /* "pyspades\common.pxd":24
 * cdef inline object allocate_memory(int size, char ** i):
 *     if size < 0:
 *         size = 0             # <<<<<<<<<<<<<<
 *     cdef object ob = PyString_FromStringAndSize(NULL, size)
 *     i[0] = PyString_AS_STRING(ob)
 */
    __pyx_v_size = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "pyspades\common.pxd":25
 *     if size < 0:
 *         size = 0
 *     cdef object ob = PyString_FromStringAndSize(NULL, size)             # <<<<<<<<<<<<<<
 *     i[0] = PyString_AS_STRING(ob)
 *     return ob
 */
  __pyx_t_2 = PyString_FromStringAndSize(NULL, __pyx_v_size); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_ob = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "pyspades\common.pxd":26
 *         size = 0
 *     cdef object ob = PyString_FromStringAndSize(NULL, size)
 *     i[0] = PyString_AS_STRING(ob)             # <<<<<<<<<<<<<<
 *     return ob
 * 
 */
  (__pyx_v_i[0]) = PyString_AS_STRING(__pyx_v_ob);

  /* "pyspades\common.pxd":27
 *     cdef object ob = PyString_FromStringAndSize(NULL, size)
 *     i[0] = PyString_AS_STRING(ob)
 *     return ob             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "common_c.h":
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_ob);
  __pyx_r = __pyx_v_ob;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pyspades.common.allocate_memory");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ob);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\common.pxd":39
 *     void destroy_vector(Vector*)
 * 
 * cdef inline int check_default_int(int value, int default) except -1:             # <<<<<<<<<<<<<<
 *     if value != default:
 *         from pyspades.exceptions import InvalidData
 */

static CYTHON_INLINE int __pyx_f_8pyspades_6common_check_default_int(int __pyx_v_value, int __pyx_v_default) {
  PyObject *__pyx_v_InvalidData;
  int __pyx_r;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("check_default_int");
  __pyx_v_InvalidData = Py_None; __Pyx_INCREF(Py_None);

  /* "pyspades\common.pxd":40
 * 
 * cdef inline int check_default_int(int value, int default) except -1:
 *     if value != default:             # <<<<<<<<<<<<<<
 *         from pyspades.exceptions import InvalidData
 *         raise InvalidData(
 */
  __pyx_t_1 = (__pyx_v_value != __pyx_v_default);
  if (__pyx_t_1) {

    /* "pyspades\common.pxd":41
 * cdef inline int check_default_int(int value, int default) except -1:
 *     if value != default:
 *         from pyspades.exceptions import InvalidData             # <<<<<<<<<<<<<<
 *         raise InvalidData(
 *             'check_default() failed: was %s, should be %s' % (value, default))
 */
    __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_2));
    __Pyx_INCREF(((PyObject *)__pyx_n_s__InvalidData));
    PyList_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_n_s__InvalidData));
    __Pyx_GIVEREF(((PyObject *)__pyx_n_s__InvalidData));
    __pyx_t_3 = __Pyx_Import(((PyObject *)__pyx_n_s_3), ((PyObject *)__pyx_t_2)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_GetAttr(__pyx_t_3, __pyx_n_s__InvalidData); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_v_InvalidData);
    __pyx_v_InvalidData = __pyx_t_2;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "pyspades\common.pxd":43
 *         from pyspades.exceptions import InvalidData
 *         raise InvalidData(
 *             'check_default() failed: was %s, should be %s' % (value, default))             # <<<<<<<<<<<<<<
 *     return 0
 * 
 */
    __pyx_t_3 = PyInt_FromLong(__pyx_v_value); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 43; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyInt_FromLong(__pyx_v_default); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 43; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 43; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_4));
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_3 = 0;
    __pyx_t_2 = 0;
    __pyx_t_2 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_4), ((PyObject *)__pyx_t_4)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 43; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_2));
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_4));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_t_2));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_2));
    __pyx_t_2 = 0;
    __pyx_t_2 = PyObject_Call(__pyx_v_InvalidData, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_Raise(__pyx_t_2, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "pyspades\common.pxd":44
 *         raise InvalidData(
 *             'check_default() failed: was %s, should be %s' % (value, default))
 *     return 0             # <<<<<<<<<<<<<<
 * 
 * cdef class Quaternion
 */
  __pyx_r = 0;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("pyspades.common.check_default_int");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_InvalidData);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\common.pxd":61
 *     cpdef Vertex3 inverse_transform_vector(self, Vertex3 v)
 * 
 * cdef inline Vertex3 create_proxy_vector(Vector * v):             # <<<<<<<<<<<<<<
 *     cdef Vertex3 new_vector = Vertex3(is_ref = True)
 *     new_vector.value = v
 */

static CYTHON_INLINE struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_f_8pyspades_6common_create_proxy_vector(struct Vector *__pyx_v_v) {
  struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_v_new_vector = 0;
  struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("create_proxy_vector");

  /* "pyspades\common.pxd":62
 * 
 * cdef inline Vertex3 create_proxy_vector(Vector * v):
 *     cdef Vertex3 new_vector = Vertex3(is_ref = True)             # <<<<<<<<<<<<<<
 *     new_vector.value = v
 *     return new_vector
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_t_2 = __Pyx_PyBool_FromLong(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, ((PyObject *)__pyx_n_s__is_ref), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyEval_CallObjectWithKeywords(((PyObject *)((PyObject*)__pyx_ptype_8pyspades_6common_Vertex3)), ((PyObject *)__pyx_empty_tuple), ((PyObject *)__pyx_t_1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_v_new_vector = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pyspades\common.pxd":63
 * cdef inline Vertex3 create_proxy_vector(Vector * v):
 *     cdef Vertex3 new_vector = Vertex3(is_ref = True)
 *     new_vector.value = v             # <<<<<<<<<<<<<<
 *     return new_vector
 * 
 */
  __pyx_v_new_vector->value = __pyx_v_v;

  /* "pyspades\common.pxd":64
 *     cdef Vertex3 new_vector = Vertex3(is_ref = True)
 *     new_vector.value = v
 *     return new_vector             # <<<<<<<<<<<<<<
 * 
 * cdef inline Vertex3 create_vertex3(float x, float y, float z):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_new_vector));
  __pyx_r = __pyx_v_new_vector;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pyspades.common.create_proxy_vector");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_new_vector);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "pyspades\common.pxd":66
 *     return new_vector
 * 
 * cdef inline Vertex3 create_vertex3(float x, float y, float z):             # <<<<<<<<<<<<<<
 *     # faster way of creating Vertex3 instances
 *     cdef Vertex3 new_vertex = Vertex3(is_ref = True)
 */

static CYTHON_INLINE struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_f_8pyspades_6common_create_vertex3(float __pyx_v_x, float __pyx_v_y, float __pyx_v_z) {
  struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_v_new_vertex = 0;
  struct __pyx_obj_8pyspades_6common_Vertex3 *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("create_vertex3");

  /* "pyspades\common.pxd":68
 * cdef inline Vertex3 create_vertex3(float x, float y, float z):
 *     # faster way of creating Vertex3 instances
 *     cdef Vertex3 new_vertex = Vertex3(is_ref = True)             # <<<<<<<<<<<<<<
 *     new_vertex.value = create_vector(x, y, z)
 *     new_vertex.is_ref = False
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_t_2 = __Pyx_PyBool_FromLong(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, ((PyObject *)__pyx_n_s__is_ref), __pyx_t_2) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyEval_CallObjectWithKeywords(((PyObject *)((PyObject*)__pyx_ptype_8pyspades_6common_Vertex3)), ((PyObject *)__pyx_empty_tuple), ((PyObject *)__pyx_t_1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_v_new_vertex = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pyspades\common.pxd":69
 *     # faster way of creating Vertex3 instances
 *     cdef Vertex3 new_vertex = Vertex3(is_ref = True)
 *     new_vertex.value = create_vector(x, y, z)             # <<<<<<<<<<<<<<
 *     new_vertex.is_ref = False
 *     return new_vertex
 */
  __pyx_v_new_vertex->value = create_vector(__pyx_v_x, __pyx_v_y, __pyx_v_z);

  /* "pyspades\common.pxd":70
 *     cdef Vertex3 new_vertex = Vertex3(is_ref = True)
 *     new_vertex.value = create_vector(x, y, z)
 *     new_vertex.is_ref = False             # <<<<<<<<<<<<<<
 *     return new_vertex
 */
  __pyx_v_new_vertex->is_ref = 0;

  /* "pyspades\common.pxd":71
 *     new_vertex.value = create_vector(x, y, z)
 *     new_vertex.is_ref = False
 *     return new_vertex             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_new_vertex));
  __pyx_r = __pyx_v_new_vertex;
  goto __pyx_L0;

  __pyx_r = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)Py_None); __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("pyspades.common.create_vertex3");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_new_vertex);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_8pyspades_5world_Object __pyx_vtable_8pyspades_5world_Object;

static PyObject *__pyx_tp_new_8pyspades_5world_Object(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_8pyspades_5world_Object *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_8pyspades_5world_Object *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pyspades_5world_Object;
  p->name = Py_None; Py_INCREF(Py_None);
  p->world = ((struct __pyx_obj_8pyspades_5world_World *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pyspades_5world_Object(PyObject *o) {
  struct __pyx_obj_8pyspades_5world_Object *p = (struct __pyx_obj_8pyspades_5world_Object *)o;
  Py_XDECREF(p->name);
  Py_XDECREF(((PyObject *)p->world));
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pyspades_5world_Object(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pyspades_5world_Object *p = (struct __pyx_obj_8pyspades_5world_Object *)o;
  if (p->name) {
    e = (*v)(p->name, a); if (e) return e;
  }
  if (p->world) {
    e = (*v)(((PyObject*)p->world), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pyspades_5world_Object(PyObject *o) {
  struct __pyx_obj_8pyspades_5world_Object *p = (struct __pyx_obj_8pyspades_5world_Object *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->name);
  p->name = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->world);
  p->world = ((struct __pyx_obj_8pyspades_5world_World *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_8pyspades_5world_6Object_name(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_6Object_4name___get__(o);
}

static int __pyx_setprop_8pyspades_5world_6Object_name(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_6Object_4name_1__set__(o, v);
  }
  else {
    return __pyx_pf_8pyspades_5world_6Object_4name_2__del__(o);
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_6Object_world(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_6Object_5world___get__(o);
}

static int __pyx_setprop_8pyspades_5world_6Object_world(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_6Object_5world_1__set__(o, v);
  }
  else {
    return __pyx_pf_8pyspades_5world_6Object_5world_2__del__(o);
  }
}

static PyMethodDef __pyx_methods_8pyspades_5world_Object[] = {
  {__Pyx_NAMESTR("initialize"), (PyCFunction)__pyx_pf_8pyspades_5world_6Object_1initialize, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("delete"), (PyCFunction)__pyx_pf_8pyspades_5world_6Object_2delete, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_8pyspades_5world_Object[] = {
  {(char *)"name", __pyx_getprop_8pyspades_5world_6Object_name, __pyx_setprop_8pyspades_5world_6Object_name, 0, 0},
  {(char *)"world", __pyx_getprop_8pyspades_5world_6Object_world, __pyx_setprop_8pyspades_5world_6Object_world, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Object = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Object = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Object = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Object = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_8pyspades_5world_Object = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pyspades.world.Object"), /*tp_name*/
  sizeof(struct __pyx_obj_8pyspades_5world_Object), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pyspades_5world_Object, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Object, /*tp_as_number*/
  &__pyx_tp_as_sequence_Object, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Object, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Object, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_8pyspades_5world_Object, /*tp_traverse*/
  __pyx_tp_clear_8pyspades_5world_Object, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pyspades_5world_Object, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_8pyspades_5world_Object, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_8pyspades_5world_6Object___init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pyspades_5world_Object, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_8pyspades_5world_World __pyx_vtable_8pyspades_5world_World;

static PyObject *__pyx_tp_new_8pyspades_5world_World(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_8pyspades_5world_World *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_8pyspades_5world_World *)o);
  p->__pyx_vtab = __pyx_vtabptr_8pyspades_5world_World;
  p->map = ((struct __pyx_obj_8pyspades_3vxl_VXLData *)Py_None); Py_INCREF(Py_None);
  p->objects = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pyspades_5world_World(PyObject *o) {
  struct __pyx_obj_8pyspades_5world_World *p = (struct __pyx_obj_8pyspades_5world_World *)o;
  Py_XDECREF(((PyObject *)p->map));
  Py_XDECREF(((PyObject *)p->objects));
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_8pyspades_5world_World(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pyspades_5world_World *p = (struct __pyx_obj_8pyspades_5world_World *)o;
  if (p->map) {
    e = (*v)(((PyObject*)p->map), a); if (e) return e;
  }
  if (p->objects) {
    e = (*v)(p->objects, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pyspades_5world_World(PyObject *o) {
  struct __pyx_obj_8pyspades_5world_World *p = (struct __pyx_obj_8pyspades_5world_World *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->map);
  p->map = ((struct __pyx_obj_8pyspades_3vxl_VXLData *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->objects);
  p->objects = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_8pyspades_5world_5World_map(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_5World_3map___get__(o);
}

static int __pyx_setprop_8pyspades_5world_5World_map(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_5World_3map_1__set__(o, v);
  }
  else {
    return __pyx_pf_8pyspades_5world_5World_3map_2__del__(o);
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_5World_objects(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_5World_7objects___get__(o);
}

static int __pyx_setprop_8pyspades_5world_5World_objects(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_5World_7objects_1__set__(o, v);
  }
  else {
    return __pyx_pf_8pyspades_5world_5World_7objects_2__del__(o);
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_5World_time(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_5World_4time___get__(o);
}

static int __pyx_setprop_8pyspades_5world_5World_time(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_5World_4time_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_8pyspades_5world_World[] = {
  {__Pyx_NAMESTR("update"), (PyCFunction)__pyx_pf_8pyspades_5world_5World_1update, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("delete_object"), (PyCFunction)__pyx_pf_8pyspades_5world_5World_2delete_object, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("create_object"), (PyCFunction)__pyx_pf_8pyspades_5world_5World_3create_object, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_8pyspades_5world_World[] = {
  {(char *)"map", __pyx_getprop_8pyspades_5world_5World_map, __pyx_setprop_8pyspades_5world_5World_map, 0, 0},
  {(char *)"objects", __pyx_getprop_8pyspades_5world_5World_objects, __pyx_setprop_8pyspades_5world_5World_objects, 0, 0},
  {(char *)"time", __pyx_getprop_8pyspades_5world_5World_time, __pyx_setprop_8pyspades_5world_5World_time, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_World = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_World = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_World = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_World = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_8pyspades_5world_World = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pyspades.world.World"), /*tp_name*/
  sizeof(struct __pyx_obj_8pyspades_5world_World), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pyspades_5world_World, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_World, /*tp_as_number*/
  &__pyx_tp_as_sequence_World, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_World, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_World, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_8pyspades_5world_World, /*tp_traverse*/
  __pyx_tp_clear_8pyspades_5world_World, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pyspades_5world_World, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_8pyspades_5world_World, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_8pyspades_5world_5World___init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pyspades_5world_World, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_8pyspades_5world_Grenade __pyx_vtable_8pyspades_5world_Grenade;

static PyObject *__pyx_tp_new_8pyspades_5world_Grenade(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_8pyspades_5world_Grenade *p;
  PyObject *o = __pyx_tp_new_8pyspades_5world_Object(t, a, k);
  if (!o) return 0;
  p = ((struct __pyx_obj_8pyspades_5world_Grenade *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_8pyspades_5world_Object*)__pyx_vtabptr_8pyspades_5world_Grenade;
  p->position = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)Py_None); Py_INCREF(Py_None);
  p->velocity = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)Py_None); Py_INCREF(Py_None);
  p->callback = Py_None; Py_INCREF(Py_None);
  p->team = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pyspades_5world_Grenade(PyObject *o) {
  struct __pyx_obj_8pyspades_5world_Grenade *p = (struct __pyx_obj_8pyspades_5world_Grenade *)o;
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_8pyspades_5world_7Grenade_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_XDECREF(((PyObject *)p->position));
  Py_XDECREF(((PyObject *)p->velocity));
  Py_XDECREF(p->callback);
  Py_XDECREF(p->team);
  __pyx_tp_dealloc_8pyspades_5world_Object(o);
}

static int __pyx_tp_traverse_8pyspades_5world_Grenade(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pyspades_5world_Grenade *p = (struct __pyx_obj_8pyspades_5world_Grenade *)o;
  e = __pyx_tp_traverse_8pyspades_5world_Object(o, v, a); if (e) return e;
  if (p->position) {
    e = (*v)(((PyObject*)p->position), a); if (e) return e;
  }
  if (p->velocity) {
    e = (*v)(((PyObject*)p->velocity), a); if (e) return e;
  }
  if (p->callback) {
    e = (*v)(p->callback, a); if (e) return e;
  }
  if (p->team) {
    e = (*v)(p->team, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pyspades_5world_Grenade(PyObject *o) {
  struct __pyx_obj_8pyspades_5world_Grenade *p = (struct __pyx_obj_8pyspades_5world_Grenade *)o;
  PyObject* tmp;
  __pyx_tp_clear_8pyspades_5world_Object(o);
  tmp = ((PyObject*)p->position);
  p->position = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->velocity);
  p->velocity = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->callback);
  p->callback = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->team);
  p->team = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_8pyspades_5world_7Grenade_position(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_7Grenade_8position___get__(o);
}

static int __pyx_setprop_8pyspades_5world_7Grenade_position(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_7Grenade_8position_1__set__(o, v);
  }
  else {
    return __pyx_pf_8pyspades_5world_7Grenade_8position_2__del__(o);
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_7Grenade_velocity(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_7Grenade_8velocity___get__(o);
}

static int __pyx_setprop_8pyspades_5world_7Grenade_velocity(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_7Grenade_8velocity_1__set__(o, v);
  }
  else {
    return __pyx_pf_8pyspades_5world_7Grenade_8velocity_2__del__(o);
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_7Grenade_fuse(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_7Grenade_4fuse___get__(o);
}

static int __pyx_setprop_8pyspades_5world_7Grenade_fuse(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_7Grenade_4fuse_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_7Grenade_callback(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_7Grenade_8callback___get__(o);
}

static int __pyx_setprop_8pyspades_5world_7Grenade_callback(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_7Grenade_8callback_1__set__(o, v);
  }
  else {
    return __pyx_pf_8pyspades_5world_7Grenade_8callback_2__del__(o);
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_7Grenade_team(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_7Grenade_4team___get__(o);
}

static int __pyx_setprop_8pyspades_5world_7Grenade_team(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_7Grenade_4team_1__set__(o, v);
  }
  else {
    return __pyx_pf_8pyspades_5world_7Grenade_4team_2__del__(o);
  }
}

static PyMethodDef __pyx_methods_8pyspades_5world_Grenade[] = {
  {__Pyx_NAMESTR("initialize"), (PyCFunction)__pyx_pf_8pyspades_5world_7Grenade_initialize, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_next_collision"), (PyCFunction)__pyx_pf_8pyspades_5world_7Grenade_1get_next_collision, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_damage"), (PyCFunction)__pyx_pf_8pyspades_5world_7Grenade_2get_damage, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_8pyspades_5world_Grenade[] = {
  {(char *)"position", __pyx_getprop_8pyspades_5world_7Grenade_position, __pyx_setprop_8pyspades_5world_7Grenade_position, 0, 0},
  {(char *)"velocity", __pyx_getprop_8pyspades_5world_7Grenade_velocity, __pyx_setprop_8pyspades_5world_7Grenade_velocity, 0, 0},
  {(char *)"fuse", __pyx_getprop_8pyspades_5world_7Grenade_fuse, __pyx_setprop_8pyspades_5world_7Grenade_fuse, 0, 0},
  {(char *)"callback", __pyx_getprop_8pyspades_5world_7Grenade_callback, __pyx_setprop_8pyspades_5world_7Grenade_callback, 0, 0},
  {(char *)"team", __pyx_getprop_8pyspades_5world_7Grenade_team, __pyx_setprop_8pyspades_5world_7Grenade_team, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Grenade = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Grenade = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Grenade = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Grenade = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_8pyspades_5world_Grenade = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pyspades.world.Grenade"), /*tp_name*/
  sizeof(struct __pyx_obj_8pyspades_5world_Grenade), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pyspades_5world_Grenade, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Grenade, /*tp_as_number*/
  &__pyx_tp_as_sequence_Grenade, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Grenade, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Grenade, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_8pyspades_5world_Grenade, /*tp_traverse*/
  __pyx_tp_clear_8pyspades_5world_Grenade, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pyspades_5world_Grenade, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_8pyspades_5world_Grenade, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pyspades_5world_Grenade, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_8pyspades_5world_Character __pyx_vtable_8pyspades_5world_Character;

static PyObject *__pyx_tp_new_8pyspades_5world_Character(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_8pyspades_5world_Character *p;
  PyObject *o = __pyx_tp_new_8pyspades_5world_Object(t, a, k);
  if (!o) return 0;
  p = ((struct __pyx_obj_8pyspades_5world_Character *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_8pyspades_5world_Object*)__pyx_vtabptr_8pyspades_5world_Character;
  p->position = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)Py_None); Py_INCREF(Py_None);
  p->orientation = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)Py_None); Py_INCREF(Py_None);
  p->velocity = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)Py_None); Py_INCREF(Py_None);
  p->fall_callback = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_8pyspades_5world_Character(PyObject *o) {
  struct __pyx_obj_8pyspades_5world_Character *p = (struct __pyx_obj_8pyspades_5world_Character *)o;
  Py_XDECREF(((PyObject *)p->position));
  Py_XDECREF(((PyObject *)p->orientation));
  Py_XDECREF(((PyObject *)p->velocity));
  Py_XDECREF(p->fall_callback);
  __pyx_tp_dealloc_8pyspades_5world_Object(o);
}

static int __pyx_tp_traverse_8pyspades_5world_Character(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_8pyspades_5world_Character *p = (struct __pyx_obj_8pyspades_5world_Character *)o;
  e = __pyx_tp_traverse_8pyspades_5world_Object(o, v, a); if (e) return e;
  if (p->position) {
    e = (*v)(((PyObject*)p->position), a); if (e) return e;
  }
  if (p->orientation) {
    e = (*v)(((PyObject*)p->orientation), a); if (e) return e;
  }
  if (p->velocity) {
    e = (*v)(((PyObject*)p->velocity), a); if (e) return e;
  }
  if (p->fall_callback) {
    e = (*v)(p->fall_callback, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_8pyspades_5world_Character(PyObject *o) {
  struct __pyx_obj_8pyspades_5world_Character *p = (struct __pyx_obj_8pyspades_5world_Character *)o;
  PyObject* tmp;
  __pyx_tp_clear_8pyspades_5world_Object(o);
  tmp = ((PyObject*)p->position);
  p->position = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->orientation);
  p->orientation = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->velocity);
  p->velocity = ((struct __pyx_obj_8pyspades_6common_Vertex3 *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->fall_callback);
  p->fall_callback = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_8pyspades_5world_9Character_up(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_9Character_2up___get__(o);
}

static int __pyx_setprop_8pyspades_5world_9Character_up(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_9Character_2up_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_9Character_down(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_9Character_4down___get__(o);
}

static int __pyx_setprop_8pyspades_5world_9Character_down(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_9Character_4down_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_9Character_left(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_9Character_4left___get__(o);
}

static int __pyx_setprop_8pyspades_5world_9Character_left(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_9Character_4left_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_9Character_right(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_9Character_5right___get__(o);
}

static int __pyx_setprop_8pyspades_5world_9Character_right(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_9Character_5right_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_9Character_dead(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_9Character_4dead___get__(o);
}

static int __pyx_setprop_8pyspades_5world_9Character_dead(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_9Character_4dead_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_9Character_jump(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_9Character_4jump___get__(o);
}

static int __pyx_setprop_8pyspades_5world_9Character_jump(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_9Character_4jump_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_9Character_airborne(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_9Character_8airborne___get__(o);
}

static PyObject *__pyx_getprop_8pyspades_5world_9Character_crouch(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_9Character_6crouch___get__(o);
}

static int __pyx_setprop_8pyspades_5world_9Character_crouch(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_9Character_6crouch_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_9Character_sneak(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_9Character_5sneak___get__(o);
}

static int __pyx_setprop_8pyspades_5world_9Character_sneak(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_9Character_5sneak_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_9Character_wade(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_9Character_4wade___get__(o);
}

static PyObject *__pyx_getprop_8pyspades_5world_9Character_sprint(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_9Character_6sprint___get__(o);
}

static int __pyx_setprop_8pyspades_5world_9Character_sprint(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_9Character_6sprint_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_9Character_primary_fire(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_9Character_12primary_fire___get__(o);
}

static int __pyx_setprop_8pyspades_5world_9Character_primary_fire(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_9Character_12primary_fire_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_9Character_secondary_fire(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_9Character_14secondary_fire___get__(o);
}

static int __pyx_setprop_8pyspades_5world_9Character_secondary_fire(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_9Character_14secondary_fire_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_9Character_position(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_9Character_8position___get__(o);
}

static int __pyx_setprop_8pyspades_5world_9Character_position(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_9Character_8position_1__set__(o, v);
  }
  else {
    return __pyx_pf_8pyspades_5world_9Character_8position_2__del__(o);
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_9Character_orientation(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_9Character_11orientation___get__(o);
}

static int __pyx_setprop_8pyspades_5world_9Character_orientation(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_9Character_11orientation_1__set__(o, v);
  }
  else {
    return __pyx_pf_8pyspades_5world_9Character_11orientation_2__del__(o);
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_9Character_velocity(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_9Character_8velocity___get__(o);
}

static int __pyx_setprop_8pyspades_5world_9Character_velocity(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_9Character_8velocity_1__set__(o, v);
  }
  else {
    return __pyx_pf_8pyspades_5world_9Character_8velocity_2__del__(o);
  }
}

static PyObject *__pyx_getprop_8pyspades_5world_9Character_fall_callback(PyObject *o, void *x) {
  return __pyx_pf_8pyspades_5world_9Character_13fall_callback___get__(o);
}

static int __pyx_setprop_8pyspades_5world_9Character_fall_callback(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_8pyspades_5world_9Character_13fall_callback_1__set__(o, v);
  }
  else {
    return __pyx_pf_8pyspades_5world_9Character_13fall_callback_2__del__(o);
  }
}

static PyMethodDef __pyx_methods_8pyspades_5world_Character[] = {
  {__Pyx_NAMESTR("initialize"), (PyCFunction)__pyx_pf_8pyspades_5world_9Character_initialize, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_crouch"), (PyCFunction)__pyx_pf_8pyspades_5world_9Character_1set_crouch, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_animation"), (PyCFunction)__pyx_pf_8pyspades_5world_9Character_2set_animation, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_weapon"), (PyCFunction)__pyx_pf_8pyspades_5world_9Character_3set_weapon, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_walk"), (PyCFunction)__pyx_pf_8pyspades_5world_9Character_4set_walk, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_position"), (PyCFunction)__pyx_pf_8pyspades_5world_9Character_5set_position, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_orientation"), (PyCFunction)__pyx_pf_8pyspades_5world_9Character_6set_orientation, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("can_see"), (PyCFunction)__pyx_pf_8pyspades_5world_9Character_7can_see, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("cast_ray"), (PyCFunction)__pyx_pf_8pyspades_5world_9Character_8cast_ray, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("validate_hit"), (PyCFunction)__pyx_pf_8pyspades_5world_9Character_9validate_hit, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_dead"), (PyCFunction)__pyx_pf_8pyspades_5world_9Character_10set_dead, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_8pyspades_5world_Character[] = {
  {(char *)"up", __pyx_getprop_8pyspades_5world_9Character_up, __pyx_setprop_8pyspades_5world_9Character_up, 0, 0},
  {(char *)"down", __pyx_getprop_8pyspades_5world_9Character_down, __pyx_setprop_8pyspades_5world_9Character_down, 0, 0},
  {(char *)"left", __pyx_getprop_8pyspades_5world_9Character_left, __pyx_setprop_8pyspades_5world_9Character_left, 0, 0},
  {(char *)"right", __pyx_getprop_8pyspades_5world_9Character_right, __pyx_setprop_8pyspades_5world_9Character_right, 0, 0},
  {(char *)"dead", __pyx_getprop_8pyspades_5world_9Character_dead, __pyx_setprop_8pyspades_5world_9Character_dead, 0, 0},
  {(char *)"jump", __pyx_getprop_8pyspades_5world_9Character_jump, __pyx_setprop_8pyspades_5world_9Character_jump, 0, 0},
  {(char *)"airborne", __pyx_getprop_8pyspades_5world_9Character_airborne, 0, 0, 0},
  {(char *)"crouch", __pyx_getprop_8pyspades_5world_9Character_crouch, __pyx_setprop_8pyspades_5world_9Character_crouch, 0, 0},
  {(char *)"sneak", __pyx_getprop_8pyspades_5world_9Character_sneak, __pyx_setprop_8pyspades_5world_9Character_sneak, 0, 0},
  {(char *)"wade", __pyx_getprop_8pyspades_5world_9Character_wade, 0, 0, 0},
  {(char *)"sprint", __pyx_getprop_8pyspades_5world_9Character_sprint, __pyx_setprop_8pyspades_5world_9Character_sprint, 0, 0},
  {(char *)"primary_fire", __pyx_getprop_8pyspades_5world_9Character_primary_fire, __pyx_setprop_8pyspades_5world_9Character_primary_fire, 0, 0},
  {(char *)"secondary_fire", __pyx_getprop_8pyspades_5world_9Character_secondary_fire, __pyx_setprop_8pyspades_5world_9Character_secondary_fire, 0, 0},
  {(char *)"position", __pyx_getprop_8pyspades_5world_9Character_position, __pyx_setprop_8pyspades_5world_9Character_position, 0, 0},
  {(char *)"orientation", __pyx_getprop_8pyspades_5world_9Character_orientation, __pyx_setprop_8pyspades_5world_9Character_orientation, 0, 0},
  {(char *)"velocity", __pyx_getprop_8pyspades_5world_9Character_velocity, __pyx_setprop_8pyspades_5world_9Character_velocity, 0, 0},
  {(char *)"fall_callback", __pyx_getprop_8pyspades_5world_9Character_fall_callback, __pyx_setprop_8pyspades_5world_9Character_fall_callback, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Character = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Character = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Character = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Character = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_8pyspades_5world_Character = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("pyspades.world.Character"), /*tp_name*/
  sizeof(struct __pyx_obj_8pyspades_5world_Character), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_8pyspades_5world_Character, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Character, /*tp_as_number*/
  &__pyx_tp_as_sequence_Character, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Character, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Character, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_8pyspades_5world_Character, /*tp_traverse*/
  __pyx_tp_clear_8pyspades_5world_Character, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_8pyspades_5world_Character, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_8pyspades_5world_Character, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_8pyspades_5world_Character, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {__Pyx_NAMESTR("cube_line"), (PyCFunction)__pyx_pf_8pyspades_5world_cube_line, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

char* __pyx_import_star_type_names[] = {
  "PlayerType",
  "Character",
  "LongVector",
  "VXLData",
  "Object",
  "World",
  "MapData",
  "Vertex3",
  "__pyx_opt_args_8pyspades_5world_9Character_cast_ray",
  "GrenadeType",
  "Vector",
  "Grenade",
  0
};

static int __pyx_import_star_set(PyObject *o, PyObject* py_name, char *name) {
  char** type_name = __pyx_import_star_type_names;
  while (*type_name) {
    if (__Pyx_StrEq(name, *type_name)) {
      PyErr_Format(PyExc_TypeError, "Cannot overwrite C type %s", name);
      goto bad;
    }
    type_name++;
  }
  if (0);
  else {
    if (PyObject_SetAttr(__pyx_m, py_name, o) < 0) goto bad;
  }
  return 0;
  bad:
  return -1;
}


/* import_all_from is an unexposed function from ceval.c */

static int
__Pyx_import_all_from(PyObject *locals, PyObject *v)
{
    PyObject *all = __Pyx_GetAttrString(v, "__all__");
    PyObject *dict, *name, *value;
    int skip_leading_underscores = 0;
    int pos, err;

    if (all == NULL) {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError))
            return -1; /* Unexpected error */
        PyErr_Clear();
        dict = __Pyx_GetAttrString(v, "__dict__");
        if (dict == NULL) {
            if (!PyErr_ExceptionMatches(PyExc_AttributeError))
                return -1;
            PyErr_SetString(PyExc_ImportError,
            "from-import-* object has no __dict__ and no __all__");
            return -1;
        }
        all = PyMapping_Keys(dict);
        Py_DECREF(dict);
        if (all == NULL)
            return -1;
        skip_leading_underscores = 1;
    }

    for (pos = 0, err = 0; ; pos++) {
        name = PySequence_GetItem(all, pos);
        if (name == NULL) {
            if (!PyErr_ExceptionMatches(PyExc_IndexError))
                err = -1;
            else
                PyErr_Clear();
            break;
        }
        if (skip_leading_underscores &&
#if PY_MAJOR_VERSION < 3
            PyString_Check(name) &&
            PyString_AS_STRING(name)[0] == '_')
#else
            PyUnicode_Check(name) &&
            PyUnicode_AS_UNICODE(name)[0] == '_')
#endif
        {
            Py_DECREF(name);
            continue;
        }
        value = PyObject_GetAttr(v, name);
        if (value == NULL)
            err = -1;
        else if (PyDict_CheckExact(locals))
            err = PyDict_SetItem(locals, name, value);
        else
            err = PyObject_SetItem(locals, name, value);
        Py_DECREF(name);
        Py_XDECREF(value);
        if (err != 0)
            break;
    }
    Py_DECREF(all);
    return err;
}


static int __pyx_import_star(PyObject* m) {

    int i;
    int ret = -1;
    char* s;
    PyObject *locals = 0;
    PyObject *list = 0;
#if PY_MAJOR_VERSION >= 3
    PyObject *utf8_name = 0;
#endif
    PyObject *name;
    PyObject *item;

    locals = PyDict_New();              if (!locals) goto bad;
    if (__Pyx_import_all_from(locals, m) < 0) goto bad;
    list = PyDict_Items(locals);        if (!list) goto bad;

    for(i=0; i<PyList_GET_SIZE(list); i++) {
        name = PyTuple_GET_ITEM(PyList_GET_ITEM(list, i), 0);
        item = PyTuple_GET_ITEM(PyList_GET_ITEM(list, i), 1);
#if PY_MAJOR_VERSION >= 3
        utf8_name = PyUnicode_AsUTF8String(name);
        if (!utf8_name) goto bad;
        s = PyBytes_AS_STRING(utf8_name);
        if (__pyx_import_star_set(item, name, s) < 0) goto bad;
        Py_DECREF(utf8_name); utf8_name = 0;
#else
        s = PyString_AsString(name);
        if (!s) goto bad;
        if (__pyx_import_star_set(item, name, s) < 0) goto bad;
#endif
    }
    ret = 0;

bad:
    Py_XDECREF(locals);
    Py_XDECREF(list);
#if PY_MAJOR_VERSION >= 3
    Py_XDECREF(utf8_name);
#endif
    return ret;
}


#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    __Pyx_NAMESTR("world"),
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_3, __pyx_k_3, sizeof(__pyx_k_3), 0, 0, 1, 1},
  {&__pyx_kp_s_4, __pyx_k_4, sizeof(__pyx_k_4), 0, 0, 1, 0},
  {&__pyx_n_s_5, __pyx_k_5, sizeof(__pyx_k_5), 0, 0, 1, 1},
  {&__pyx_n_s_6, __pyx_k_6, sizeof(__pyx_k_6), 0, 0, 1, 1},
  {&__pyx_n_s__ARMS, __pyx_k__ARMS, sizeof(__pyx_k__ARMS), 0, 0, 1, 1},
  {&__pyx_n_s__HEAD, __pyx_k__HEAD, sizeof(__pyx_k__HEAD), 0, 0, 1, 1},
  {&__pyx_n_s__InvalidData, __pyx_k__InvalidData, sizeof(__pyx_k__InvalidData), 0, 0, 1, 1},
  {&__pyx_n_s__LEGS, __pyx_k__LEGS, sizeof(__pyx_k__LEGS), 0, 0, 1, 1},
  {&__pyx_n_s__MELEE, __pyx_k__MELEE, sizeof(__pyx_k__MELEE), 0, 0, 1, 1},
  {&__pyx_n_s__TORSO, __pyx_k__TORSO, sizeof(__pyx_k__TORSO), 0, 0, 1, 1},
  {&__pyx_n_s____main__, __pyx_k____main__, sizeof(__pyx_k____main__), 0, 0, 1, 1},
  {&__pyx_n_s____test__, __pyx_k____test__, sizeof(__pyx_k____test__), 0, 0, 1, 1},
  {&__pyx_n_s__airborne, __pyx_k__airborne, sizeof(__pyx_k__airborne), 0, 0, 1, 1},
  {&__pyx_n_s__alive, __pyx_k__alive, sizeof(__pyx_k__alive), 0, 0, 1, 1},
  {&__pyx_n_s__append, __pyx_k__append, sizeof(__pyx_k__append), 0, 0, 1, 1},
  {&__pyx_n_s__callback, __pyx_k__callback, sizeof(__pyx_k__callback), 0, 0, 1, 1},
  {&__pyx_n_s__can_see, __pyx_k__can_see, sizeof(__pyx_k__can_see), 0, 0, 1, 1},
  {&__pyx_n_s__cast_ray, __pyx_k__cast_ray, sizeof(__pyx_k__cast_ray), 0, 0, 1, 1},
  {&__pyx_n_s__character, __pyx_k__character, sizeof(__pyx_k__character), 0, 0, 1, 1},
  {&__pyx_n_s__copy, __pyx_k__copy, sizeof(__pyx_k__copy), 0, 0, 1, 1},
  {&__pyx_n_s__crouch, __pyx_k__crouch, sizeof(__pyx_k__crouch), 0, 0, 1, 1},
  {&__pyx_n_s__delete, __pyx_k__delete, sizeof(__pyx_k__delete), 0, 0, 1, 1},
  {&__pyx_n_s__delete_object, __pyx_k__delete_object, sizeof(__pyx_k__delete_object), 0, 0, 1, 1},
  {&__pyx_n_s__down, __pyx_k__down, sizeof(__pyx_k__down), 0, 0, 1, 1},
  {&__pyx_n_s__e, __pyx_k__e, sizeof(__pyx_k__e), 0, 0, 1, 1},
  {&__pyx_n_s__f, __pyx_k__f, sizeof(__pyx_k__f), 0, 0, 1, 1},
  {&__pyx_n_s__fall_callback, __pyx_k__fall_callback, sizeof(__pyx_k__fall_callback), 0, 0, 1, 1},
  {&__pyx_n_s__fuse, __pyx_k__fuse, sizeof(__pyx_k__fuse), 0, 0, 1, 1},
  {&__pyx_n_s__get, __pyx_k__get, sizeof(__pyx_k__get), 0, 0, 1, 1},
  {&__pyx_n_s__get_damage, __pyx_k__get_damage, sizeof(__pyx_k__get_damage), 0, 0, 1, 1},
  {&__pyx_n_s__get_next_collision, __pyx_k__get_next_collision, sizeof(__pyx_k__get_next_collision), 0, 0, 1, 1},
  {&__pyx_n_s__grenade, __pyx_k__grenade, sizeof(__pyx_k__grenade), 0, 0, 1, 1},
  {&__pyx_n_s__hit_test, __pyx_k__hit_test, sizeof(__pyx_k__hit_test), 0, 0, 1, 1},
  {&__pyx_n_s__initialize, __pyx_k__initialize, sizeof(__pyx_k__initialize), 0, 0, 1, 1},
  {&__pyx_n_s__is_ref, __pyx_k__is_ref, sizeof(__pyx_k__is_ref), 0, 0, 1, 1},
  {&__pyx_n_s__is_zero, __pyx_k__is_zero, sizeof(__pyx_k__is_zero), 0, 0, 1, 1},
  {&__pyx_n_s__jump, __pyx_k__jump, sizeof(__pyx_k__jump), 0, 0, 1, 1},
  {&__pyx_n_s__klass, __pyx_k__klass, sizeof(__pyx_k__klass), 0, 0, 1, 1},
  {&__pyx_n_s__left, __pyx_k__left, sizeof(__pyx_k__left), 0, 0, 1, 1},
  {&__pyx_n_s__length, __pyx_k__length, sizeof(__pyx_k__length), 0, 0, 1, 1},
  {&__pyx_n_s__map, __pyx_k__map, sizeof(__pyx_k__map), 0, 0, 1, 1},
  {&__pyx_n_s__math, __pyx_k__math, sizeof(__pyx_k__math), 0, 0, 1, 1},
  {&__pyx_n_s__mb, __pyx_k__mb, sizeof(__pyx_k__mb), 0, 0, 1, 1},
  {&__pyx_n_s__mf, __pyx_k__mf, sizeof(__pyx_k__mf), 0, 0, 1, 1},
  {&__pyx_n_s__ml, __pyx_k__ml, sizeof(__pyx_k__ml), 0, 0, 1, 1},
  {&__pyx_n_s__mr, __pyx_k__mr, sizeof(__pyx_k__mr), 0, 0, 1, 1},
  {&__pyx_n_s__name, __pyx_k__name, sizeof(__pyx_k__name), 0, 0, 1, 1},
  {&__pyx_n_s__normal, __pyx_k__normal, sizeof(__pyx_k__normal), 0, 0, 1, 1},
  {&__pyx_n_s__object, __pyx_k__object, sizeof(__pyx_k__object), 0, 0, 1, 1},
  {&__pyx_n_s__objects, __pyx_k__objects, sizeof(__pyx_k__objects), 0, 0, 1, 1},
  {&__pyx_n_s__orientation, __pyx_k__orientation, sizeof(__pyx_k__orientation), 0, 0, 1, 1},
  {&__pyx_n_s__other, __pyx_k__other, sizeof(__pyx_k__other), 0, 0, 1, 1},
  {&__pyx_n_s__p, __pyx_k__p, sizeof(__pyx_k__p), 0, 0, 1, 1},
  {&__pyx_n_s__part, __pyx_k__part, sizeof(__pyx_k__part), 0, 0, 1, 1},
  {&__pyx_n_s__player, __pyx_k__player, sizeof(__pyx_k__player), 0, 0, 1, 1},
  {&__pyx_n_s__position, __pyx_k__position, sizeof(__pyx_k__position), 0, 0, 1, 1},
  {&__pyx_n_s__primary_fire, __pyx_k__primary_fire, sizeof(__pyx_k__primary_fire), 0, 0, 1, 1},
  {&__pyx_n_s__range, __pyx_k__range, sizeof(__pyx_k__range), 0, 0, 1, 1},
  {&__pyx_n_s__remove, __pyx_k__remove, sizeof(__pyx_k__remove), 0, 0, 1, 1},
  {&__pyx_n_s__reset, __pyx_k__reset, sizeof(__pyx_k__reset), 0, 0, 1, 1},
  {&__pyx_n_s__right, __pyx_k__right, sizeof(__pyx_k__right), 0, 0, 1, 1},
  {&__pyx_n_s__secondary_fire, __pyx_k__secondary_fire, sizeof(__pyx_k__secondary_fire), 0, 0, 1, 1},
  {&__pyx_n_s__set, __pyx_k__set, sizeof(__pyx_k__set), 0, 0, 1, 1},
  {&__pyx_n_s__set_crouch, __pyx_k__set_crouch, sizeof(__pyx_k__set_crouch), 0, 0, 1, 1},
  {&__pyx_n_s__set_dead, __pyx_k__set_dead, sizeof(__pyx_k__set_dead), 0, 0, 1, 1},
  {&__pyx_n_s__set_position, __pyx_k__set_position, sizeof(__pyx_k__set_position), 0, 0, 1, 1},
  {&__pyx_n_s__set_vector, __pyx_k__set_vector, sizeof(__pyx_k__set_vector), 0, 0, 1, 1},
  {&__pyx_n_s__sneak, __pyx_k__sneak, sizeof(__pyx_k__sneak), 0, 0, 1, 1},
  {&__pyx_n_s__sprint, __pyx_k__sprint, sizeof(__pyx_k__sprint), 0, 0, 1, 1},
  {&__pyx_n_s__team, __pyx_k__team, sizeof(__pyx_k__team), 0, 0, 1, 1},
  {&__pyx_n_s__time, __pyx_k__time, sizeof(__pyx_k__time), 0, 0, 1, 1},
  {&__pyx_n_s__tolerance, __pyx_k__tolerance, sizeof(__pyx_k__tolerance), 0, 0, 1, 1},
  {&__pyx_n_s__up, __pyx_k__up, sizeof(__pyx_k__up), 0, 0, 1, 1},
  {&__pyx_n_s__update, __pyx_k__update, sizeof(__pyx_k__update), 0, 0, 1, 1},
  {&__pyx_n_s__v, __pyx_k__v, sizeof(__pyx_k__v), 0, 0, 1, 1},
  {&__pyx_n_s__value, __pyx_k__value, sizeof(__pyx_k__value), 0, 0, 1, 1},
  {&__pyx_n_s__velocity, __pyx_k__velocity, sizeof(__pyx_k__velocity), 0, 0, 1, 1},
  {&__pyx_n_s__wade, __pyx_k__wade, sizeof(__pyx_k__wade), 0, 0, 1, 1},
  {&__pyx_n_s__weapon, __pyx_k__weapon, sizeof(__pyx_k__weapon), 0, 0, 1, 1},
  {&__pyx_n_s__world, __pyx_k__world, sizeof(__pyx_k__world), 0, 0, 1, 1},
  {&__pyx_n_s__x, __pyx_k__x, sizeof(__pyx_k__x), 0, 0, 1, 1},
  {&__pyx_n_s__x1, __pyx_k__x1, sizeof(__pyx_k__x1), 0, 0, 1, 1},
  {&__pyx_n_s__x2, __pyx_k__x2, sizeof(__pyx_k__x2), 0, 0, 1, 1},
  {&__pyx_n_s__xrange, __pyx_k__xrange, sizeof(__pyx_k__xrange), 0, 0, 1, 1},
  {&__pyx_n_s__y, __pyx_k__y, sizeof(__pyx_k__y), 0, 0, 1, 1},
  {&__pyx_n_s__y1, __pyx_k__y1, sizeof(__pyx_k__y1), 0, 0, 1, 1},
  {&__pyx_n_s__y2, __pyx_k__y2, sizeof(__pyx_k__y2), 0, 0, 1, 1},
  {&__pyx_n_s__z, __pyx_k__z, sizeof(__pyx_k__z), 0, 0, 1, 1},
  {&__pyx_n_s__z1, __pyx_k__z1, sizeof(__pyx_k__z1), 0, 0, 1, 1},
  {&__pyx_n_s__z2, __pyx_k__z2, sizeof(__pyx_k__z2), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  #if PY_MAJOR_VERSION >= 3
  __pyx_builtin_xrange = __Pyx_GetName(__pyx_b, __pyx_n_s__range); if (!__pyx_builtin_xrange) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #else
  __pyx_builtin_xrange = __Pyx_GetName(__pyx_b, __pyx_n_s__xrange); if (!__pyx_builtin_xrange) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants");
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initworld(void); /*proto*/
PyMODINIT_FUNC initworld(void)
#else
PyMODINIT_FUNC PyInit_world(void); /*proto*/
PyMODINIT_FUNC PyInit_world(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  #if CYTHON_REFNANNY
  void* __pyx_refnanny = NULL;
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  __pyx_refnanny = __Pyx_RefNanny->SetupContext("PyMODINIT_FUNC PyInit_world(void)", __LINE__, __FILE__);
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __pyx_binding_PyCFunctionType_USED
  if (__pyx_binding_PyCFunctionType_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4(__Pyx_NAMESTR("world"), __pyx_methods, 0, 0, PYTHON_API_VERSION);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (!__pyx_m) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  #if PY_MAJOR_VERSION < 3
  Py_INCREF(__pyx_m);
  #endif
  __pyx_b = PyImport_AddModule(__Pyx_NAMESTR(__Pyx_BUILTIN_MODULE_NAME));
  if (!__pyx_b) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  if (__Pyx_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_module_is_main_pyspades__world) {
    if (__Pyx_SetAttrString(__pyx_m, "__name__", __pyx_n_s____main__) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (unlikely(__Pyx_InitCachedConstants() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  __pyx_vtabptr_8pyspades_5world_Object = &__pyx_vtable_8pyspades_5world_Object;
  __pyx_vtable_8pyspades_5world_Object.update = (int (*)(struct __pyx_obj_8pyspades_5world_Object *, double))__pyx_f_8pyspades_5world_6Object_update;
  if (PyType_Ready(&__pyx_type_8pyspades_5world_Object) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pyspades_5world_Object.tp_dict, __pyx_vtabptr_8pyspades_5world_Object) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Object", (PyObject *)&__pyx_type_8pyspades_5world_Object) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pyspades_5world_Object = &__pyx_type_8pyspades_5world_Object;
  __pyx_vtabptr_8pyspades_5world_World = &__pyx_vtable_8pyspades_5world_World;
  __pyx_vtable_8pyspades_5world_World.delete_object = (PyObject *(*)(struct __pyx_obj_8pyspades_5world_World *, struct __pyx_obj_8pyspades_5world_Object *, int __pyx_skip_dispatch))__pyx_f_8pyspades_5world_5World_delete_object;
  if (PyType_Ready(&__pyx_type_8pyspades_5world_World) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 360; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pyspades_5world_World.tp_dict, __pyx_vtabptr_8pyspades_5world_World) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 360; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "World", (PyObject *)&__pyx_type_8pyspades_5world_World) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 360; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pyspades_5world_World = &__pyx_type_8pyspades_5world_World;
  __pyx_vtabptr_8pyspades_5world_Grenade = &__pyx_vtable_8pyspades_5world_Grenade;
  __pyx_vtable_8pyspades_5world_Grenade.__pyx_base = *__pyx_vtabptr_8pyspades_5world_Object;
  __pyx_vtable_8pyspades_5world_Grenade.__pyx_base.update = (int (*)(struct __pyx_obj_8pyspades_5world_Object *, double))__pyx_f_8pyspades_5world_7Grenade_update;
  __pyx_vtable_8pyspades_5world_Grenade.hit_test = (int (*)(struct __pyx_obj_8pyspades_5world_Grenade *, struct __pyx_obj_8pyspades_6common_Vertex3 *))__pyx_f_8pyspades_5world_7Grenade_hit_test;
  __pyx_vtable_8pyspades_5world_Grenade.get_next_collision = (PyObject *(*)(struct __pyx_obj_8pyspades_5world_Grenade *, double, int __pyx_skip_dispatch))__pyx_f_8pyspades_5world_7Grenade_get_next_collision;
  __pyx_vtable_8pyspades_5world_Grenade.get_damage = (double (*)(struct __pyx_obj_8pyspades_5world_Grenade *, struct __pyx_obj_8pyspades_6common_Vertex3 *, int __pyx_skip_dispatch))__pyx_f_8pyspades_5world_7Grenade_get_damage;
  __pyx_type_8pyspades_5world_Grenade.tp_base = __pyx_ptype_8pyspades_5world_Object;
  if (PyType_Ready(&__pyx_type_8pyspades_5world_Grenade) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pyspades_5world_Grenade.tp_dict, __pyx_vtabptr_8pyspades_5world_Grenade) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Grenade", (PyObject *)&__pyx_type_8pyspades_5world_Grenade) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pyspades_5world_Grenade = &__pyx_type_8pyspades_5world_Grenade;
  __pyx_vtabptr_8pyspades_5world_Character = &__pyx_vtable_8pyspades_5world_Character;
  __pyx_vtable_8pyspades_5world_Character.__pyx_base = *__pyx_vtabptr_8pyspades_5world_Object;
  __pyx_vtable_8pyspades_5world_Character.__pyx_base.update = (int (*)(struct __pyx_obj_8pyspades_5world_Object *, double))__pyx_f_8pyspades_5world_9Character_update;
  __pyx_vtable_8pyspades_5world_Character.can_see = (int (*)(struct __pyx_obj_8pyspades_5world_Character *, float, float, float, int __pyx_skip_dispatch))__pyx_f_8pyspades_5world_9Character_can_see;
  __pyx_vtable_8pyspades_5world_Character.cast_ray = (PyObject *(*)(struct __pyx_obj_8pyspades_5world_Character *, int __pyx_skip_dispatch, struct __pyx_opt_args_8pyspades_5world_9Character_cast_ray *__pyx_optional_args))__pyx_f_8pyspades_5world_9Character_cast_ray;
  __pyx_type_8pyspades_5world_Character.tp_base = __pyx_ptype_8pyspades_5world_Object;
  if (PyType_Ready(&__pyx_type_8pyspades_5world_Character) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_8pyspades_5world_Character.tp_dict, __pyx_vtabptr_8pyspades_5world_Character) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Character", (PyObject *)&__pyx_type_8pyspades_5world_Character) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pyspades_5world_Character = &__pyx_type_8pyspades_5world_Character;
  /*--- Type import code ---*/
  __pyx_ptype_8pyspades_3vxl_VXLData = __Pyx_ImportType("pyspades.vxl", "VXLData", sizeof(struct __pyx_obj_8pyspades_3vxl_VXLData), 1); if (unlikely(!__pyx_ptype_8pyspades_3vxl_VXLData)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_8pyspades_3vxl_VXLData = (struct __pyx_vtabstruct_8pyspades_3vxl_VXLData*)__Pyx_GetVtable(__pyx_ptype_8pyspades_3vxl_VXLData->tp_dict); if (unlikely(!__pyx_vtabptr_8pyspades_3vxl_VXLData)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pyspades_6common_Quaternion = __Pyx_ImportType("pyspades.common", "Quaternion", sizeof(struct __pyx_obj_8pyspades_6common_Quaternion), 1); if (unlikely(!__pyx_ptype_8pyspades_6common_Quaternion)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_8pyspades_6common_Quaternion = (struct __pyx_vtabstruct_8pyspades_6common_Quaternion*)__Pyx_GetVtable(__pyx_ptype_8pyspades_6common_Quaternion->tp_dict); if (unlikely(!__pyx_vtabptr_8pyspades_6common_Quaternion)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 46; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_8pyspades_6common_Vertex3 = __Pyx_ImportType("pyspades.common", "Vertex3", sizeof(struct __pyx_obj_8pyspades_6common_Vertex3), 1); if (unlikely(!__pyx_ptype_8pyspades_6common_Vertex3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_vtabptr_8pyspades_6common_Vertex3 = (struct __pyx_vtabstruct_8pyspades_6common_Vertex3*)__Pyx_GetVtable(__pyx_ptype_8pyspades_6common_Vertex3->tp_dict); if (unlikely(!__pyx_vtabptr_8pyspades_6common_Vertex3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "pyspades\world.pyx":18
 * # along with pyspades.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * import math             # <<<<<<<<<<<<<<
 * import time
 * from pyspades.vxl cimport VXLData, MapData
 */
  __pyx_t_1 = __Pyx_Import(((PyObject *)__pyx_n_s__math), 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__math, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pyspades\world.pyx":19
 * 
 * import math
 * import time             # <<<<<<<<<<<<<<
 * from pyspades.vxl cimport VXLData, MapData
 * from pyspades.common cimport Vertex3, create_proxy_vector
 */
  __pyx_t_1 = __Pyx_Import(((PyObject *)__pyx_n_s__time), 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__time, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 19; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "pyspades\world.pyx":22
 * from pyspades.vxl cimport VXLData, MapData
 * from pyspades.common cimport Vertex3, create_proxy_vector
 * from pyspades.constants import *             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "math.h":
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_INCREF(((PyObject *)__pyx_n_s_6));
  PyList_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_n_s_6));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s_6));
  __pyx_t_2 = __Pyx_Import(((PyObject *)__pyx_n_s_5), ((PyObject *)__pyx_t_1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  if (__pyx_import_star(__pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 22; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "pyspades\world.pyx":145
 *         self.player.mr = right
 * 
 *     def set_position(self, x, y, z, reset = False):             # <<<<<<<<<<<<<<
 *         self.position.set(x, y, z)
 *         self.player.p.x = self.player.e.x = x
 */
  __pyx_t_2 = __Pyx_PyBool_FromLong(0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_k_1 = __pyx_t_2;
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pyspades\world.pyx":165
 *             x, y, z)
 * 
 *     cpdef cast_ray(self, length = 32.0):             # <<<<<<<<<<<<<<
 *         cdef Vertex3 position = self.position
 *         cdef Vertex3 direction = self.orientation.copy().normal()
 */
  __pyx_t_2 = PyFloat_FromDouble(32.0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_k_2 = __pyx_t_2;
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "pyspades\world.pyx":1
 * # Copyright (c) Mathias Kaerlev 2011-2012.             # <<<<<<<<<<<<<<
 * 
 * # This file is part of pyspades.
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s____test__, ((PyObject *)__pyx_t_2)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;

  /* "pyspades\common.pxd":66
 *     return new_vector
 * 
 * cdef inline Vertex3 create_vertex3(float x, float y, float z):             # <<<<<<<<<<<<<<
 *     # faster way of creating Vertex3 instances
 *     cdef Vertex3 new_vertex = Vertex3(is_ref = True)
 */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    __Pyx_AddTraceback("init pyspades.world");
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init pyspades.world");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* Runtime support code */

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name) {
    PyObject *result;
    result = PyObject_GetAttr(dict, name);
    if (!result)
        PyErr_SetObject(PyExc_NameError, name);
    return result;
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AS_STRING(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;

    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
        } else {
            #if PY_MAJOR_VERSION < 3
            if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key))) {
            #else
            if (unlikely(!PyUnicode_CheckExact(key)) && unlikely(!PyUnicode_Check(key))) {
            #endif
                goto invalid_keyword_type;
            } else {
                for (name = first_kw_arg; *name; name++) {
                    #if PY_MAJOR_VERSION >= 3
                    if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
                        PyUnicode_Compare(**name, key) == 0) break;
                    #else
                    if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
                        _PyString_Eq(**name, key)) break;
                    #endif
                }
                if (*name) {
                    values[name-argnames] = value;
                } else {
                    /* unexpected keyword found */
                    for (name=argnames; name != first_kw_arg; name++) {
                        if (**name == key) goto arg_passed_twice;
                        #if PY_MAJOR_VERSION >= 3
                        if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
                            PyUnicode_Compare(**name, key) == 0) goto arg_passed_twice;
                        #else
                        if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
                            _PyString_Eq(**name, key)) goto arg_passed_twice;
                        #endif
                    }
                    if (kwds2) {
                        if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
                    } else {
                        goto invalid_keyword;
                    }
                }
            }
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, **name);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *number, *more_or_less;

    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    number = (num_expected == 1) ? "" : "s";
    PyErr_Format(PyExc_TypeError,
        #if PY_VERSION_HEX < 0x02050000
            "%s() takes %s %d positional argument%s (%d given)",
        #else
            "%s() takes %s %zd positional argument%s (%zd given)",
        #endif
        func_name, more_or_less, num_expected, number, num_found);
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key)))
        #else
        if (unlikely(!PyUnicode_CheckExact(key)) && unlikely(!PyUnicode_Check(key)))
        #endif
            goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    return 0;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (!type) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (Py_TYPE(obj) == type) return 1;
    }
    else {
        if (PyObject_TypeCheck(obj, type)) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%s' has incorrect type (expected %s, got %s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();

    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}

static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;

    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}


#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb) {
    Py_XINCREF(type);
    Py_XINCREF(value);
    Py_XINCREF(tb);
    /* First, check the traceback argument, replacing None with NULL. */
    if (tb == Py_None) {
        Py_DECREF(tb);
        tb = 0;
    }
    else if (tb != NULL && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto raise_error;
    }
    /* Next, replace a missing value with None */
    if (value == NULL) {
        value = Py_None;
        Py_INCREF(value);
    }
    #if PY_VERSION_HEX < 0x02050000
    if (!PyClass_Check(type))
    #else
    if (!PyType_Check(type))
    #endif
    {
        /* Raising an instance.  The value should be a dummy. */
        if (value != Py_None) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        /* Normalize to raise <class>, <instance> */
        Py_DECREF(value);
        value = type;
        #if PY_VERSION_HEX < 0x02050000
            if (PyInstance_Check(type)) {
                type = (PyObject*) ((PyInstanceObject*)type)->in_class;
                Py_INCREF(type);
            }
            else {
                type = 0;
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception must be an old-style class or instance");
                goto raise_error;
            }
        #else
            type = (PyObject*) Py_TYPE(type);
            Py_INCREF(type);
            if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception class must be a subclass of BaseException");
                goto raise_error;
            }
        #endif
    }

    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}

#else /* Python 3+ */

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb) {
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;

    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (!PyExceptionClass_Check(type)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }

    PyErr_SetObject(type, value);

    if (tb) {
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
    }

bad:
    return;
}
#endif

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list) {
    PyObject *py_import = 0;
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    py_import = __Pyx_GetAttrString(__pyx_b, "__import__");
    if (!py_import)
        goto bad;
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    module = PyObject_CallFunctionObjArgs(py_import,
        name, global_dict, empty_dict, list, NULL);
bad:
    Py_XDECREF(empty_list);
    Py_XDECREF(py_import);
    Py_XDECREF(empty_dict);
    return module;
}

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject* x) {
    const unsigned char neg_one = (unsigned char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned char" :
                    "value too large to convert to unsigned char");
            }
            return (unsigned char)-1;
        }
        return (unsigned char)val;
    }
    return (unsigned char)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject* x) {
    const unsigned short neg_one = (unsigned short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned short" :
                    "value too large to convert to unsigned short");
            }
            return (unsigned short)-1;
        }
        return (unsigned short)val;
    }
    return (unsigned short)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject* x) {
    const unsigned int neg_one = (unsigned int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned int" :
                    "value too large to convert to unsigned int");
            }
            return (unsigned int)-1;
        }
        return (unsigned int)val;
    }
    return (unsigned int)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject* x) {
    const char neg_one = (char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to char" :
                    "value too large to convert to char");
            }
            return (char)-1;
        }
        return (char)val;
    }
    return (char)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject* x) {
    const short neg_one = (short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to short" :
                    "value too large to convert to short");
            }
            return (short)-1;
        }
        return (short)val;
    }
    return (short)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject* x) {
    const signed char neg_one = (signed char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed char" :
                    "value too large to convert to signed char");
            }
            return (signed char)-1;
        }
        return (signed char)val;
    }
    return (signed char)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject* x) {
    const signed short neg_one = (signed short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed short" :
                    "value too large to convert to signed short");
            }
            return (signed short)-1;
        }
        return (signed short)val;
    }
    return (signed short)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject* x) {
    const signed int neg_one = (signed int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed int" :
                    "value too large to convert to signed int");
            }
            return (signed int)-1;
        }
        return (signed int)val;
    }
    return (signed int)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject* x) {
    const unsigned long neg_one = (unsigned long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned long");
            return (unsigned long)-1;
        }
        return (unsigned long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned long");
                return (unsigned long)-1;
            }
            return PyLong_AsUnsignedLong(x);
        } else {
            return PyLong_AsLong(x);
        }
    } else {
        unsigned long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned long)-1;
        val = __Pyx_PyInt_AsUnsignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject* x) {
    const unsigned PY_LONG_LONG neg_one = (unsigned PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned PY_LONG_LONG");
            return (unsigned PY_LONG_LONG)-1;
        }
        return (unsigned PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned PY_LONG_LONG");
                return (unsigned PY_LONG_LONG)-1;
            }
            return PyLong_AsUnsignedLongLong(x);
        } else {
            return PyLong_AsLongLong(x);
        }
    } else {
        unsigned PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsUnsignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject* x) {
    const long neg_one = (long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to long");
            return (long)-1;
        }
        return (long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to long");
                return (long)-1;
            }
            return PyLong_AsUnsignedLong(x);
        } else {
            return PyLong_AsLong(x);
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long)-1;
        val = __Pyx_PyInt_AsLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) {
    const PY_LONG_LONG neg_one = (PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to PY_LONG_LONG");
            return (PY_LONG_LONG)-1;
        }
        return (PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to PY_LONG_LONG");
                return (PY_LONG_LONG)-1;
            }
            return PyLong_AsUnsignedLongLong(x);
        } else {
            return PyLong_AsLongLong(x);
        }
    } else {
        PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject* x) {
    const signed long neg_one = (signed long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed long");
            return (signed long)-1;
        }
        return (signed long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed long");
                return (signed long)-1;
            }
            return PyLong_AsUnsignedLong(x);
        } else {
            return PyLong_AsLong(x);
        }
    } else {
        signed long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed long)-1;
        val = __Pyx_PyInt_AsSignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject* x) {
    const signed PY_LONG_LONG neg_one = (signed PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed PY_LONG_LONG");
            return (signed PY_LONG_LONG)-1;
        }
        return (signed PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed PY_LONG_LONG");
                return (signed PY_LONG_LONG)-1;
            }
            return PyLong_AsUnsignedLongLong(x);
        } else {
            return PyLong_AsLongLong(x);
        }
    } else {
        signed PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsSignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static void __Pyx_WriteUnraisable(const char *name) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
}

static CYTHON_INLINE int __Pyx_StrEq(const char *s1, const char *s2) {
     while (*s1 != '\0' && *s1 == *s2) { s1++; s2++; }
     return *s1 == *s2;
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000 && !(PY_MAJOR_VERSION==3&&PY_MINOR_VERSION==0)
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItemString(dict, "__pyx_vtable__", ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    long size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];

    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    #if PY_MAJOR_VERSION < 3
    py_name = PyString_FromString(class_name);
    #else
    py_name = PyUnicode_FromString(class_name);
    #endif
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%s.%s is not a type object",
            module_name, class_name);
        goto bad;
    }
    if (!strict && ((PyTypeObject *)result)->tp_basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        #if PY_VERSION_HEX < 0x02050000
        PyErr_Warn(NULL, warning);
        #else
        PyErr_WarnEx(NULL, warning, 0);
        #endif
    }
    else if (((PyTypeObject *)result)->tp_basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%s.%s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;

    #if PY_MAJOR_VERSION < 3
    py_name = PyString_FromString(name);
    #else
    py_name = PyUnicode_FromString(name);
    #endif
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

static void* __Pyx_GetVtable(PyObject *dict) {
    void* ptr;
    PyObject *ob = PyMapping_GetItemString(dict, (char *)"__pyx_vtable__");
    if (!ob)
        goto bad;
#if PY_VERSION_HEX >= 0x02070000 && !(PY_MAJOR_VERSION==3&&PY_MINOR_VERSION==0)
    ptr = PyCapsule_GetPointer(ob, 0);
#else
    ptr = PyCObject_AsVoidPtr(ob);
#endif
    if (!ptr && !PyErr_Occurred())
        PyErr_SetString(PyExc_RuntimeError, "invalid vtable found for imported type");
    Py_DECREF(ob);
    return ptr;
bad:
    Py_XDECREF(ob);
    return NULL;
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"

static void __Pyx_AddTraceback(const char *funcname) {
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    PyObject *py_globals = 0;
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;

    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(__pyx_filename);
    #else
    py_srcfile = PyUnicode_FromString(__pyx_filename);
    #endif
    if (!py_srcfile) goto bad;
    if (__pyx_clineno) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, __pyx_clineno);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, __pyx_clineno);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_globals = PyModule_GetDict(__pyx_m);
    if (!py_globals) goto bad;
    py_code = PyCode_New(
        0,            /*int argcount,*/
        #if PY_MAJOR_VERSION >= 3
        0,            /*int kwonlyargcount,*/
        #endif
        0,            /*int nlocals,*/
        0,            /*int stacksize,*/
        0,            /*int flags,*/
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple,  /*PyObject *consts,*/
        __pyx_empty_tuple,  /*PyObject *names,*/
        __pyx_empty_tuple,  /*PyObject *varnames,*/
        __pyx_empty_tuple,  /*PyObject *freevars,*/
        __pyx_empty_tuple,  /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        __pyx_lineno,   /*int firstlineno,*/
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    if (!py_code) goto bad;
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        py_globals,          /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = __pyx_lineno;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else  /* Python 3+ has unicode identifiers */
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

/* Type Conversion Functions */

static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}

static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_VERSION_HEX < 0x03000000
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_VERSION_HEX < 0x03000000
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%s__ returned non-%s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}

static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject* x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}

static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
#if PY_VERSION_HEX < 0x02050000
   if (ival <= LONG_MAX)
       return PyInt_FromLong((long)ival);
   else {
       unsigned char *bytes = (unsigned char *) &ival;
       int one = 1; int little = (int)*(unsigned char*)&one;
       return _PyLong_FromByteArray(bytes, sizeof(size_t), little, 0);
   }
#else
   return PyInt_FromSize_t(ival);
#endif
}

static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject* x) {
   unsigned PY_LONG_LONG val = __Pyx_PyInt_AsUnsignedLongLong(x);
   if (unlikely(val == (unsigned PY_LONG_LONG)-1 && PyErr_Occurred())) {
       return (size_t)-1;
   } else if (unlikely(val != (unsigned PY_LONG_LONG)(size_t)val)) {
       PyErr_SetString(PyExc_OverflowError,
                       "value too large to convert to size_t");
       return (size_t)-1;
   }
   return (size_t)val;
}


#endif /* Py_PYTHON_H */
